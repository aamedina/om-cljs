;; Analyzed by ClojureScript 0.0-2816
{:defs {->app {:protocol-inline nil, :name bridge-commander.dev/->app, :variadic false, :file "dev/bridge_commander/dev.cljs", :method-params ([cursor__18798__auto__] [cursor__18798__auto__ m20637]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__18798__auto__] [cursor__18798__auto__ m20637])), :test true}, ->t20648 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name bridge-commander.dev/->t20648, :variadic false, :file "dev/bridge_commander/dev.cljs", :method-params ([owner data G__20642 input-checker20640 input-schema20639 validate__17010__auto__ output-checker20641 G__20643 app ufv__ output-schema20638 meta20649]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag bridge-commander.dev/t20648, :variadic false, :max-fixed-arity 12}), :line 11, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner data G__20642 input-checker20640 input-schema20639 validate__17010__auto__ output-checker20641 G__20643 app ufv__ output-schema20638 meta20649])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t20648 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name bridge-commander.dev/t20648, :file "dev/bridge_commander/dev.cljs", :type true, :anonymous true, :column 1, :line 11, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t20644 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name bridge-commander.dev/->t20644, :variadic false, :file "dev/bridge_commander/dev.cljs", :method-params ([owner data G__20642 input-checker20640 input-schema20639 validate__17010__auto__ output-checker20641 G__20643 app ufv__ output-schema20638 meta20645]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag bridge-commander.dev/t20644, :variadic false, :max-fixed-arity 12}), :line 11, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner data G__20642 input-checker20640 input-schema20639 validate__17010__auto__ output-checker20641 G__20643 app ufv__ output-schema20638 meta20645])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t20644 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name bridge-commander.dev/t20644, :file "dev/bridge_commander/dev.cljs", :type true, :anonymous true, :column 1, :line 11, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app {:schema (schema.core/make-fn-schema output-schema20638 [input-schema20639]), :protocol-inline nil, :name bridge-commander.dev/app, :variadic false, :file "dev/bridge_commander/dev.cljs", :end-column 19, :method-params ([G__20642 G__20643]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag bridge-commander.dev/t20648, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, app-state {:file "dev/bridge_commander/dev.cljs", :line 9, :column 1, :end-line 9, :end-column 20, :test true, :name bridge-commander.dev/app-state}}, :name bridge-commander.dev, :doc nil, :excludes #{}, :use-macros {sel1 dommy.core, html sablono.core, defcomponent om-tools.core}, :require-macros {dommy.core dommy.core, om-tools.core om-tools.core, html sablono.core, sablono.core sablono.core, om.core om.core, om om.core}, :uses nil, :requires {weasel.repl weasel.repl, html sablono.core, om-tools.core om-tools.core, sablono.core sablono.core, figwheel.client figwheel.client, om.core om.core, figwheel figwheel.client, dommy.core dommy.core, om om.core, repl weasel.repl}, :imports nil}