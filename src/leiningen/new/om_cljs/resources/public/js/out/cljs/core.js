// Compiled by ClojureScript 0.0-2816 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2816";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__22091__delegate = function (args){
return console.log.apply(console,(function (){var G__22090 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__22090) : cljs.core.into_array.call(null,G__22090));
})());
};
var G__22091 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22092__i = 0, G__22092__a = new Array(arguments.length -  0);
while (G__22092__i < G__22092__a.length) {G__22092__a[G__22092__i] = arguments[G__22092__i + 0]; ++G__22092__i;}
  args = new cljs.core.IndexedSeq(G__22092__a,0);
} 
return G__22091__delegate.call(this,args);};
G__22091.cljs$lang$maxFixedArity = 0;
G__22091.cljs$lang$applyTo = (function (arglist__22093){
var args = cljs.core.seq(arglist__22093);
return G__22091__delegate(args);
});
G__22091.cljs$core$IFn$_invoke$arity$variadic = G__22091__delegate;
return G__22091;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__22095 = x;
return goog.isString(G__22095);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__22097 = x__$1;
return goog.typeOf(G__22097);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__14429__auto__ = ty;
if(cljs.core.truth_(and__14429__auto__)){
return ty.cljs$lang$type;
} else {
return and__14429__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__22099 = obj;
return goog.typeOf(G__22099);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__22101 = Symbol;
return goog.typeOf(G__22101);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__15328__auto___22103 = len;
var i_22104 = (0);
while(true){
if((i_22104 < n__15328__auto___22103)){
(new_arr[i_22104] = (arr[i_22104]));

var G__22105 = (i_22104 + (1));
i_22104 = G__22105;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__22106 = (i + (1));
i = G__22106;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__22115__delegate = function (array,i,idxs){
var G__22112 = aget;
var G__22113 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__22114 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__22112,G__22113,G__22114) : cljs.core.apply.call(null,G__22112,G__22113,G__22114));
};
var G__22115 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__22116__i = 0, G__22116__a = new Array(arguments.length -  2);
while (G__22116__i < G__22116__a.length) {G__22116__a[G__22116__i] = arguments[G__22116__i + 2]; ++G__22116__i;}
  idxs = new cljs.core.IndexedSeq(G__22116__a,0);
} 
return G__22115__delegate.call(this,array,i,idxs);};
G__22115.cljs$lang$maxFixedArity = 2;
G__22115.cljs$lang$applyTo = (function (arglist__22117){
var array = cljs.core.first(arglist__22117);
arglist__22117 = cljs.core.next(arglist__22117);
var i = cljs.core.first(arglist__22117);
var idxs = cljs.core.rest(arglist__22117);
return G__22115__delegate(array,i,idxs);
});
G__22115.cljs$core$IFn$_invoke$arity$variadic = G__22115__delegate;
return G__22115;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__22118 = null;
if (arguments.length > 2) {
var G__22119__i = 0, G__22119__a = new Array(arguments.length -  2);
while (G__22119__i < G__22119__a.length) {G__22119__a[G__22119__i] = arguments[G__22119__i + 2]; ++G__22119__i;}
G__22118 = new cljs.core.IndexedSeq(G__22119__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__22118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__22128__delegate = function (array,idx,idx2,idxv){
var G__22124 = aset;
var G__22125 = (array[idx]);
var G__22126 = idx2;
var G__22127 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__22124,G__22125,G__22126,G__22127) : cljs.core.apply.call(null,G__22124,G__22125,G__22126,G__22127));
};
var G__22128 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__22129__i = 0, G__22129__a = new Array(arguments.length -  3);
while (G__22129__i < G__22129__a.length) {G__22129__a[G__22129__i] = arguments[G__22129__i + 3]; ++G__22129__i;}
  idxv = new cljs.core.IndexedSeq(G__22129__a,0);
} 
return G__22128__delegate.call(this,array,idx,idx2,idxv);};
G__22128.cljs$lang$maxFixedArity = 3;
G__22128.cljs$lang$applyTo = (function (arglist__22130){
var array = cljs.core.first(arglist__22130);
arglist__22130 = cljs.core.next(arglist__22130);
var idx = cljs.core.first(arglist__22130);
arglist__22130 = cljs.core.next(arglist__22130);
var idx2 = cljs.core.first(arglist__22130);
var idxv = cljs.core.rest(arglist__22130);
return G__22128__delegate(array,idx,idx2,idxv);
});
G__22128.cljs$core$IFn$_invoke$arity$variadic = G__22128__delegate;
return G__22128;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__22131 = null;
if (arguments.length > 3) {
var G__22132__i = 0, G__22132__a = new Array(arguments.length -  3);
while (G__22132__i < G__22132__a.length) {G__22132__a[G__22132__i] = arguments[G__22132__i + 3]; ++G__22132__i;}
G__22131 = new cljs.core.IndexedSeq(G__22132__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__22131);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__22138 = (function (a,x){
a.push(x);

return a;
});
var G__22139 = [];
var G__22140 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22138,G__22139,G__22140) : cljs.core.reduce.call(null,G__22138,G__22139,G__22140));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__22141__i = 0, G__22141__a = new Array(arguments.length -  2);
while (G__22141__i < G__22141__a.length) {G__22141__a[G__22141__i] = arguments[G__22141__i + 2]; ++G__22141__i;}
  args = new cljs.core.IndexedSeq(G__22141__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__22142){
var obj = cljs.core.first(arglist__22142);
arglist__22142 = cljs.core.next(arglist__22142);
var s = cljs.core.first(arglist__22142);
var args = cljs.core.rest(arglist__22142);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj22144 = {};
return obj22144;
})();


cljs.core.IFn = (function (){var obj22146 = {};
return obj22146;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22192 = x__15085__auto__;
return goog.typeOf(G__22192);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22194 = x__15085__auto__;
return goog.typeOf(G__22194);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22196 = x__15085__auto__;
return goog.typeOf(G__22196);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22198 = x__15085__auto__;
return goog.typeOf(G__22198);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22200 = x__15085__auto__;
return goog.typeOf(G__22200);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22202 = x__15085__auto__;
return goog.typeOf(G__22202);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22204 = x__15085__auto__;
return goog.typeOf(G__22204);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22206 = x__15085__auto__;
return goog.typeOf(G__22206);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22208 = x__15085__auto__;
return goog.typeOf(G__22208);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22210 = x__15085__auto__;
return goog.typeOf(G__22210);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22212 = x__15085__auto__;
return goog.typeOf(G__22212);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22214 = x__15085__auto__;
return goog.typeOf(G__22214);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22216 = x__15085__auto__;
return goog.typeOf(G__22216);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22218 = x__15085__auto__;
return goog.typeOf(G__22218);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22220 = x__15085__auto__;
return goog.typeOf(G__22220);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22222 = x__15085__auto__;
return goog.typeOf(G__22222);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22224 = x__15085__auto__;
return goog.typeOf(G__22224);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22226 = x__15085__auto__;
return goog.typeOf(G__22226);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22228 = x__15085__auto__;
return goog.typeOf(G__22228);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22230 = x__15085__auto__;
return goog.typeOf(G__22230);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22232 = x__15085__auto__;
return goog.typeOf(G__22232);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._invoke[(function (){var G__22234 = x__15085__auto__;
return goog.typeOf(G__22234);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._invoke["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj22236 = {};
return obj22236;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__14429__auto__ = value;
if(and__14429__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__14429__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__15085__auto__ = (((value == null))?null:value);
return (function (){var or__14441__auto__ = (cljs.core._clone[(function (){var G__22240 = x__15085__auto__;
return goog.typeOf(G__22240);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._clone["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj22242 = {};
return obj22242;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._count[(function (){var G__22246 = x__15085__auto__;
return goog.typeOf(G__22246);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._count["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj22248 = {};
return obj22248;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._empty[(function (){var G__22252 = x__15085__auto__;
return goog.typeOf(G__22252);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._empty["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj22254 = {};
return obj22254;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._conj[(function (){var G__22258 = x__15085__auto__;
return goog.typeOf(G__22258);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._conj["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj22260 = {};
return obj22260;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._nth[(function (){var G__22266 = x__15085__auto__;
return goog.typeOf(G__22266);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._nth["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._nth[(function (){var G__22268 = x__15085__auto__;
return goog.typeOf(G__22268);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._nth["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj22270 = {};
return obj22270;
})();


cljs.core.ISeq = (function (){var obj22272 = {};
return obj22272;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._first[(function (){var G__22276 = x__15085__auto__;
return goog.typeOf(G__22276);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._first["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._rest[(function (){var G__22280 = x__15085__auto__;
return goog.typeOf(G__22280);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._rest["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj22282 = {};
return obj22282;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._next[(function (){var G__22286 = x__15085__auto__;
return goog.typeOf(G__22286);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._next["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj22288 = {};
return obj22288;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._lookup[(function (){var G__22294 = x__15085__auto__;
return goog.typeOf(G__22294);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._lookup["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._lookup[(function (){var G__22296 = x__15085__auto__;
return goog.typeOf(G__22296);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._lookup["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj22298 = {};
return obj22298;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__22302 = x__15085__auto__;
return goog.typeOf(G__22302);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._assoc[(function (){var G__22306 = x__15085__auto__;
return goog.typeOf(G__22306);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._assoc["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj22308 = {};
return obj22308;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._dissoc[(function (){var G__22312 = x__15085__auto__;
return goog.typeOf(G__22312);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._dissoc["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj22314 = {};
return obj22314;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._key[(function (){var G__22318 = x__15085__auto__;
return goog.typeOf(G__22318);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._key["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._val[(function (){var G__22322 = x__15085__auto__;
return goog.typeOf(G__22322);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._val["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj22324 = {};
return obj22324;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._disjoin[(function (){var G__22328 = x__15085__auto__;
return goog.typeOf(G__22328);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._disjoin["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj22330 = {};
return obj22330;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._peek[(function (){var G__22334 = x__15085__auto__;
return goog.typeOf(G__22334);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._peek["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._pop[(function (){var G__22338 = x__15085__auto__;
return goog.typeOf(G__22338);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._pop["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj22340 = {};
return obj22340;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._assoc_n[(function (){var G__22344 = x__15085__auto__;
return goog.typeOf(G__22344);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj22346 = {};
return obj22346;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._deref[(function (){var G__22350 = x__15085__auto__;
return goog.typeOf(G__22350);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._deref["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj22352 = {};
return obj22352;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._deref_with_timeout[(function (){var G__22356 = x__15085__auto__;
return goog.typeOf(G__22356);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj22358 = {};
return obj22358;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._meta[(function (){var G__22362 = x__15085__auto__;
return goog.typeOf(G__22362);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._meta["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj22364 = {};
return obj22364;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._with_meta[(function (){var G__22368 = x__15085__auto__;
return goog.typeOf(G__22368);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._with_meta["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj22370 = {};
return obj22370;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._reduce[(function (){var G__22376 = x__15085__auto__;
return goog.typeOf(G__22376);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._reduce["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._reduce[(function (){var G__22378 = x__15085__auto__;
return goog.typeOf(G__22378);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._reduce["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj22380 = {};
return obj22380;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._kv_reduce[(function (){var G__22384 = x__15085__auto__;
return goog.typeOf(G__22384);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj22386 = {};
return obj22386;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._equiv[(function (){var G__22390 = x__15085__auto__;
return goog.typeOf(G__22390);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._equiv["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj22392 = {};
return obj22392;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._hash[(function (){var G__22396 = x__15085__auto__;
return goog.typeOf(G__22396);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._hash["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj22398 = {};
return obj22398;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._seq[(function (){var G__22402 = x__15085__auto__;
return goog.typeOf(G__22402);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._seq["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj22404 = {};
return obj22404;
})();


cljs.core.IList = (function (){var obj22406 = {};
return obj22406;
})();


cljs.core.IRecord = (function (){var obj22408 = {};
return obj22408;
})();


cljs.core.IReversible = (function (){var obj22410 = {};
return obj22410;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._rseq[(function (){var G__22414 = x__15085__auto__;
return goog.typeOf(G__22414);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._rseq["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj22416 = {};
return obj22416;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._sorted_seq[(function (){var G__22420 = x__15085__auto__;
return goog.typeOf(G__22420);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._sorted_seq_from[(function (){var G__22424 = x__15085__auto__;
return goog.typeOf(G__22424);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._entry_key[(function (){var G__22428 = x__15085__auto__;
return goog.typeOf(G__22428);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._entry_key["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._comparator[(function (){var G__22432 = x__15085__auto__;
return goog.typeOf(G__22432);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._comparator["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj22434 = {};
return obj22434;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__14429__auto__ = writer;
if(and__14429__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__14429__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__15085__auto__ = (((writer == null))?null:writer);
return (function (){var or__14441__auto__ = (cljs.core._write[(function (){var G__22438 = x__15085__auto__;
return goog.typeOf(G__22438);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._write["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__14429__auto__ = writer;
if(and__14429__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__14429__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__15085__auto__ = (((writer == null))?null:writer);
return (function (){var or__14441__auto__ = (cljs.core._flush[(function (){var G__22442 = x__15085__auto__;
return goog.typeOf(G__22442);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._flush["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj22444 = {};
return obj22444;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._pr_writer[(function (){var G__22448 = x__15085__auto__;
return goog.typeOf(G__22448);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj22450 = {};
return obj22450;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__14429__auto__ = d;
if(and__14429__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__14429__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__15085__auto__ = (((d == null))?null:d);
return (function (){var or__14441__auto__ = (cljs.core._realized_QMARK_[(function (){var G__22454 = x__15085__auto__;
return goog.typeOf(G__22454);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj22456 = {};
return obj22456;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._notify_watches[(function (){var G__22460 = x__15085__auto__;
return goog.typeOf(G__22460);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._add_watch[(function (){var G__22464 = x__15085__auto__;
return goog.typeOf(G__22464);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._add_watch["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__14429__auto__ = this$;
if(and__14429__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__14429__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__15085__auto__ = (((this$ == null))?null:this$);
return (function (){var or__14441__auto__ = (cljs.core._remove_watch[(function (){var G__22468 = x__15085__auto__;
return goog.typeOf(G__22468);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj22470 = {};
return obj22470;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._as_transient[(function (){var G__22474 = x__15085__auto__;
return goog.typeOf(G__22474);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._as_transient["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj22476 = {};
return obj22476;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._conj_BANG_[(function (){var G__22480 = x__15085__auto__;
return goog.typeOf(G__22480);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._persistent_BANG_[(function (){var G__22484 = x__15085__auto__;
return goog.typeOf(G__22484);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj22486 = {};
return obj22486;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._assoc_BANG_[(function (){var G__22490 = x__15085__auto__;
return goog.typeOf(G__22490);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj22492 = {};
return obj22492;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__22496 = x__15085__auto__;
return goog.typeOf(G__22496);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj22498 = {};
return obj22498;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__22502 = x__15085__auto__;
return goog.typeOf(G__22502);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._pop_BANG_[(function (){var G__22506 = x__15085__auto__;
return goog.typeOf(G__22506);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj22508 = {};
return obj22508;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__14429__auto__ = tcoll;
if(and__14429__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__15085__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__14441__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__22512 = x__15085__auto__;
return goog.typeOf(G__22512);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj22514 = {};
return obj22514;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__14429__auto__ = x;
if(and__14429__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__14429__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__15085__auto__ = (((x == null))?null:x);
return (function (){var or__14441__auto__ = (cljs.core._compare[(function (){var G__22518 = x__15085__auto__;
return goog.typeOf(G__22518);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._compare["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj22520 = {};
return obj22520;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._drop_first[(function (){var G__22524 = x__15085__auto__;
return goog.typeOf(G__22524);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._drop_first["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj22526 = {};
return obj22526;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._chunked_first[(function (){var G__22530 = x__15085__auto__;
return goog.typeOf(G__22530);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._chunked_rest[(function (){var G__22534 = x__15085__auto__;
return goog.typeOf(G__22534);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj22536 = {};
return obj22536;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._chunked_next[(function (){var G__22540 = x__15085__auto__;
return goog.typeOf(G__22540);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj22542 = {};
return obj22542;
})();

cljs.core._name = (function _name(x){
if((function (){var and__14429__auto__ = x;
if(and__14429__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__14429__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__15085__auto__ = (((x == null))?null:x);
return (function (){var or__14441__auto__ = (cljs.core._name[(function (){var G__22546 = x__15085__auto__;
return goog.typeOf(G__22546);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._name["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__14429__auto__ = x;
if(and__14429__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__14429__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__15085__auto__ = (((x == null))?null:x);
return (function (){var or__14441__auto__ = (cljs.core._namespace[(function (){var G__22550 = x__15085__auto__;
return goog.typeOf(G__22550);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._namespace["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj22552 = {};
return obj22552;
})();


cljs.core.IReset = (function (){var obj22554 = {};
return obj22554;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._reset_BANG_[(function (){var G__22558 = x__15085__auto__;
return goog.typeOf(G__22558);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj22560 = {};
return obj22560;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._swap_BANG_[(function (){var G__22570 = x__15085__auto__;
return goog.typeOf(G__22570);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._swap_BANG_[(function (){var G__22572 = x__15085__auto__;
return goog.typeOf(G__22572);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._swap_BANG_[(function (){var G__22574 = x__15085__auto__;
return goog.typeOf(G__22574);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._swap_BANG_[(function (){var G__22576 = x__15085__auto__;
return goog.typeOf(G__22576);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj22578 = {};
return obj22578;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__14429__auto__ = o;
if(and__14429__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__14429__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__15085__auto__ = (((o == null))?null:o);
return (function (){var or__14441__auto__ = (cljs.core._vreset_BANG_[(function (){var G__22582 = x__15085__auto__;
return goog.typeOf(G__22582);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj22584 = {};
return obj22584;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__14429__auto__ = coll;
if(and__14429__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__14429__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__15085__auto__ = (((coll == null))?null:coll);
return (function (){var or__14441__auto__ = (cljs.core._iterator[(function (){var G__22588 = x__15085__auto__;
return goog.typeOf(G__22588);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._iterator["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__22591 = (4294967295);
var G__22592 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__22591,G__22592) : Math.imul.call(null,G__22591,G__22592));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__22595 = a;
var G__22596 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__22595,G__22596) : Math.imul.call(null,G__22595,G__22596));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__22597 = (i + (2));
var G__22598 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__22597;
h1 = G__22598;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj22600 = {};
return obj22600;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__22601 = (i + (1));
var G__22602 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__22601;
hash = G__22602;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj22606 = {};
return obj22606;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__22609 = o;
if(G__22609){
var bit__15115__auto__ = (G__22609.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__15115__auto__) || (G__22609.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__22610 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22610) : Math.floor.call(null,G__22610));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__14429__auto__ = cljs.core.not(a.ns);
if(and__14429__auto__){
return b.ns;
} else {
return and__14429__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__22617 = a.ns;
var G__22618 = b.ns;
return goog.array.defaultCompare(G__22617,G__22618);
})();
if(((0) === nsc)){
var G__22619 = a.name;
var G__22620 = b.name;
return goog.array.defaultCompare(G__22619,G__22620);
} else {
return nsc;
}
}
} else {
var G__22621 = a.name;
var G__22622 = b.name;
return goog.array.defaultCompare(G__22621,G__22622);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__14862__auto__ = self__._hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__22624 = null;
var G__22624__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__22624__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__22624 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__22624__2.call(this,self__,coll);
case 3:
return G__22624__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22624.cljs$core$IFn$_invoke$arity$2 = G__22624__2;
G__22624.cljs$core$IFn$_invoke$arity$3 = G__22624__3;
return G__22624;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args22623){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22623)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__22672 = null;
var G__22672__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__22672__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__22672__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__22672__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__22672__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__22672__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__22672__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__22672__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__22672__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__22672__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__22672__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__22672__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__22672__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__22672__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__22672__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__22672__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__22672__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__22672__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__22672__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__22672__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__22672__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__22672__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22628 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__22629 = a;
var G__22630 = b;
var G__22631 = c;
var G__22632 = d;
var G__22633 = e;
var G__22634 = f;
var G__22635 = g;
var G__22636 = h;
var G__22637 = i;
var G__22638 = j;
var G__22639 = k;
var G__22640 = l;
var G__22641 = m;
var G__22642 = n;
var G__22643 = o;
var G__22644 = p;
var G__22645 = q;
var G__22646 = r;
var G__22647 = s;
var G__22648 = t;
var G__22649 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22628,G__22629,G__22630,G__22631,G__22632,G__22633,G__22634,G__22635,G__22636,G__22637,G__22638,G__22639,G__22640,G__22641,G__22642,G__22643,G__22644,G__22645,G__22646,G__22647,G__22648,G__22649) : cljs.core.apply.call(null,G__22628,G__22629,G__22630,G__22631,G__22632,G__22633,G__22634,G__22635,G__22636,G__22637,G__22638,G__22639,G__22640,G__22641,G__22642,G__22643,G__22644,G__22645,G__22646,G__22647,G__22648,G__22649));
});
G__22672 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__22672__1.call(this,self__);
case 2:
return G__22672__2.call(this,self__,a);
case 3:
return G__22672__3.call(this,self__,a,b);
case 4:
return G__22672__4.call(this,self__,a,b,c);
case 5:
return G__22672__5.call(this,self__,a,b,c,d);
case 6:
return G__22672__6.call(this,self__,a,b,c,d,e);
case 7:
return G__22672__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__22672__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__22672__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__22672__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__22672__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__22672__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__22672__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__22672__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__22672__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__22672__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__22672__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__22672__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__22672__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__22672__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__22672__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__22672__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22672.cljs$core$IFn$_invoke$arity$1 = G__22672__1;
G__22672.cljs$core$IFn$_invoke$arity$2 = G__22672__2;
G__22672.cljs$core$IFn$_invoke$arity$3 = G__22672__3;
G__22672.cljs$core$IFn$_invoke$arity$4 = G__22672__4;
G__22672.cljs$core$IFn$_invoke$arity$5 = G__22672__5;
G__22672.cljs$core$IFn$_invoke$arity$6 = G__22672__6;
G__22672.cljs$core$IFn$_invoke$arity$7 = G__22672__7;
G__22672.cljs$core$IFn$_invoke$arity$8 = G__22672__8;
G__22672.cljs$core$IFn$_invoke$arity$9 = G__22672__9;
G__22672.cljs$core$IFn$_invoke$arity$10 = G__22672__10;
G__22672.cljs$core$IFn$_invoke$arity$11 = G__22672__11;
G__22672.cljs$core$IFn$_invoke$arity$12 = G__22672__12;
G__22672.cljs$core$IFn$_invoke$arity$13 = G__22672__13;
G__22672.cljs$core$IFn$_invoke$arity$14 = G__22672__14;
G__22672.cljs$core$IFn$_invoke$arity$15 = G__22672__15;
G__22672.cljs$core$IFn$_invoke$arity$16 = G__22672__16;
G__22672.cljs$core$IFn$_invoke$arity$17 = G__22672__17;
G__22672.cljs$core$IFn$_invoke$arity$18 = G__22672__18;
G__22672.cljs$core$IFn$_invoke$arity$19 = G__22672__19;
G__22672.cljs$core$IFn$_invoke$arity$20 = G__22672__20;
G__22672.cljs$core$IFn$_invoke$arity$21 = G__22672__21;
G__22672.cljs$core$IFn$_invoke$arity$22 = G__22672__22;
return G__22672;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args22627){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22627)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__22650 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__22651 = a;
var G__22652 = b;
var G__22653 = c;
var G__22654 = d;
var G__22655 = e;
var G__22656 = f;
var G__22657 = g;
var G__22658 = h;
var G__22659 = i;
var G__22660 = j;
var G__22661 = k;
var G__22662 = l;
var G__22663 = m;
var G__22664 = n;
var G__22665 = o;
var G__22666 = p;
var G__22667 = q;
var G__22668 = r;
var G__22669 = s;
var G__22670 = t;
var G__22671 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22650,G__22651,G__22652,G__22653,G__22654,G__22655,G__22656,G__22657,G__22658,G__22659,G__22660,G__22661,G__22662,G__22663,G__22664,G__22665,G__22666,G__22667,G__22668,G__22669,G__22670,G__22671) : cljs.core.apply.call(null,G__22650,G__22651,G__22652,G__22653,G__22654,G__22655,G__22656,G__22657,G__22658,G__22659,G__22660,G__22661,G__22662,G__22663,G__22664,G__22665,G__22666,G__22667,G__22668,G__22669,G__22670,G__22671));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__22674 = x;
if(G__22674){
var bit__15122__auto__ = null;
if(cljs.core.truth_((function (){var or__14441__auto__ = bit__15122__auto__;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return G__22674.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__22674.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__22674);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__22674);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__22676 = value;
if(G__22676){
var bit__15122__auto__ = (G__22676.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__15122__auto__) || (G__22676.cljs$core$ICloneable$)){
return true;
} else {
if((!G__22676.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__22676);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__22676);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__22678 = coll;
if(G__22678){
var bit__15115__auto__ = (G__22678.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__15115__auto__) || (G__22678.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__22680 = coll;
if(G__22680){
var bit__15115__auto__ = (G__22680.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15115__auto__) || (G__22680.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__22682 = coll;
if(G__22682){
var bit__15115__auto__ = (G__22682.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15115__auto__) || (G__22682.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__22684 = coll;
if(G__22684){
var bit__15115__auto__ = (G__22684.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15115__auto__) || (G__22684.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__22689__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__22690 = y;
var G__22691 = cljs.core.first(more);
var G__22692 = cljs.core.next(more);
x = G__22690;
y = G__22691;
more = G__22692;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22693__i = 0, G__22693__a = new Array(arguments.length -  2);
while (G__22693__i < G__22693__a.length) {G__22693__a[G__22693__i] = arguments[G__22693__i + 2]; ++G__22693__i;}
  more = new cljs.core.IndexedSeq(G__22693__a,0);
} 
return G__22689__delegate.call(this,x,y,more);};
G__22689.cljs$lang$maxFixedArity = 2;
G__22689.cljs$lang$applyTo = (function (arglist__22694){
var x = cljs.core.first(arglist__22694);
arglist__22694 = cljs.core.next(arglist__22694);
var y = cljs.core.first(arglist__22694);
var more = cljs.core.rest(arglist__22694);
return G__22689__delegate(x,y,more);
});
G__22689.cljs$core$IFn$_invoke$arity$variadic = G__22689__delegate;
return G__22689;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__22695 = null;
if (arguments.length > 2) {
var G__22696__i = 0, G__22696__a = new Array(arguments.length -  2);
while (G__22696__i < G__22696__a.length) {G__22696__a[G__22696__i] = arguments[G__22696__i + 2]; ++G__22696__i;}
G__22695 = new cljs.core.IndexedSeq(G__22696__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__22697 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__22697) : cljs.core.es6_iterator_seq.call(null,G__22697));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__22698 = (n + (1));
var G__22699 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__22700 = cljs.core.next(coll__$1);
n = G__22698;
hash_code = G__22699;
coll__$1 = G__22700;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__22701 = (n + (1));
var G__22702 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__22703 = cljs.core.next(coll__$1);
n = G__22701;
hash_code = G__22702;
coll__$1 = G__22703;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__22704 = o;
return goog.getUid(G__22704);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__22706 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22706) : cljs.core.deref.call(null,G__22706));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__22713 = val;
var G__22714 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22713,G__22714) : f.call(null,G__22713,G__22714));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22719 = nval;
var G__22720 = (n + (1));
val = G__22719;
n = G__22720;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__22715 = val__$1;
var G__22716 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22715,G__22716) : f.call(null,G__22715,G__22716));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22721 = nval;
var G__22722 = (n + (1));
val__$1 = G__22721;
n = G__22722;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__22717 = val__$1;
var G__22718 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22717,G__22718) : f.call(null,G__22717,G__22718));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22723 = nval;
var G__22724 = (n + (1));
val__$1 = G__22723;
n = G__22724;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__22731 = val;
var G__22732 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22731,G__22732) : f.call(null,G__22731,G__22732));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22737 = nval;
var G__22738 = (n + (1));
val = G__22737;
n = G__22738;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__22733 = val__$1;
var G__22734 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22733,G__22734) : f.call(null,G__22733,G__22734));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22739 = nval;
var G__22740 = (n + (1));
val__$1 = G__22739;
n = G__22740;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__22735 = val__$1;
var G__22736 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22735,G__22736) : f.call(null,G__22735,G__22736));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22741 = nval;
var G__22742 = (n + (1));
val__$1 = G__22741;
n = G__22742;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__22744 = x;
if(G__22744){
var bit__15122__auto__ = (G__22744.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__15122__auto__) || (G__22744.cljs$core$ICounted$)){
return true;
} else {
if((!G__22744.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__22744);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__22744);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__22746 = x;
if(G__22746){
var bit__15122__auto__ = (G__22746.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15122__auto__) || (G__22746.cljs$core$IIndexed$)){
return true;
} else {
if((!G__22746.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__22746);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__22746);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__22747 = coll__$1;
var G__22748 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__22747,G__22748) : cljs.core.equiv_sequential.call(null,G__22747,G__22748));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22749 = o;
var G__22750 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__22749,G__22750) : cljs.core.cons.call(null,G__22749,G__22750));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__22753 = coll__$1;
var G__22754 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__22753,G__22754) : cljs.core.equiv_sequential.call(null,G__22753,G__22754));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__22755 = cljs.core.List.EMPTY;
var G__22756 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__22755,G__22756) : cljs.core.with_meta.call(null,G__22755,G__22756));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__22757 = f;
var G__22758 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__22757,G__22758) : cljs.core.seq_reduce.call(null,G__22757,G__22758));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__22759 = f;
var G__22760 = start;
var G__22761 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__22759,G__22760,G__22761) : cljs.core.seq_reduce.call(null,G__22759,G__22760,G__22761));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22762 = o;
var G__22763 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__22762,G__22763) : cljs.core.cons.call(null,G__22762,G__22763));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__22764 = sn;
s = G__22764;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__22769__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__22770 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__22771 = cljs.core.first(xs);
var G__22772 = cljs.core.next(xs);
coll = G__22770;
x = G__22771;
xs = G__22772;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__22769 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__22773__i = 0, G__22773__a = new Array(arguments.length -  2);
while (G__22773__i < G__22773__a.length) {G__22773__a[G__22773__i] = arguments[G__22773__i + 2]; ++G__22773__i;}
  xs = new cljs.core.IndexedSeq(G__22773__a,0);
} 
return G__22769__delegate.call(this,coll,x,xs);};
G__22769.cljs$lang$maxFixedArity = 2;
G__22769.cljs$lang$applyTo = (function (arglist__22774){
var coll = cljs.core.first(arglist__22774);
arglist__22774 = cljs.core.next(arglist__22774);
var x = cljs.core.first(arglist__22774);
var xs = cljs.core.rest(arglist__22774);
return G__22769__delegate(coll,x,xs);
});
G__22769.cljs$core$IFn$_invoke$arity$variadic = G__22769__delegate;
return G__22769;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__22775 = null;
if (arguments.length > 2) {
var G__22776__i = 0, G__22776__a = new Array(arguments.length -  2);
while (G__22776__i < G__22776__a.length) {G__22776__a[G__22776__i] = arguments[G__22776__i + 2]; ++G__22776__i;}
G__22775 = new cljs.core.IndexedSeq(G__22776__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__22775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__22777 = cljs.core.next(s);
var G__22778 = (acc + (1));
s = G__22777;
acc = G__22778;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__22780 = coll;
if(G__22780){
var bit__15115__auto__ = (G__22780.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__15115__auto__) || (G__22780.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__22781 = cljs.core.next(coll);
var G__22782 = (n - (1));
coll = G__22781;
n = G__22782;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__22783 = cljs.core.next(coll);
var G__22784 = (n - (1));
var G__22785 = not_found;
coll = G__22783;
n = G__22784;
not_found = G__22785;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__22790 = coll;
if(G__22790){
var bit__15115__auto__ = (G__22790.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15115__auto__) || (G__22790.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__22791 = coll;
if(G__22791){
var bit__15122__auto__ = (G__22791.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15122__auto__) || (G__22791.cljs$core$ISeq$)){
return true;
} else {
if((!G__22791.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22791);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22791);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__22792 = coll;
if(G__22792){
var bit__15115__auto__ = (G__22792.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__15115__auto__) || (G__22792.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__22793 = coll;
if(G__22793){
var bit__15122__auto__ = (G__22793.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15122__auto__) || (G__22793.cljs$core$ISeq$)){
return true;
} else {
if((!G__22793.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22793);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22793);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__22794 = (n__$1 - (1));
var G__22795 = cljs.core.rest(xs);
n__$1 = G__22794;
xs = G__22795;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__22798 = o;
if(G__22798){
var bit__15115__auto__ = (G__22798.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15115__auto__) || (G__22798.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__22799 = o;
if(G__22799){
var bit__15115__auto__ = (G__22799.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15115__auto__) || (G__22799.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__22803__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__22804 = ret;
var G__22805 = cljs.core.first(kvs);
var G__22806 = cljs.core.second(kvs);
var G__22807 = cljs.core.nnext(kvs);
coll = G__22804;
k = G__22805;
v = G__22806;
kvs = G__22807;
continue;
} else {
return ret;
}
break;
}
};
var G__22803 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__22808__i = 0, G__22808__a = new Array(arguments.length -  3);
while (G__22808__i < G__22808__a.length) {G__22808__a[G__22808__i] = arguments[G__22808__i + 3]; ++G__22808__i;}
  kvs = new cljs.core.IndexedSeq(G__22808__a,0);
} 
return G__22803__delegate.call(this,coll,k,v,kvs);};
G__22803.cljs$lang$maxFixedArity = 3;
G__22803.cljs$lang$applyTo = (function (arglist__22809){
var coll = cljs.core.first(arglist__22809);
arglist__22809 = cljs.core.next(arglist__22809);
var k = cljs.core.first(arglist__22809);
arglist__22809 = cljs.core.next(arglist__22809);
var v = cljs.core.first(arglist__22809);
var kvs = cljs.core.rest(arglist__22809);
return G__22803__delegate(coll,k,v,kvs);
});
G__22803.cljs$core$IFn$_invoke$arity$variadic = G__22803__delegate;
return G__22803;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__22810 = null;
if (arguments.length > 3) {
var G__22811__i = 0, G__22811__a = new Array(arguments.length -  3);
while (G__22811__i < G__22811__a.length) {G__22811__a[G__22811__i] = arguments[G__22811__i + 3]; ++G__22811__i;}
G__22810 = new cljs.core.IndexedSeq(G__22811__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__22810);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__22814__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__22815 = ret;
var G__22816 = cljs.core.first(ks);
var G__22817 = cljs.core.next(ks);
coll = G__22815;
k = G__22816;
ks = G__22817;
continue;
} else {
return ret;
}
}
break;
}
};
var G__22814 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22818__i = 0, G__22818__a = new Array(arguments.length -  2);
while (G__22818__i < G__22818__a.length) {G__22818__a[G__22818__i] = arguments[G__22818__i + 2]; ++G__22818__i;}
  ks = new cljs.core.IndexedSeq(G__22818__a,0);
} 
return G__22814__delegate.call(this,coll,k,ks);};
G__22814.cljs$lang$maxFixedArity = 2;
G__22814.cljs$lang$applyTo = (function (arglist__22819){
var coll = cljs.core.first(arglist__22819);
arglist__22819 = cljs.core.next(arglist__22819);
var k = cljs.core.first(arglist__22819);
var ks = cljs.core.rest(arglist__22819);
return G__22814__delegate(coll,k,ks);
});
G__22814.cljs$core$IFn$_invoke$arity$variadic = G__22814__delegate;
return G__22814;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__22820 = null;
if (arguments.length > 2) {
var G__22821__i = 0, G__22821__a = new Array(arguments.length -  2);
while (G__22821__i < G__22821__a.length) {G__22821__a[G__22821__i] = arguments[G__22821__i + 2]; ++G__22821__i;}
G__22820 = new cljs.core.IndexedSeq(G__22821__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__22820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__14441__auto__ = (function (){var G__22826 = f;
return goog.isFunction(G__22826);
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var G__22827 = f;
if(G__22827){
var bit__15122__auto__ = null;
if(cljs.core.truth_((function (){var or__14441__auto____$1 = bit__15122__auto__;
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
return G__22827.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__22827.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__22827);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__22827);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__23293 = null;
var G__23293__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__23293__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22829 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__22829) : self__.afn.call(null,G__22829));
});
var G__23293__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22830 = a;
var G__22831 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__22830,G__22831) : self__.afn.call(null,G__22830,G__22831));
});
var G__23293__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22832 = a;
var G__22833 = b;
var G__22834 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__22832,G__22833,G__22834) : self__.afn.call(null,G__22832,G__22833,G__22834));
});
var G__23293__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22835 = a;
var G__22836 = b;
var G__22837 = c;
var G__22838 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__22835,G__22836,G__22837,G__22838) : self__.afn.call(null,G__22835,G__22836,G__22837,G__22838));
});
var G__23293__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22839 = a;
var G__22840 = b;
var G__22841 = c;
var G__22842 = d;
var G__22843 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__22839,G__22840,G__22841,G__22842,G__22843) : self__.afn.call(null,G__22839,G__22840,G__22841,G__22842,G__22843));
});
var G__23293__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22844 = a;
var G__22845 = b;
var G__22846 = c;
var G__22847 = d;
var G__22848 = e;
var G__22849 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__22844,G__22845,G__22846,G__22847,G__22848,G__22849) : self__.afn.call(null,G__22844,G__22845,G__22846,G__22847,G__22848,G__22849));
});
var G__23293__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22850 = a;
var G__22851 = b;
var G__22852 = c;
var G__22853 = d;
var G__22854 = e;
var G__22855 = f;
var G__22856 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856) : self__.afn.call(null,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856));
});
var G__23293__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22857 = a;
var G__22858 = b;
var G__22859 = c;
var G__22860 = d;
var G__22861 = e;
var G__22862 = f;
var G__22863 = g;
var G__22864 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__22857,G__22858,G__22859,G__22860,G__22861,G__22862,G__22863,G__22864) : self__.afn.call(null,G__22857,G__22858,G__22859,G__22860,G__22861,G__22862,G__22863,G__22864));
});
var G__23293__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22865 = a;
var G__22866 = b;
var G__22867 = c;
var G__22868 = d;
var G__22869 = e;
var G__22870 = f;
var G__22871 = g;
var G__22872 = h;
var G__22873 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873) : self__.afn.call(null,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873));
});
var G__23293__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22874 = a;
var G__22875 = b;
var G__22876 = c;
var G__22877 = d;
var G__22878 = e;
var G__22879 = f;
var G__22880 = g;
var G__22881 = h;
var G__22882 = i;
var G__22883 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__22874,G__22875,G__22876,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883) : self__.afn.call(null,G__22874,G__22875,G__22876,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883));
});
var G__23293__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22884 = a;
var G__22885 = b;
var G__22886 = c;
var G__22887 = d;
var G__22888 = e;
var G__22889 = f;
var G__22890 = g;
var G__22891 = h;
var G__22892 = i;
var G__22893 = j;
var G__22894 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__22884,G__22885,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894) : self__.afn.call(null,G__22884,G__22885,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894));
});
var G__23293__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22895 = a;
var G__22896 = b;
var G__22897 = c;
var G__22898 = d;
var G__22899 = e;
var G__22900 = f;
var G__22901 = g;
var G__22902 = h;
var G__22903 = i;
var G__22904 = j;
var G__22905 = k;
var G__22906 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904,G__22905,G__22906) : self__.afn.call(null,G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902,G__22903,G__22904,G__22905,G__22906));
});
var G__23293__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22907 = a;
var G__22908 = b;
var G__22909 = c;
var G__22910 = d;
var G__22911 = e;
var G__22912 = f;
var G__22913 = g;
var G__22914 = h;
var G__22915 = i;
var G__22916 = j;
var G__22917 = k;
var G__22918 = l;
var G__22919 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__22907,G__22908,G__22909,G__22910,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917,G__22918,G__22919) : self__.afn.call(null,G__22907,G__22908,G__22909,G__22910,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917,G__22918,G__22919));
});
var G__23293__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22920 = a;
var G__22921 = b;
var G__22922 = c;
var G__22923 = d;
var G__22924 = e;
var G__22925 = f;
var G__22926 = g;
var G__22927 = h;
var G__22928 = i;
var G__22929 = j;
var G__22930 = k;
var G__22931 = l;
var G__22932 = m;
var G__22933 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932,G__22933) : self__.afn.call(null,G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932,G__22933));
});
var G__23293__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22934 = a;
var G__22935 = b;
var G__22936 = c;
var G__22937 = d;
var G__22938 = e;
var G__22939 = f;
var G__22940 = g;
var G__22941 = h;
var G__22942 = i;
var G__22943 = j;
var G__22944 = k;
var G__22945 = l;
var G__22946 = m;
var G__22947 = n;
var G__22948 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__22934,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948) : self__.afn.call(null,G__22934,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948));
});
var G__23293__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22949 = a;
var G__22950 = b;
var G__22951 = c;
var G__22952 = d;
var G__22953 = e;
var G__22954 = f;
var G__22955 = g;
var G__22956 = h;
var G__22957 = i;
var G__22958 = j;
var G__22959 = k;
var G__22960 = l;
var G__22961 = m;
var G__22962 = n;
var G__22963 = o;
var G__22964 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__22949,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964) : self__.afn.call(null,G__22949,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964));
});
var G__23293__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22965 = a;
var G__22966 = b;
var G__22967 = c;
var G__22968 = d;
var G__22969 = e;
var G__22970 = f;
var G__22971 = g;
var G__22972 = h;
var G__22973 = i;
var G__22974 = j;
var G__22975 = k;
var G__22976 = l;
var G__22977 = m;
var G__22978 = n;
var G__22979 = o;
var G__22980 = p;
var G__22981 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978,G__22979,G__22980,G__22981) : self__.afn.call(null,G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978,G__22979,G__22980,G__22981));
});
var G__23293__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__22982 = a;
var G__22983 = b;
var G__22984 = c;
var G__22985 = d;
var G__22986 = e;
var G__22987 = f;
var G__22988 = g;
var G__22989 = h;
var G__22990 = i;
var G__22991 = j;
var G__22992 = k;
var G__22993 = l;
var G__22994 = m;
var G__22995 = n;
var G__22996 = o;
var G__22997 = p;
var G__22998 = q;
var G__22999 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__22982,G__22983,G__22984,G__22985,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999) : self__.afn.call(null,G__22982,G__22983,G__22984,G__22985,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997,G__22998,G__22999));
});
var G__23293__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23000 = a;
var G__23001 = b;
var G__23002 = c;
var G__23003 = d;
var G__23004 = e;
var G__23005 = f;
var G__23006 = g;
var G__23007 = h;
var G__23008 = i;
var G__23009 = j;
var G__23010 = k;
var G__23011 = l;
var G__23012 = m;
var G__23013 = n;
var G__23014 = o;
var G__23015 = p;
var G__23016 = q;
var G__23017 = r;
var G__23018 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23000,G__23001,G__23002,G__23003,G__23004,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018) : self__.afn.call(null,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018));
});
var G__23293__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23019 = a;
var G__23020 = b;
var G__23021 = c;
var G__23022 = d;
var G__23023 = e;
var G__23024 = f;
var G__23025 = g;
var G__23026 = h;
var G__23027 = i;
var G__23028 = j;
var G__23029 = k;
var G__23030 = l;
var G__23031 = m;
var G__23032 = n;
var G__23033 = o;
var G__23034 = p;
var G__23035 = q;
var G__23036 = r;
var G__23037 = s;
var G__23038 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23019,G__23020,G__23021,G__23022,G__23023,G__23024,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037,G__23038) : self__.afn.call(null,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037,G__23038));
});
var G__23293__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23039 = self__.afn;
var G__23040 = a;
var G__23041 = b;
var G__23042 = c;
var G__23043 = d;
var G__23044 = e;
var G__23045 = f;
var G__23046 = g;
var G__23047 = h;
var G__23048 = i;
var G__23049 = j;
var G__23050 = k;
var G__23051 = l;
var G__23052 = m;
var G__23053 = n;
var G__23054 = o;
var G__23055 = p;
var G__23056 = q;
var G__23057 = r;
var G__23058 = s;
var G__23059 = t;
var G__23060 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050,G__23051,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059,G__23060) : cljs.core.apply.call(null,G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050,G__23051,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059,G__23060));
});
G__23293 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23293__1.call(this,self__);
case 2:
return G__23293__2.call(this,self__,a);
case 3:
return G__23293__3.call(this,self__,a,b);
case 4:
return G__23293__4.call(this,self__,a,b,c);
case 5:
return G__23293__5.call(this,self__,a,b,c,d);
case 6:
return G__23293__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23293__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23293__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23293__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23293__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23293__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23293__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23293__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23293__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23293__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23293__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23293__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23293__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23293__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23293__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23293__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23293__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23293.cljs$core$IFn$_invoke$arity$1 = G__23293__1;
G__23293.cljs$core$IFn$_invoke$arity$2 = G__23293__2;
G__23293.cljs$core$IFn$_invoke$arity$3 = G__23293__3;
G__23293.cljs$core$IFn$_invoke$arity$4 = G__23293__4;
G__23293.cljs$core$IFn$_invoke$arity$5 = G__23293__5;
G__23293.cljs$core$IFn$_invoke$arity$6 = G__23293__6;
G__23293.cljs$core$IFn$_invoke$arity$7 = G__23293__7;
G__23293.cljs$core$IFn$_invoke$arity$8 = G__23293__8;
G__23293.cljs$core$IFn$_invoke$arity$9 = G__23293__9;
G__23293.cljs$core$IFn$_invoke$arity$10 = G__23293__10;
G__23293.cljs$core$IFn$_invoke$arity$11 = G__23293__11;
G__23293.cljs$core$IFn$_invoke$arity$12 = G__23293__12;
G__23293.cljs$core$IFn$_invoke$arity$13 = G__23293__13;
G__23293.cljs$core$IFn$_invoke$arity$14 = G__23293__14;
G__23293.cljs$core$IFn$_invoke$arity$15 = G__23293__15;
G__23293.cljs$core$IFn$_invoke$arity$16 = G__23293__16;
G__23293.cljs$core$IFn$_invoke$arity$17 = G__23293__17;
G__23293.cljs$core$IFn$_invoke$arity$18 = G__23293__18;
G__23293.cljs$core$IFn$_invoke$arity$19 = G__23293__19;
G__23293.cljs$core$IFn$_invoke$arity$20 = G__23293__20;
G__23293.cljs$core$IFn$_invoke$arity$21 = G__23293__21;
G__23293.cljs$core$IFn$_invoke$arity$22 = G__23293__22;
return G__23293;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args22828){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22828)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__23061 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23061) : self__.afn.call(null,G__23061));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__23062 = a;
var G__23063 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23062,G__23063) : self__.afn.call(null,G__23062,G__23063));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__23064 = a;
var G__23065 = b;
var G__23066 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23064,G__23065,G__23066) : self__.afn.call(null,G__23064,G__23065,G__23066));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__23067 = a;
var G__23068 = b;
var G__23069 = c;
var G__23070 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23067,G__23068,G__23069,G__23070) : self__.afn.call(null,G__23067,G__23068,G__23069,G__23070));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__23071 = a;
var G__23072 = b;
var G__23073 = c;
var G__23074 = d;
var G__23075 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23071,G__23072,G__23073,G__23074,G__23075) : self__.afn.call(null,G__23071,G__23072,G__23073,G__23074,G__23075));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__23076 = a;
var G__23077 = b;
var G__23078 = c;
var G__23079 = d;
var G__23080 = e;
var G__23081 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23076,G__23077,G__23078,G__23079,G__23080,G__23081) : self__.afn.call(null,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__23082 = a;
var G__23083 = b;
var G__23084 = c;
var G__23085 = d;
var G__23086 = e;
var G__23087 = f;
var G__23088 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088) : self__.afn.call(null,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__23089 = a;
var G__23090 = b;
var G__23091 = c;
var G__23092 = d;
var G__23093 = e;
var G__23094 = f;
var G__23095 = g;
var G__23096 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096) : self__.afn.call(null,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__23097 = a;
var G__23098 = b;
var G__23099 = c;
var G__23100 = d;
var G__23101 = e;
var G__23102 = f;
var G__23103 = g;
var G__23104 = h;
var G__23105 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105) : self__.afn.call(null,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__23106 = a;
var G__23107 = b;
var G__23108 = c;
var G__23109 = d;
var G__23110 = e;
var G__23111 = f;
var G__23112 = g;
var G__23113 = h;
var G__23114 = i;
var G__23115 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23106,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115) : self__.afn.call(null,G__23106,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__23116 = a;
var G__23117 = b;
var G__23118 = c;
var G__23119 = d;
var G__23120 = e;
var G__23121 = f;
var G__23122 = g;
var G__23123 = h;
var G__23124 = i;
var G__23125 = j;
var G__23126 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126) : self__.afn.call(null,G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__23127 = a;
var G__23128 = b;
var G__23129 = c;
var G__23130 = d;
var G__23131 = e;
var G__23132 = f;
var G__23133 = g;
var G__23134 = h;
var G__23135 = i;
var G__23136 = j;
var G__23137 = k;
var G__23138 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138) : self__.afn.call(null,G__23127,G__23128,G__23129,G__23130,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__23139 = a;
var G__23140 = b;
var G__23141 = c;
var G__23142 = d;
var G__23143 = e;
var G__23144 = f;
var G__23145 = g;
var G__23146 = h;
var G__23147 = i;
var G__23148 = j;
var G__23149 = k;
var G__23150 = l;
var G__23151 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151) : self__.afn.call(null,G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__23152 = a;
var G__23153 = b;
var G__23154 = c;
var G__23155 = d;
var G__23156 = e;
var G__23157 = f;
var G__23158 = g;
var G__23159 = h;
var G__23160 = i;
var G__23161 = j;
var G__23162 = k;
var G__23163 = l;
var G__23164 = m;
var G__23165 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23152,G__23153,G__23154,G__23155,G__23156,G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165) : self__.afn.call(null,G__23152,G__23153,G__23154,G__23155,G__23156,G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__23166 = a;
var G__23167 = b;
var G__23168 = c;
var G__23169 = d;
var G__23170 = e;
var G__23171 = f;
var G__23172 = g;
var G__23173 = h;
var G__23174 = i;
var G__23175 = j;
var G__23176 = k;
var G__23177 = l;
var G__23178 = m;
var G__23179 = n;
var G__23180 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180) : self__.afn.call(null,G__23166,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__23181 = a;
var G__23182 = b;
var G__23183 = c;
var G__23184 = d;
var G__23185 = e;
var G__23186 = f;
var G__23187 = g;
var G__23188 = h;
var G__23189 = i;
var G__23190 = j;
var G__23191 = k;
var G__23192 = l;
var G__23193 = m;
var G__23194 = n;
var G__23195 = o;
var G__23196 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196) : self__.afn.call(null,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__23197 = a;
var G__23198 = b;
var G__23199 = c;
var G__23200 = d;
var G__23201 = e;
var G__23202 = f;
var G__23203 = g;
var G__23204 = h;
var G__23205 = i;
var G__23206 = j;
var G__23207 = k;
var G__23208 = l;
var G__23209 = m;
var G__23210 = n;
var G__23211 = o;
var G__23212 = p;
var G__23213 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213) : self__.afn.call(null,G__23197,G__23198,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__23214 = a;
var G__23215 = b;
var G__23216 = c;
var G__23217 = d;
var G__23218 = e;
var G__23219 = f;
var G__23220 = g;
var G__23221 = h;
var G__23222 = i;
var G__23223 = j;
var G__23224 = k;
var G__23225 = l;
var G__23226 = m;
var G__23227 = n;
var G__23228 = o;
var G__23229 = p;
var G__23230 = q;
var G__23231 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231) : self__.afn.call(null,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__23232 = a;
var G__23233 = b;
var G__23234 = c;
var G__23235 = d;
var G__23236 = e;
var G__23237 = f;
var G__23238 = g;
var G__23239 = h;
var G__23240 = i;
var G__23241 = j;
var G__23242 = k;
var G__23243 = l;
var G__23244 = m;
var G__23245 = n;
var G__23246 = o;
var G__23247 = p;
var G__23248 = q;
var G__23249 = r;
var G__23250 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248,G__23249,G__23250) : self__.afn.call(null,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248,G__23249,G__23250));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__23251 = a;
var G__23252 = b;
var G__23253 = c;
var G__23254 = d;
var G__23255 = e;
var G__23256 = f;
var G__23257 = g;
var G__23258 = h;
var G__23259 = i;
var G__23260 = j;
var G__23261 = k;
var G__23262 = l;
var G__23263 = m;
var G__23264 = n;
var G__23265 = o;
var G__23266 = p;
var G__23267 = q;
var G__23268 = r;
var G__23269 = s;
var G__23270 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270) : self__.afn.call(null,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23271 = self__.afn;
var G__23272 = a;
var G__23273 = b;
var G__23274 = c;
var G__23275 = d;
var G__23276 = e;
var G__23277 = f;
var G__23278 = g;
var G__23279 = h;
var G__23280 = i;
var G__23281 = j;
var G__23282 = k;
var G__23283 = l;
var G__23284 = m;
var G__23285 = n;
var G__23286 = o;
var G__23287 = p;
var G__23288 = q;
var G__23289 = r;
var G__23290 = s;
var G__23291 = t;
var G__23292 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292) : cljs.core.apply.call(null,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__23297 = o;
if(G__23297){
var bit__15122__auto__ = (G__23297.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__15122__auto__) || (G__23297.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__23297.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__23297);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__23297);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__14429__auto__ = !((o == null));
if(and__14429__auto__){
var G__23301 = o;
if(G__23301){
var bit__15122__auto__ = (G__23301.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__15122__auto__) || (G__23301.cljs$core$IMeta$)){
return true;
} else {
if((!G__23301.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23301);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23301);
}
} else {
return and__14429__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__23304__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23305 = ret;
var G__23306 = cljs.core.first(ks);
var G__23307 = cljs.core.next(ks);
coll = G__23305;
k = G__23306;
ks = G__23307;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23304 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23308__i = 0, G__23308__a = new Array(arguments.length -  2);
while (G__23308__i < G__23308__a.length) {G__23308__a[G__23308__i] = arguments[G__23308__i + 2]; ++G__23308__i;}
  ks = new cljs.core.IndexedSeq(G__23308__a,0);
} 
return G__23304__delegate.call(this,coll,k,ks);};
G__23304.cljs$lang$maxFixedArity = 2;
G__23304.cljs$lang$applyTo = (function (arglist__23309){
var coll = cljs.core.first(arglist__23309);
arglist__23309 = cljs.core.next(arglist__23309);
var k = cljs.core.first(arglist__23309);
var ks = cljs.core.rest(arglist__23309);
return G__23304__delegate(coll,k,ks);
});
G__23304.cljs$core$IFn$_invoke$arity$variadic = G__23304__delegate;
return G__23304;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__23310 = null;
if (arguments.length > 2) {
var G__23311__i = 0, G__23311__a = new Array(arguments.length -  2);
while (G__23311__i < G__23311__a.length) {G__23311__a[G__23311__i] = arguments[G__23311__i + 2]; ++G__23311__i;}
G__23310 = new cljs.core.IndexedSeq(G__23311__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__23313 = x;
if(G__23313){
var bit__15122__auto__ = (G__23313.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__15122__auto__) || (G__23313.cljs$core$ICollection$)){
return true;
} else {
if((!G__23313.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__23313);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__23313);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__23315 = x;
if(G__23315){
var bit__15122__auto__ = (G__23315.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__15122__auto__) || (G__23315.cljs$core$ISet$)){
return true;
} else {
if((!G__23315.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__23315);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__23315);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__23317 = x;
if(G__23317){
var bit__15122__auto__ = (G__23317.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__15122__auto__) || (G__23317.cljs$core$IAssociative$)){
return true;
} else {
if((!G__23317.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__23317);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__23317);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__23319 = x;
if(G__23319){
var bit__15122__auto__ = (G__23319.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__15122__auto__) || (G__23319.cljs$core$ISequential$)){
return true;
} else {
if((!G__23319.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__23319);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__23319);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__23321 = x;
if(G__23321){
var bit__15122__auto__ = (G__23321.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__15122__auto__) || (G__23321.cljs$core$ISorted$)){
return true;
} else {
if((!G__23321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__23321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__23321);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__23323 = x;
if(G__23323){
var bit__15122__auto__ = (G__23323.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15122__auto__) || (G__23323.cljs$core$IReduce$)){
return true;
} else {
if((!G__23323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__23323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__23323);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__23325 = x;
if(G__23325){
var bit__15122__auto__ = (G__23325.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__15122__auto__) || (G__23325.cljs$core$IMap$)){
return true;
} else {
if((!G__23325.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__23325);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__23325);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__23327 = x;
if(G__23327){
var bit__15122__auto__ = (G__23327.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__15122__auto__) || (G__23327.cljs$core$IVector$)){
return true;
} else {
if((!G__23327.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__23327);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__23327);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__23329 = x;
if(G__23329){
var bit__15115__auto__ = (G__23329.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__15115__auto__) || (G__23329.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj23335 = {};
return obj23335;
});
var js_obj__1 = (function() { 
var G__23338__delegate = function (keyvals){
var G__23336 = goog.object.create;
var G__23337 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__23336,G__23337) : cljs.core.apply.call(null,G__23336,G__23337));
};
var G__23338 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23339__i = 0, G__23339__a = new Array(arguments.length -  0);
while (G__23339__i < G__23339__a.length) {G__23339__a[G__23339__i] = arguments[G__23339__i + 0]; ++G__23339__i;}
  keyvals = new cljs.core.IndexedSeq(G__23339__a,0);
} 
return G__23338__delegate.call(this,keyvals);};
G__23338.cljs$lang$maxFixedArity = 0;
G__23338.cljs$lang$applyTo = (function (arglist__23340){
var keyvals = cljs.core.seq(arglist__23340);
return G__23338__delegate(keyvals);
});
G__23338.cljs$core$IFn$_invoke$arity$variadic = G__23338__delegate;
return G__23338;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__23341 = null;
if (arguments.length > 0) {
var G__23342__i = 0, G__23342__a = new Array(arguments.length -  0);
while (G__23342__i < G__23342__a.length) {G__23342__a[G__23342__i] = arguments[G__23342__i + 0]; ++G__23342__i;}
G__23341 = new cljs.core.IndexedSeq(G__23342__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__23341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__23345_23347 = obj;
var G__23346_23348 = ((function (G__23345_23347,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__23345_23347,keys))
;
goog.object.forEach(G__23345_23347,G__23346_23348);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__23349 = (i__$1 + (1));
var G__23350 = (j__$1 + (1));
var G__23351 = (len__$1 - (1));
i__$1 = G__23349;
j__$1 = G__23350;
len__$1 = G__23351;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__23352 = (i__$1 - (1));
var G__23353 = (j__$1 - (1));
var G__23354 = (len__$1 - (1));
i__$1 = G__23352;
j__$1 = G__23353;
len__$1 = G__23354;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj23356 = {};
return obj23356;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__23358 = s;
if(G__23358){
var bit__15122__auto__ = (G__23358.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15122__auto__) || (G__23358.cljs$core$ISeq$)){
return true;
} else {
if((!G__23358.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23358);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__23360 = s;
if(G__23360){
var bit__15122__auto__ = (G__23360.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__15122__auto__) || (G__23360.cljs$core$ISeqable$)){
return true;
} else {
if((!G__23360.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__23360);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__23360);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__14441__auto__ = cljs.core.fn_QMARK_(f);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var G__23364 = f;
if(G__23364){
var bit__15122__auto__ = (G__23364.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__15122__auto__) || (G__23364.cljs$core$IFn$)){
return true;
} else {
if((!G__23364.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__23364);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__23364);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__23377 = n;
return isNaN(G__23377);
})())) && (!((n === Infinity))) && (((function (){var G__23378 = n;
return parseFloat(G__23378);
})() === (function (){var G__23379 = n;
var G__23380 = (10);
return parseInt(G__23379,G__23380);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__23381__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__23382 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__23383 = etc;
s = G__23382;
xs = G__23383;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__23381 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23384__i = 0, G__23384__a = new Array(arguments.length -  2);
while (G__23384__i < G__23384__a.length) {G__23384__a[G__23384__i] = arguments[G__23384__i + 2]; ++G__23384__i;}
  more = new cljs.core.IndexedSeq(G__23384__a,0);
} 
return G__23381__delegate.call(this,x,y,more);};
G__23381.cljs$lang$maxFixedArity = 2;
G__23381.cljs$lang$applyTo = (function (arglist__23385){
var x = cljs.core.first(arglist__23385);
arglist__23385 = cljs.core.next(arglist__23385);
var y = cljs.core.first(arglist__23385);
var more = cljs.core.rest(arglist__23385);
return G__23381__delegate(x,y,more);
});
G__23381.cljs$core$IFn$_invoke$arity$variadic = G__23381__delegate;
return G__23381;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__23386 = null;
if (arguments.length > 2) {
var G__23387__i = 0, G__23387__a = new Array(arguments.length -  2);
while (G__23387__i < G__23387__a.length) {G__23387__a[G__23387__i] = arguments[G__23387__i + 2]; ++G__23387__i;}
G__23386 = new cljs.core.IndexedSeq(G__23387__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__23391 = x;
if(G__23391){
var bit__15115__auto__ = (G__23391.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__15115__auto__) || (G__23391.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__23392 = x;
var G__23393 = y;
return goog.array.defaultCompare(G__23392,G__23393);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__23398 = xs;
var G__23399 = ys;
var G__23400 = len;
var G__23401 = (n + (1));
xs = G__23398;
ys = G__23399;
len = G__23400;
n = G__23401;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__23406 = x;
var G__23407 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23406,G__23407) : f.call(null,G__23406,G__23407));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__23408 = y;
var G__23409 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23408,G__23409) : f.call(null,G__23408,G__23409));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__23415 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__23415) : cljs.core.to_array.call(null,G__23415));
})();
var G__23416_23418 = a;
var G__23417_23419 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__23416_23418,G__23417_23419);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__23425 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23425) : keyfn.call(null,G__23425));
})(),(function (){var G__23426 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23426) : keyfn.call(null,G__23426));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__23432 = f;
var G__23433 = cljs.core.first(s);
var G__23434 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23432,G__23433,G__23434) : cljs.core.reduce.call(null,G__23432,G__23433,G__23434));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__23435 = val__$1;
var G__23436 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23435,G__23436) : f.call(null,G__23435,G__23436));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23437 = nval;
var G__23438 = cljs.core.next(coll__$1);
val__$1 = G__23437;
coll__$1 = G__23438;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__23442 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__23442) : cljs.core.to_array.call(null,G__23442));
})();
var G__23443_23445 = a;
goog.array.shuffle(G__23443_23445);

var G__23444 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__23444) : cljs.core.vec.call(null,G__23444));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__23448 = coll;
if(G__23448){
var bit__15115__auto__ = (G__23448.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15115__auto__) || (G__23448.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__23449 = coll;
if(G__23449){
var bit__15115__auto__ = (G__23449.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__15115__auto__) || (G__23449.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__23458 = null;
var G__23458__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__23458__1 = (function (x){
var G__23455 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__23455) : cf.call(null,G__23455));
});
var G__23458__2 = (function (x,y){
var G__23456 = x;
var G__23457 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23456,G__23457) : f.call(null,G__23456,G__23457));
});
G__23458 = function(x,y){
switch(arguments.length){
case 0:
return G__23458__0.call(this);
case 1:
return G__23458__1.call(this,x);
case 2:
return G__23458__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23458.cljs$core$IFn$_invoke$arity$0 = G__23458__0;
G__23458.cljs$core$IFn$_invoke$arity$1 = G__23458__1;
G__23458.cljs$core$IFn$_invoke$arity$2 = G__23458__2;
return G__23458;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__23465 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23465) : xform.call(null,G__23465));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__23466 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__23466) : f__$1.call(null,G__23466));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__23467__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__23467 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23468__i = 0, G__23468__a = new Array(arguments.length -  2);
while (G__23468__i < G__23468__a.length) {G__23468__a[G__23468__i] = arguments[G__23468__i + 2]; ++G__23468__i;}
  more = new cljs.core.IndexedSeq(G__23468__a,0);
} 
return G__23467__delegate.call(this,x,y,more);};
G__23467.cljs$lang$maxFixedArity = 2;
G__23467.cljs$lang$applyTo = (function (arglist__23469){
var x = cljs.core.first(arglist__23469);
arglist__23469 = cljs.core.next(arglist__23469);
var y = cljs.core.first(arglist__23469);
var more = cljs.core.rest(arglist__23469);
return G__23467__delegate(x,y,more);
});
G__23467.cljs$core$IFn$_invoke$arity$variadic = G__23467__delegate;
return G__23467;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__23470 = null;
if (arguments.length > 2) {
var G__23471__i = 0, G__23471__a = new Array(arguments.length -  2);
while (G__23471__i < G__23471__a.length) {G__23471__a[G__23471__i] = arguments[G__23471__i + 2]; ++G__23471__i;}
G__23470 = new cljs.core.IndexedSeq(G__23471__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__23472__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__23472 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23473__i = 0, G__23473__a = new Array(arguments.length -  2);
while (G__23473__i < G__23473__a.length) {G__23473__a[G__23473__i] = arguments[G__23473__i + 2]; ++G__23473__i;}
  more = new cljs.core.IndexedSeq(G__23473__a,0);
} 
return G__23472__delegate.call(this,x,y,more);};
G__23472.cljs$lang$maxFixedArity = 2;
G__23472.cljs$lang$applyTo = (function (arglist__23474){
var x = cljs.core.first(arglist__23474);
arglist__23474 = cljs.core.next(arglist__23474);
var y = cljs.core.first(arglist__23474);
var more = cljs.core.rest(arglist__23474);
return G__23472__delegate(x,y,more);
});
G__23472.cljs$core$IFn$_invoke$arity$variadic = G__23472__delegate;
return G__23472;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__23475 = null;
if (arguments.length > 2) {
var G__23476__i = 0, G__23476__a = new Array(arguments.length -  2);
while (G__23476__i < G__23476__a.length) {G__23476__a[G__23476__i] = arguments[G__23476__i + 2]; ++G__23476__i;}
G__23475 = new cljs.core.IndexedSeq(G__23476__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__23477__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__23477 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23478__i = 0, G__23478__a = new Array(arguments.length -  2);
while (G__23478__i < G__23478__a.length) {G__23478__a[G__23478__i] = arguments[G__23478__i + 2]; ++G__23478__i;}
  more = new cljs.core.IndexedSeq(G__23478__a,0);
} 
return G__23477__delegate.call(this,x,y,more);};
G__23477.cljs$lang$maxFixedArity = 2;
G__23477.cljs$lang$applyTo = (function (arglist__23479){
var x = cljs.core.first(arglist__23479);
arglist__23479 = cljs.core.next(arglist__23479);
var y = cljs.core.first(arglist__23479);
var more = cljs.core.rest(arglist__23479);
return G__23477__delegate(x,y,more);
});
G__23477.cljs$core$IFn$_invoke$arity$variadic = G__23477__delegate;
return G__23477;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__23480 = null;
if (arguments.length > 2) {
var G__23481__i = 0, G__23481__a = new Array(arguments.length -  2);
while (G__23481__i < G__23481__a.length) {G__23481__a[G__23481__i] = arguments[G__23481__i + 2]; ++G__23481__i;}
G__23480 = new cljs.core.IndexedSeq(G__23481__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__23486__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__23486 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23487__i = 0, G__23487__a = new Array(arguments.length -  2);
while (G__23487__i < G__23487__a.length) {G__23487__a[G__23487__i] = arguments[G__23487__i + 2]; ++G__23487__i;}
  more = new cljs.core.IndexedSeq(G__23487__a,0);
} 
return G__23486__delegate.call(this,x,y,more);};
G__23486.cljs$lang$maxFixedArity = 2;
G__23486.cljs$lang$applyTo = (function (arglist__23488){
var x = cljs.core.first(arglist__23488);
arglist__23488 = cljs.core.next(arglist__23488);
var y = cljs.core.first(arglist__23488);
var more = cljs.core.rest(arglist__23488);
return G__23486__delegate(x,y,more);
});
G__23486.cljs$core$IFn$_invoke$arity$variadic = G__23486__delegate;
return G__23486;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__23489 = null;
if (arguments.length > 2) {
var G__23490__i = 0, G__23490__a = new Array(arguments.length -  2);
while (G__23490__i < G__23490__a.length) {G__23490__a[G__23490__i] = arguments[G__23490__i + 2]; ++G__23490__i;}
G__23489 = new cljs.core.IndexedSeq(G__23490__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__23491__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__23492 = y;
var G__23493 = cljs.core.first(more);
var G__23494 = cljs.core.next(more);
x = G__23492;
y = G__23493;
more = G__23494;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23495__i = 0, G__23495__a = new Array(arguments.length -  2);
while (G__23495__i < G__23495__a.length) {G__23495__a[G__23495__i] = arguments[G__23495__i + 2]; ++G__23495__i;}
  more = new cljs.core.IndexedSeq(G__23495__a,0);
} 
return G__23491__delegate.call(this,x,y,more);};
G__23491.cljs$lang$maxFixedArity = 2;
G__23491.cljs$lang$applyTo = (function (arglist__23496){
var x = cljs.core.first(arglist__23496);
arglist__23496 = cljs.core.next(arglist__23496);
var y = cljs.core.first(arglist__23496);
var more = cljs.core.rest(arglist__23496);
return G__23491__delegate(x,y,more);
});
G__23491.cljs$core$IFn$_invoke$arity$variadic = G__23491__delegate;
return G__23491;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__23497 = null;
if (arguments.length > 2) {
var G__23498__i = 0, G__23498__a = new Array(arguments.length -  2);
while (G__23498__i < G__23498__a.length) {G__23498__a[G__23498__i] = arguments[G__23498__i + 2]; ++G__23498__i;}
G__23497 = new cljs.core.IndexedSeq(G__23498__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__23499__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__23500 = y;
var G__23501 = cljs.core.first(more);
var G__23502 = cljs.core.next(more);
x = G__23500;
y = G__23501;
more = G__23502;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23503__i = 0, G__23503__a = new Array(arguments.length -  2);
while (G__23503__i < G__23503__a.length) {G__23503__a[G__23503__i] = arguments[G__23503__i + 2]; ++G__23503__i;}
  more = new cljs.core.IndexedSeq(G__23503__a,0);
} 
return G__23499__delegate.call(this,x,y,more);};
G__23499.cljs$lang$maxFixedArity = 2;
G__23499.cljs$lang$applyTo = (function (arglist__23504){
var x = cljs.core.first(arglist__23504);
arglist__23504 = cljs.core.next(arglist__23504);
var y = cljs.core.first(arglist__23504);
var more = cljs.core.rest(arglist__23504);
return G__23499__delegate(x,y,more);
});
G__23499.cljs$core$IFn$_invoke$arity$variadic = G__23499__delegate;
return G__23499;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__23505 = null;
if (arguments.length > 2) {
var G__23506__i = 0, G__23506__a = new Array(arguments.length -  2);
while (G__23506__i < G__23506__a.length) {G__23506__a[G__23506__i] = arguments[G__23506__i + 2]; ++G__23506__i;}
G__23505 = new cljs.core.IndexedSeq(G__23506__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__23507__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__23508 = y;
var G__23509 = cljs.core.first(more);
var G__23510 = cljs.core.next(more);
x = G__23508;
y = G__23509;
more = G__23510;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23507 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23511__i = 0, G__23511__a = new Array(arguments.length -  2);
while (G__23511__i < G__23511__a.length) {G__23511__a[G__23511__i] = arguments[G__23511__i + 2]; ++G__23511__i;}
  more = new cljs.core.IndexedSeq(G__23511__a,0);
} 
return G__23507__delegate.call(this,x,y,more);};
G__23507.cljs$lang$maxFixedArity = 2;
G__23507.cljs$lang$applyTo = (function (arglist__23512){
var x = cljs.core.first(arglist__23512);
arglist__23512 = cljs.core.next(arglist__23512);
var y = cljs.core.first(arglist__23512);
var more = cljs.core.rest(arglist__23512);
return G__23507__delegate(x,y,more);
});
G__23507.cljs$core$IFn$_invoke$arity$variadic = G__23507__delegate;
return G__23507;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__23513 = null;
if (arguments.length > 2) {
var G__23514__i = 0, G__23514__a = new Array(arguments.length -  2);
while (G__23514__i < G__23514__a.length) {G__23514__a[G__23514__i] = arguments[G__23514__i + 2]; ++G__23514__i;}
G__23513 = new cljs.core.IndexedSeq(G__23514__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__23515__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__23516 = y;
var G__23517 = cljs.core.first(more);
var G__23518 = cljs.core.next(more);
x = G__23516;
y = G__23517;
more = G__23518;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23515 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23519__i = 0, G__23519__a = new Array(arguments.length -  2);
while (G__23519__i < G__23519__a.length) {G__23519__a[G__23519__i] = arguments[G__23519__i + 2]; ++G__23519__i;}
  more = new cljs.core.IndexedSeq(G__23519__a,0);
} 
return G__23515__delegate.call(this,x,y,more);};
G__23515.cljs$lang$maxFixedArity = 2;
G__23515.cljs$lang$applyTo = (function (arglist__23520){
var x = cljs.core.first(arglist__23520);
arglist__23520 = cljs.core.next(arglist__23520);
var y = cljs.core.first(arglist__23520);
var more = cljs.core.rest(arglist__23520);
return G__23515__delegate(x,y,more);
});
G__23515.cljs$core$IFn$_invoke$arity$variadic = G__23515__delegate;
return G__23515;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__23521 = null;
if (arguments.length > 2) {
var G__23522__i = 0, G__23522__a = new Array(arguments.length -  2);
while (G__23522__i < G__23522__a.length) {G__23522__a[G__23522__i] = arguments[G__23522__i + 2]; ++G__23522__i;}
G__23521 = new cljs.core.IndexedSeq(G__23522__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__14758__auto__ = x;
var y__14759__auto__ = y;
return ((x__14758__auto__ > y__14759__auto__) ? x__14758__auto__ : y__14759__auto__);
});
var max__3 = (function() { 
var G__23523__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__14758__auto__ = x;
var y__14759__auto__ = y;
return ((x__14758__auto__ > y__14759__auto__) ? x__14758__auto__ : y__14759__auto__);
})(),more);
};
var G__23523 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23524__i = 0, G__23524__a = new Array(arguments.length -  2);
while (G__23524__i < G__23524__a.length) {G__23524__a[G__23524__i] = arguments[G__23524__i + 2]; ++G__23524__i;}
  more = new cljs.core.IndexedSeq(G__23524__a,0);
} 
return G__23523__delegate.call(this,x,y,more);};
G__23523.cljs$lang$maxFixedArity = 2;
G__23523.cljs$lang$applyTo = (function (arglist__23525){
var x = cljs.core.first(arglist__23525);
arglist__23525 = cljs.core.next(arglist__23525);
var y = cljs.core.first(arglist__23525);
var more = cljs.core.rest(arglist__23525);
return G__23523__delegate(x,y,more);
});
G__23523.cljs$core$IFn$_invoke$arity$variadic = G__23523__delegate;
return G__23523;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__23526 = null;
if (arguments.length > 2) {
var G__23527__i = 0, G__23527__a = new Array(arguments.length -  2);
while (G__23527__i < G__23527__a.length) {G__23527__a[G__23527__i] = arguments[G__23527__i + 2]; ++G__23527__i;}
G__23526 = new cljs.core.IndexedSeq(G__23527__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__14765__auto__ = x;
var y__14766__auto__ = y;
return ((x__14765__auto__ < y__14766__auto__) ? x__14765__auto__ : y__14766__auto__);
});
var min__3 = (function() { 
var G__23528__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__14765__auto__ = x;
var y__14766__auto__ = y;
return ((x__14765__auto__ < y__14766__auto__) ? x__14765__auto__ : y__14766__auto__);
})(),more);
};
var G__23528 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23529__i = 0, G__23529__a = new Array(arguments.length -  2);
while (G__23529__i < G__23529__a.length) {G__23529__a[G__23529__i] = arguments[G__23529__i + 2]; ++G__23529__i;}
  more = new cljs.core.IndexedSeq(G__23529__a,0);
} 
return G__23528__delegate.call(this,x,y,more);};
G__23528.cljs$lang$maxFixedArity = 2;
G__23528.cljs$lang$applyTo = (function (arglist__23530){
var x = cljs.core.first(arglist__23530);
arglist__23530 = cljs.core.next(arglist__23530);
var y = cljs.core.first(arglist__23530);
var more = cljs.core.rest(arglist__23530);
return G__23528__delegate(x,y,more);
});
G__23528.cljs$core$IFn$_invoke$arity$variadic = G__23528__delegate;
return G__23528;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__23531 = null;
if (arguments.length > 2) {
var G__23532__i = 0, G__23532__a = new Array(arguments.length -  2);
while (G__23532__i < G__23532__a.length) {G__23532__a[G__23532__i] = arguments[G__23532__i + 2]; ++G__23532__i;}
G__23531 = new cljs.core.IndexedSeq(G__23532__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__23533__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__23533 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23534__i = 0, G__23534__a = new Array(arguments.length -  2);
while (G__23534__i < G__23534__a.length) {G__23534__a[G__23534__i] = arguments[G__23534__i + 2]; ++G__23534__i;}
  more = new cljs.core.IndexedSeq(G__23534__a,0);
} 
return G__23533__delegate.call(this,x,y,more);};
G__23533.cljs$lang$maxFixedArity = 2;
G__23533.cljs$lang$applyTo = (function (arglist__23535){
var x = cljs.core.first(arglist__23535);
arglist__23535 = cljs.core.next(arglist__23535);
var y = cljs.core.first(arglist__23535);
var more = cljs.core.rest(arglist__23535);
return G__23533__delegate(x,y,more);
});
G__23533.cljs$core$IFn$_invoke$arity$variadic = G__23533__delegate;
return G__23533;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__23536 = null;
if (arguments.length > 2) {
var G__23537__i = 0, G__23537__a = new Array(arguments.length -  2);
while (G__23537__i < G__23537__a.length) {G__23537__a[G__23537__i] = arguments[G__23537__i + 2]; ++G__23537__i;}
G__23536 = new cljs.core.IndexedSeq(G__23537__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__23538__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__23538 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23539__i = 0, G__23539__a = new Array(arguments.length -  2);
while (G__23539__i < G__23539__a.length) {G__23539__a[G__23539__i] = arguments[G__23539__i + 2]; ++G__23539__i;}
  more = new cljs.core.IndexedSeq(G__23539__a,0);
} 
return G__23538__delegate.call(this,x,y,more);};
G__23538.cljs$lang$maxFixedArity = 2;
G__23538.cljs$lang$applyTo = (function (arglist__23540){
var x = cljs.core.first(arglist__23540);
arglist__23540 = cljs.core.next(arglist__23540);
var y = cljs.core.first(arglist__23540);
var more = cljs.core.rest(arglist__23540);
return G__23538__delegate(x,y,more);
});
G__23538.cljs$core$IFn$_invoke$arity$variadic = G__23538__delegate;
return G__23538;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__23541 = null;
if (arguments.length > 2) {
var G__23542__i = 0, G__23542__a = new Array(arguments.length -  2);
while (G__23542__i < G__23542__a.length) {G__23542__a[G__23542__i] = arguments[G__23542__i + 2]; ++G__23542__i;}
G__23541 = new cljs.core.IndexedSeq(G__23542__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__23547__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__23547 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23548__i = 0, G__23548__a = new Array(arguments.length -  2);
while (G__23548__i < G__23548__a.length) {G__23548__a[G__23548__i] = arguments[G__23548__i + 2]; ++G__23548__i;}
  more = new cljs.core.IndexedSeq(G__23548__a,0);
} 
return G__23547__delegate.call(this,x,y,more);};
G__23547.cljs$lang$maxFixedArity = 2;
G__23547.cljs$lang$applyTo = (function (arglist__23549){
var x = cljs.core.first(arglist__23549);
arglist__23549 = cljs.core.next(arglist__23549);
var y = cljs.core.first(arglist__23549);
var more = cljs.core.rest(arglist__23549);
return G__23547__delegate(x,y,more);
});
G__23547.cljs$core$IFn$_invoke$arity$variadic = G__23547__delegate;
return G__23547;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__23550 = null;
if (arguments.length > 2) {
var G__23551__i = 0, G__23551__a = new Array(arguments.length -  2);
while (G__23551__i < G__23551__a.length) {G__23551__a[G__23551__i] = arguments[G__23551__i + 2]; ++G__23551__i;}
G__23550 = new cljs.core.IndexedSeq(G__23551__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__23552__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__23552 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23553__i = 0, G__23553__a = new Array(arguments.length -  2);
while (G__23553__i < G__23553__a.length) {G__23553__a[G__23553__i] = arguments[G__23553__i + 2]; ++G__23553__i;}
  more = new cljs.core.IndexedSeq(G__23553__a,0);
} 
return G__23552__delegate.call(this,x,y,more);};
G__23552.cljs$lang$maxFixedArity = 2;
G__23552.cljs$lang$applyTo = (function (arglist__23554){
var x = cljs.core.first(arglist__23554);
arglist__23554 = cljs.core.next(arglist__23554);
var y = cljs.core.first(arglist__23554);
var more = cljs.core.rest(arglist__23554);
return G__23552__delegate(x,y,more);
});
G__23552.cljs$core$IFn$_invoke$arity$variadic = G__23552__delegate;
return G__23552;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__23555 = null;
if (arguments.length > 2) {
var G__23556__i = 0, G__23556__a = new Array(arguments.length -  2);
while (G__23556__i < G__23556__a.length) {G__23556__a[G__23556__i] = arguments[G__23556__i + 2]; ++G__23556__i;}
G__23555 = new cljs.core.IndexedSeq(G__23556__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__23557__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__23557 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23558__i = 0, G__23558__a = new Array(arguments.length -  2);
while (G__23558__i < G__23558__a.length) {G__23558__a[G__23558__i] = arguments[G__23558__i + 2]; ++G__23558__i;}
  more = new cljs.core.IndexedSeq(G__23558__a,0);
} 
return G__23557__delegate.call(this,x,y,more);};
G__23557.cljs$lang$maxFixedArity = 2;
G__23557.cljs$lang$applyTo = (function (arglist__23559){
var x = cljs.core.first(arglist__23559);
arglist__23559 = cljs.core.next(arglist__23559);
var y = cljs.core.first(arglist__23559);
var more = cljs.core.rest(arglist__23559);
return G__23557__delegate(x,y,more);
});
G__23557.cljs$core$IFn$_invoke$arity$variadic = G__23557__delegate;
return G__23557;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__23560 = null;
if (arguments.length > 2) {
var G__23561__i = 0, G__23561__a = new Array(arguments.length -  2);
while (G__23561__i < G__23561__a.length) {G__23561__a[G__23561__i] = arguments[G__23561__i + 2]; ++G__23561__i;}
G__23560 = new cljs.core.IndexedSeq(G__23561__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__23564 = x;
var G__23565 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__23564,G__23565) : cljs.core.mod.call(null,G__23564,G__23565));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__23566__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__23566 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23567__i = 0, G__23567__a = new Array(arguments.length -  2);
while (G__23567__i < G__23567__a.length) {G__23567__a[G__23567__i] = arguments[G__23567__i + 2]; ++G__23567__i;}
  more = new cljs.core.IndexedSeq(G__23567__a,0);
} 
return G__23566__delegate.call(this,x,y,more);};
G__23566.cljs$lang$maxFixedArity = 2;
G__23566.cljs$lang$applyTo = (function (arglist__23568){
var x = cljs.core.first(arglist__23568);
arglist__23568 = cljs.core.next(arglist__23568);
var y = cljs.core.first(arglist__23568);
var more = cljs.core.rest(arglist__23568);
return G__23566__delegate(x,y,more);
});
G__23566.cljs$core$IFn$_invoke$arity$variadic = G__23566__delegate;
return G__23566;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__23569 = null;
if (arguments.length > 2) {
var G__23570__i = 0, G__23570__a = new Array(arguments.length -  2);
while (G__23570__i < G__23570__a.length) {G__23570__a[G__23570__i] = arguments[G__23570__i + 2]; ++G__23570__i;}
G__23569 = new cljs.core.IndexedSeq(G__23570__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__23571__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__23571 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23572__i = 0, G__23572__a = new Array(arguments.length -  2);
while (G__23572__i < G__23572__a.length) {G__23572__a[G__23572__i] = arguments[G__23572__i + 2]; ++G__23572__i;}
  more = new cljs.core.IndexedSeq(G__23572__a,0);
} 
return G__23571__delegate.call(this,x,y,more);};
G__23571.cljs$lang$maxFixedArity = 2;
G__23571.cljs$lang$applyTo = (function (arglist__23573){
var x = cljs.core.first(arglist__23573);
arglist__23573 = cljs.core.next(arglist__23573);
var y = cljs.core.first(arglist__23573);
var more = cljs.core.rest(arglist__23573);
return G__23571__delegate(x,y,more);
});
G__23571.cljs$core$IFn$_invoke$arity$variadic = G__23571__delegate;
return G__23571;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__23574 = null;
if (arguments.length > 2) {
var G__23575__i = 0, G__23575__a = new Array(arguments.length -  2);
while (G__23575__i < G__23575__a.length) {G__23575__a[G__23575__i] = arguments[G__23575__i + 2]; ++G__23575__i;}
G__23574 = new cljs.core.IndexedSeq(G__23575__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__23578 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23578) : Math.floor.call(null,G__23578));
} else {
var G__23579 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__23579) : Math.ceil.call(null,G__23579));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__23580__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__23580 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23581__i = 0, G__23581__a = new Array(arguments.length -  2);
while (G__23581__i < G__23581__a.length) {G__23581__a[G__23581__i] = arguments[G__23581__i + 2]; ++G__23581__i;}
  more = new cljs.core.IndexedSeq(G__23581__a,0);
} 
return G__23580__delegate.call(this,x,y,more);};
G__23580.cljs$lang$maxFixedArity = 2;
G__23580.cljs$lang$applyTo = (function (arglist__23582){
var x = cljs.core.first(arglist__23582);
arglist__23582 = cljs.core.next(arglist__23582);
var y = cljs.core.first(arglist__23582);
var more = cljs.core.rest(arglist__23582);
return G__23580__delegate(x,y,more);
});
G__23580.cljs$core$IFn$_invoke$arity$variadic = G__23580__delegate;
return G__23580;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__23583 = null;
if (arguments.length > 2) {
var G__23584__i = 0, G__23584__a = new Array(arguments.length -  2);
while (G__23584__i < G__23584__a.length) {G__23584__a[G__23584__i] = arguments[G__23584__i + 2]; ++G__23584__i;}
G__23583 = new cljs.core.IndexedSeq(G__23584__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__23585__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__23585 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23586__i = 0, G__23586__a = new Array(arguments.length -  2);
while (G__23586__i < G__23586__a.length) {G__23586__a[G__23586__i] = arguments[G__23586__i + 2]; ++G__23586__i;}
  more = new cljs.core.IndexedSeq(G__23586__a,0);
} 
return G__23585__delegate.call(this,x,y,more);};
G__23585.cljs$lang$maxFixedArity = 2;
G__23585.cljs$lang$applyTo = (function (arglist__23587){
var x = cljs.core.first(arglist__23587);
arglist__23587 = cljs.core.next(arglist__23587);
var y = cljs.core.first(arglist__23587);
var more = cljs.core.rest(arglist__23587);
return G__23585__delegate(x,y,more);
});
G__23585.cljs$core$IFn$_invoke$arity$variadic = G__23585__delegate;
return G__23585;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__23588 = null;
if (arguments.length > 2) {
var G__23589__i = 0, G__23589__a = new Array(arguments.length -  2);
while (G__23589__i < G__23589__a.length) {G__23589__a[G__23589__i] = arguments[G__23589__i + 2]; ++G__23589__i;}
G__23588 = new cljs.core.IndexedSeq(G__23589__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__23590__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__23590 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23591__i = 0, G__23591__a = new Array(arguments.length -  2);
while (G__23591__i < G__23591__a.length) {G__23591__a[G__23591__i] = arguments[G__23591__i + 2]; ++G__23591__i;}
  more = new cljs.core.IndexedSeq(G__23591__a,0);
} 
return G__23590__delegate.call(this,x,y,more);};
G__23590.cljs$lang$maxFixedArity = 2;
G__23590.cljs$lang$applyTo = (function (arglist__23592){
var x = cljs.core.first(arglist__23592);
arglist__23592 = cljs.core.next(arglist__23592);
var y = cljs.core.first(arglist__23592);
var more = cljs.core.rest(arglist__23592);
return G__23590__delegate(x,y,more);
});
G__23590.cljs$core$IFn$_invoke$arity$variadic = G__23590__delegate;
return G__23590;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__23593 = null;
if (arguments.length > 2) {
var G__23594__i = 0, G__23594__a = new Array(arguments.length -  2);
while (G__23594__i < G__23594__a.length) {G__23594__a[G__23594__i] = arguments[G__23594__i + 2]; ++G__23594__i;}
G__23593 = new cljs.core.IndexedSeq(G__23594__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23593);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__23595__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__23595 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23596__i = 0, G__23596__a = new Array(arguments.length -  2);
while (G__23596__i < G__23596__a.length) {G__23596__a[G__23596__i] = arguments[G__23596__i + 2]; ++G__23596__i;}
  more = new cljs.core.IndexedSeq(G__23596__a,0);
} 
return G__23595__delegate.call(this,x,y,more);};
G__23595.cljs$lang$maxFixedArity = 2;
G__23595.cljs$lang$applyTo = (function (arglist__23597){
var x = cljs.core.first(arglist__23597);
arglist__23597 = cljs.core.next(arglist__23597);
var y = cljs.core.first(arglist__23597);
var more = cljs.core.rest(arglist__23597);
return G__23595__delegate(x,y,more);
});
G__23595.cljs$core$IFn$_invoke$arity$variadic = G__23595__delegate;
return G__23595;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__23598 = null;
if (arguments.length > 2) {
var G__23599__i = 0, G__23599__a = new Array(arguments.length -  2);
while (G__23599__i < G__23599__a.length) {G__23599__a[G__23599__i] = arguments[G__23599__i + 2]; ++G__23599__i;}
G__23598 = new cljs.core.IndexedSeq(G__23599__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23598);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__23604__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23605 = y;
var G__23606 = cljs.core.first(more);
var G__23607 = cljs.core.next(more);
x = G__23605;
y = G__23606;
more = G__23607;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23604 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23608__i = 0, G__23608__a = new Array(arguments.length -  2);
while (G__23608__i < G__23608__a.length) {G__23608__a[G__23608__i] = arguments[G__23608__i + 2]; ++G__23608__i;}
  more = new cljs.core.IndexedSeq(G__23608__a,0);
} 
return G__23604__delegate.call(this,x,y,more);};
G__23604.cljs$lang$maxFixedArity = 2;
G__23604.cljs$lang$applyTo = (function (arglist__23609){
var x = cljs.core.first(arglist__23609);
arglist__23609 = cljs.core.next(arglist__23609);
var y = cljs.core.first(arglist__23609);
var more = cljs.core.rest(arglist__23609);
return G__23604__delegate(x,y,more);
});
G__23604.cljs$core$IFn$_invoke$arity$variadic = G__23604__delegate;
return G__23604;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__23610 = null;
if (arguments.length > 2) {
var G__23611__i = 0, G__23611__a = new Array(arguments.length -  2);
while (G__23611__i < G__23611__a.length) {G__23611__a[G__23611__i] = arguments[G__23611__i + 2]; ++G__23611__i;}
G__23610 = new cljs.core.IndexedSeq(G__23611__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__23612 = (n__$1 - (1));
var G__23613 = cljs.core.next(xs);
n__$1 = G__23612;
xs = G__23613;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__23617 = x;
return goog.string.buildString(G__23617);
}
});
var str__2 = (function() { 
var G__23618__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__23619 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__23620 = cljs.core.next(more);
sb = G__23619;
more = G__23620;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__23618 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__23621__i = 0, G__23621__a = new Array(arguments.length -  1);
while (G__23621__i < G__23621__a.length) {G__23621__a[G__23621__i] = arguments[G__23621__i + 1]; ++G__23621__i;}
  ys = new cljs.core.IndexedSeq(G__23621__a,0);
} 
return G__23618__delegate.call(this,x,ys);};
G__23618.cljs$lang$maxFixedArity = 1;
G__23618.cljs$lang$applyTo = (function (arglist__23622){
var x = cljs.core.first(arglist__23622);
var ys = cljs.core.rest(arglist__23622);
return G__23618__delegate(x,ys);
});
G__23618.cljs$core$IFn$_invoke$arity$variadic = G__23618__delegate;
return G__23618;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__23623 = null;
if (arguments.length > 1) {
var G__23624__i = 0, G__23624__a = new Array(arguments.length -  1);
while (G__23624__i < G__23624__a.length) {G__23624__a[G__23624__i] = arguments[G__23624__i + 1]; ++G__23624__i;}
G__23623 = new cljs.core.IndexedSeq(G__23624__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__23625 = cljs.core.next(xs);
var G__23626 = cljs.core.next(ys);
xs = G__23625;
ys = G__23626;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__23627 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__23628 = cljs.core.next(s);
res = G__23627;
s = G__23628;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__23633 = ((h + (cljs.core.hash((function (){var G__23631 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23631) : cljs.core.key.call(null,G__23631));
})()) ^ cljs.core.hash((function (){var G__23632 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23632) : cljs.core.val.call(null,G__23632));
})()))) % (4503599627370496));
var G__23634 = cljs.core.next(s);
h = G__23633;
s = G__23634;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__23635 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__23636 = cljs.core.next(s__$1);
h = G__23635;
s__$1 = G__23636;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__23647_23657 = cljs.core.seq(fn_map);
var chunk__23648_23658 = null;
var count__23649_23659 = (0);
var i__23650_23660 = (0);
while(true){
if((i__23650_23660 < count__23649_23659)){
var vec__23651_23661 = chunk__23648_23658.cljs$core$IIndexed$_nth$arity$2(null,i__23650_23660);
var key_name_23662 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23651_23661,(0),null);
var f_23663 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23651_23661,(1),null);
var str_name_23664 = (function (){var G__23652 = key_name_23662;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__23652) : cljs.core.name.call(null,G__23652));
})();
(obj[str_name_23664] = f_23663);

var G__23665 = seq__23647_23657;
var G__23666 = chunk__23648_23658;
var G__23667 = count__23649_23659;
var G__23668 = (i__23650_23660 + (1));
seq__23647_23657 = G__23665;
chunk__23648_23658 = G__23666;
count__23649_23659 = G__23667;
i__23650_23660 = G__23668;
continue;
} else {
var temp__4406__auto___23669 = cljs.core.seq(seq__23647_23657);
if(temp__4406__auto___23669){
var seq__23647_23670__$1 = temp__4406__auto___23669;
if(cljs.core.chunked_seq_QMARK_(seq__23647_23670__$1)){
var c__15228__auto___23671 = (function (){var G__23653 = seq__23647_23670__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__23653) : cljs.core.chunk_first.call(null,G__23653));
})();
var G__23672 = (function (){var G__23654 = seq__23647_23670__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__23654) : cljs.core.chunk_rest.call(null,G__23654));
})();
var G__23673 = c__15228__auto___23671;
var G__23674 = cljs.core.count(c__15228__auto___23671);
var G__23675 = (0);
seq__23647_23657 = G__23672;
chunk__23648_23658 = G__23673;
count__23649_23659 = G__23674;
i__23650_23660 = G__23675;
continue;
} else {
var vec__23655_23676 = cljs.core.first(seq__23647_23670__$1);
var key_name_23677 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23655_23676,(0),null);
var f_23678 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23655_23676,(1),null);
var str_name_23679 = (function (){var G__23656 = key_name_23677;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__23656) : cljs.core.name.call(null,G__23656));
})();
(obj[str_name_23679] = f_23678);

var G__23680 = cljs.core.next(seq__23647_23670__$1);
var G__23681 = null;
var G__23682 = (0);
var G__23683 = (0);
seq__23647_23657 = G__23680;
chunk__23648_23658 = G__23681;
count__23649_23659 = G__23682;
i__23650_23660 = G__23683;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__23685 = coll;
if(G__23685){
var bit__15122__auto__ = (G__23685.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__15122__auto__) || (G__23685.cljs$core$IReversible$)){
return true;
} else {
if((!G__23685.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__23685);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__23685);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__23686 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__23686;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__23687 = (i - (1));
var G__23688 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__23687;
r = G__23688;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__23689__i = 0, G__23689__a = new Array(arguments.length -  0);
while (G__23689__i < G__23689__a.length) {G__23689__a[G__23689__i] = arguments[G__23689__i + 0]; ++G__23689__i;}
  xs = new cljs.core.IndexedSeq(G__23689__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__23690){
var xs = cljs.core.seq(arglist__23690);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__14441__auto__ = (coll == null);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var G__23694 = coll;
if(G__23694){
var bit__15115__auto__ = (G__23694.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__15115__auto__) || (G__23694.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__23696 = x;
if(G__23696){
var bit__15122__auto__ = (G__23696.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__15122__auto__) || (G__23696.cljs$core$IList$)){
return true;
} else {
if((!G__23696.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__23696);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__23696);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__14429__auto__ = cljs.core.not(a.ns);
if(and__14429__auto__){
return b.ns;
} else {
return and__14429__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23703 = a.ns;
var G__23704 = b.ns;
return goog.array.defaultCompare(G__23703,G__23704);
})();
if(((0) === nsc)){
var G__23705 = a.name;
var G__23706 = b.name;
return goog.array.defaultCompare(G__23705,G__23706);
} else {
return nsc;
}
}
} else {
var G__23707 = a.name;
var G__23708 = b.name;
return goog.array.defaultCompare(G__23707,G__23708);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__14862__auto__ = self__._hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__23710 = null;
var G__23710__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__23710__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__23710 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23710__2.call(this,self__,coll);
case 3:
return G__23710__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23710.cljs$core$IFn$_invoke$arity$2 = G__23710__2;
G__23710.cljs$core$IFn$_invoke$arity$3 = G__23710__3;
return G__23710;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args23709){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23709)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__23712 = x;
if(G__23712){
var bit__15115__auto__ = (G__23712.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__15115__auto__) || (G__23712.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__23714 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__23714) : cljs.core.name.call(null,G__23714));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__23715 = ls.sval();
ls = G__23715;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__23717 = s;
if(G__23717){
var bit__15115__auto__ = (G__23717.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__15115__auto__) || (G__23717.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__23718 = cljs.core.next(s__$1);
s__$1 = G__23718;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_23719 = (0);
var xs_23720 = cljs.core.seq(coll);
while(true){
if(xs_23720){
(ret[i_23719] = cljs.core.to_array(cljs.core.first(xs_23720)));

var G__23721 = (i_23719 + (1));
var G__23722 = cljs.core.next(xs_23720);
i_23719 = G__23721;
xs_23720 = G__23722;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__23725 = (i + (1));
var G__23726 = cljs.core.next(s__$1);
i = G__23725;
s__$1 = G__23726;
continue;
} else {
return a;
}
break;
}
} else {
var n__15328__auto___23727 = size;
var i_23728 = (0);
while(true){
if((i_23728 < n__15328__auto___23727)){
(a[i_23728] = init_val_or_seq);

var G__23729 = (i_23728 + (1));
i_23728 = G__23729;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__23732 = (i + (1));
var G__23733 = cljs.core.next(s__$1);
i = G__23732;
s__$1 = G__23733;
continue;
} else {
return a;
}
break;
}
} else {
var n__15328__auto___23734 = size;
var i_23735 = (0);
while(true){
if((i_23735 < n__15328__auto___23734)){
(a[i_23735] = init_val_or_seq);

var G__23736 = (i_23735 + (1));
i_23735 = G__23736;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__23739 = (i + (1));
var G__23740 = cljs.core.next(s__$1);
i = G__23739;
s__$1 = G__23740;
continue;
} else {
return a;
}
break;
}
} else {
var n__15328__auto___23741 = size;
var i_23742 = (0);
while(true){
if((i_23742 < n__15328__auto___23741)){
(a[i_23742] = init_val_or_seq);

var G__23743 = (i_23742 + (1));
i_23742 = G__23743;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__23746 = (i + (1));
var G__23747 = cljs.core.next(s__$1);
i = G__23746;
s__$1 = G__23747;
continue;
} else {
return a;
}
break;
}
} else {
var n__15328__auto___23748 = size;
var i_23749 = (0);
while(true){
if((i_23749 < n__15328__auto___23748)){
(a[i_23749] = init_val_or_seq);

var G__23750 = (i_23749 + (1));
i_23749 = G__23750;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__23751 = cljs.core.next(s__$1);
var G__23752 = (i - (1));
var G__23753 = (sum + (1));
s__$1 = G__23751;
i = G__23752;
sum = G__23753;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__23773__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__23773 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__23774__i = 0, G__23774__a = new Array(arguments.length -  2);
while (G__23774__i < G__23774__a.length) {G__23774__a[G__23774__i] = arguments[G__23774__i + 2]; ++G__23774__i;}
  zs = new cljs.core.IndexedSeq(G__23774__a,0);
} 
return G__23773__delegate.call(this,x,y,zs);};
G__23773.cljs$lang$maxFixedArity = 2;
G__23773.cljs$lang$applyTo = (function (arglist__23775){
var x = cljs.core.first(arglist__23775);
arglist__23775 = cljs.core.next(arglist__23775);
var y = cljs.core.first(arglist__23775);
var zs = cljs.core.rest(arglist__23775);
return G__23773__delegate(x,y,zs);
});
G__23773.cljs$core$IFn$_invoke$arity$variadic = G__23773__delegate;
return G__23773;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__23776 = null;
if (arguments.length > 2) {
var G__23777__i = 0, G__23777__a = new Array(arguments.length -  2);
while (G__23777__i < G__23777__a.length) {G__23777__a[G__23777__i] = arguments[G__23777__i + 2]; ++G__23777__i;}
G__23776 = new cljs.core.IndexedSeq(G__23777__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__23778__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__23778 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__23779__i = 0, G__23779__a = new Array(arguments.length -  4);
while (G__23779__i < G__23779__a.length) {G__23779__a[G__23779__i] = arguments[G__23779__i + 4]; ++G__23779__i;}
  more = new cljs.core.IndexedSeq(G__23779__a,0);
} 
return G__23778__delegate.call(this,a,b,c,d,more);};
G__23778.cljs$lang$maxFixedArity = 4;
G__23778.cljs$lang$applyTo = (function (arglist__23780){
var a = cljs.core.first(arglist__23780);
arglist__23780 = cljs.core.next(arglist__23780);
var b = cljs.core.first(arglist__23780);
arglist__23780 = cljs.core.next(arglist__23780);
var c = cljs.core.first(arglist__23780);
arglist__23780 = cljs.core.next(arglist__23780);
var d = cljs.core.first(arglist__23780);
var more = cljs.core.rest(arglist__23780);
return G__23778__delegate(a,b,c,d,more);
});
G__23778.cljs$core$IFn$_invoke$arity$variadic = G__23778__delegate;
return G__23778;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__23781 = null;
if (arguments.length > 4) {
var G__23782__i = 0, G__23782__a = new Array(arguments.length -  4);
while (G__23782__i < G__23782__a.length) {G__23782__a[G__23782__i] = arguments[G__23782__i + 4]; ++G__23782__i;}
G__23781 = new cljs.core.IndexedSeq(G__23782__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__23781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__23783__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__23784 = ntcoll;
var G__23785 = cljs.core.first(vals);
var G__23786 = cljs.core.next(vals);
tcoll = G__23784;
val = G__23785;
vals = G__23786;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__23783 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__23787__i = 0, G__23787__a = new Array(arguments.length -  2);
while (G__23787__i < G__23787__a.length) {G__23787__a[G__23787__i] = arguments[G__23787__i + 2]; ++G__23787__i;}
  vals = new cljs.core.IndexedSeq(G__23787__a,0);
} 
return G__23783__delegate.call(this,tcoll,val,vals);};
G__23783.cljs$lang$maxFixedArity = 2;
G__23783.cljs$lang$applyTo = (function (arglist__23788){
var tcoll = cljs.core.first(arglist__23788);
arglist__23788 = cljs.core.next(arglist__23788);
var val = cljs.core.first(arglist__23788);
var vals = cljs.core.rest(arglist__23788);
return G__23783__delegate(tcoll,val,vals);
});
G__23783.cljs$core$IFn$_invoke$arity$variadic = G__23783__delegate;
return G__23783;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__23789 = null;
if (arguments.length > 2) {
var G__23790__i = 0, G__23790__a = new Array(arguments.length -  2);
while (G__23790__i < G__23790__a.length) {G__23790__a[G__23790__i] = arguments[G__23790__i + 2]; ++G__23790__i;}
G__23789 = new cljs.core.IndexedSeq(G__23790__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__23789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__23791__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__23792 = ntcoll;
var G__23793 = cljs.core.first(kvs);
var G__23794 = cljs.core.second(kvs);
var G__23795 = cljs.core.nnext(kvs);
tcoll = G__23792;
key = G__23793;
val = G__23794;
kvs = G__23795;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__23791 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23796__i = 0, G__23796__a = new Array(arguments.length -  3);
while (G__23796__i < G__23796__a.length) {G__23796__a[G__23796__i] = arguments[G__23796__i + 3]; ++G__23796__i;}
  kvs = new cljs.core.IndexedSeq(G__23796__a,0);
} 
return G__23791__delegate.call(this,tcoll,key,val,kvs);};
G__23791.cljs$lang$maxFixedArity = 3;
G__23791.cljs$lang$applyTo = (function (arglist__23797){
var tcoll = cljs.core.first(arglist__23797);
arglist__23797 = cljs.core.next(arglist__23797);
var key = cljs.core.first(arglist__23797);
arglist__23797 = cljs.core.next(arglist__23797);
var val = cljs.core.first(arglist__23797);
var kvs = cljs.core.rest(arglist__23797);
return G__23791__delegate(tcoll,key,val,kvs);
});
G__23791.cljs$core$IFn$_invoke$arity$variadic = G__23791__delegate;
return G__23791;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__23798 = null;
if (arguments.length > 3) {
var G__23799__i = 0, G__23799__a = new Array(arguments.length -  3);
while (G__23799__i < G__23799__a.length) {G__23799__a[G__23799__i] = arguments[G__23799__i + 3]; ++G__23799__i;}
G__23798 = new cljs.core.IndexedSeq(G__23799__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__23798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__23800__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__23801 = ntcoll;
var G__23802 = cljs.core.first(ks);
var G__23803 = cljs.core.next(ks);
tcoll = G__23801;
key = G__23802;
ks = G__23803;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__23800 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23804__i = 0, G__23804__a = new Array(arguments.length -  2);
while (G__23804__i < G__23804__a.length) {G__23804__a[G__23804__i] = arguments[G__23804__i + 2]; ++G__23804__i;}
  ks = new cljs.core.IndexedSeq(G__23804__a,0);
} 
return G__23800__delegate.call(this,tcoll,key,ks);};
G__23800.cljs$lang$maxFixedArity = 2;
G__23800.cljs$lang$applyTo = (function (arglist__23805){
var tcoll = cljs.core.first(arglist__23805);
arglist__23805 = cljs.core.next(arglist__23805);
var key = cljs.core.first(arglist__23805);
var ks = cljs.core.rest(arglist__23805);
return G__23800__delegate(tcoll,key,ks);
});
G__23800.cljs$core$IFn$_invoke$arity$variadic = G__23800__delegate;
return G__23800;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__23806 = null;
if (arguments.length > 2) {
var G__23807__i = 0, G__23807__a = new Array(arguments.length -  2);
while (G__23807__i < G__23807__a.length) {G__23807__a[G__23807__i] = arguments[G__23807__i + 2]; ++G__23807__i;}
G__23806 = new cljs.core.IndexedSeq(G__23807__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__23806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__23808__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__23809 = ntcoll;
var G__23810 = cljs.core.first(vals);
var G__23811 = cljs.core.next(vals);
tcoll = G__23809;
val = G__23810;
vals = G__23811;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__23808 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__23812__i = 0, G__23812__a = new Array(arguments.length -  2);
while (G__23812__i < G__23812__a.length) {G__23812__a[G__23812__i] = arguments[G__23812__i + 2]; ++G__23812__i;}
  vals = new cljs.core.IndexedSeq(G__23812__a,0);
} 
return G__23808__delegate.call(this,tcoll,val,vals);};
G__23808.cljs$lang$maxFixedArity = 2;
G__23808.cljs$lang$applyTo = (function (arglist__23813){
var tcoll = cljs.core.first(arglist__23813);
arglist__23813 = cljs.core.next(arglist__23813);
var val = cljs.core.first(arglist__23813);
var vals = cljs.core.rest(arglist__23813);
return G__23808__delegate(tcoll,val,vals);
});
G__23808.cljs$core$IFn$_invoke$arity$variadic = G__23808__delegate;
return G__23808;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__23814 = null;
if (arguments.length > 2) {
var G__23815__i = 0, G__23815__a = new Array(arguments.length -  2);
while (G__23815__i < G__23815__a.length) {G__23815__a[G__23815__i] = arguments[G__23815__i + 2]; ++G__23815__i;}
G__23814 = new cljs.core.IndexedSeq(G__23815__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__23814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a15372 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a15372);
} else {
var G__24026 = a15372;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24026) : f.call(null,G__24026));
}
} else {
var b15373 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a15372,b15373);
} else {
var G__24027 = a15372;
var G__24028 = b15373;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24027,G__24028) : f.call(null,G__24027,G__24028));
}
} else {
var c15374 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a15372,b15373,c15374);
} else {
var G__24029 = a15372;
var G__24030 = b15373;
var G__24031 = c15374;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24029,G__24030,G__24031) : f.call(null,G__24029,G__24030,G__24031));
}
} else {
var d15375 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a15372,b15373,c15374,d15375);
} else {
var G__24032 = a15372;
var G__24033 = b15373;
var G__24034 = c15374;
var G__24035 = d15375;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24032,G__24033,G__24034,G__24035) : f.call(null,G__24032,G__24033,G__24034,G__24035));
}
} else {
var e15376 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a15372,b15373,c15374,d15375,e15376);
} else {
var G__24036 = a15372;
var G__24037 = b15373;
var G__24038 = c15374;
var G__24039 = d15375;
var G__24040 = e15376;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24036,G__24037,G__24038,G__24039,G__24040) : f.call(null,G__24036,G__24037,G__24038,G__24039,G__24040));
}
} else {
var f15377 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a15372,b15373,c15374,d15375,e15376,f15377);
} else {
var G__24041 = a15372;
var G__24042 = b15373;
var G__24043 = c15374;
var G__24044 = d15375;
var G__24045 = e15376;
var G__24046 = f15377;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__24041,G__24042,G__24043,G__24044,G__24045,G__24046) : f.call(null,G__24041,G__24042,G__24043,G__24044,G__24045,G__24046));
}
} else {
var g15378 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a15372,b15373,c15374,d15375,e15376,f15377,g15378);
} else {
var G__24047 = a15372;
var G__24048 = b15373;
var G__24049 = c15374;
var G__24050 = d15375;
var G__24051 = e15376;
var G__24052 = f15377;
var G__24053 = g15378;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053) : f.call(null,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053));
}
} else {
var h15379 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379);
} else {
var G__24054 = a15372;
var G__24055 = b15373;
var G__24056 = c15374;
var G__24057 = d15375;
var G__24058 = e15376;
var G__24059 = f15377;
var G__24060 = g15378;
var G__24061 = h15379;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__24054,G__24055,G__24056,G__24057,G__24058,G__24059,G__24060,G__24061) : f.call(null,G__24054,G__24055,G__24056,G__24057,G__24058,G__24059,G__24060,G__24061));
}
} else {
var i15380 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380);
} else {
var G__24062 = a15372;
var G__24063 = b15373;
var G__24064 = c15374;
var G__24065 = d15375;
var G__24066 = e15376;
var G__24067 = f15377;
var G__24068 = g15378;
var G__24069 = h15379;
var G__24070 = i15380;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070) : f.call(null,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070));
}
} else {
var j15381 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381);
} else {
var G__24071 = a15372;
var G__24072 = b15373;
var G__24073 = c15374;
var G__24074 = d15375;
var G__24075 = e15376;
var G__24076 = f15377;
var G__24077 = g15378;
var G__24078 = h15379;
var G__24079 = i15380;
var G__24080 = j15381;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080) : f.call(null,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080));
}
} else {
var k15382 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382);
} else {
var G__24081 = a15372;
var G__24082 = b15373;
var G__24083 = c15374;
var G__24084 = d15375;
var G__24085 = e15376;
var G__24086 = f15377;
var G__24087 = g15378;
var G__24088 = h15379;
var G__24089 = i15380;
var G__24090 = j15381;
var G__24091 = k15382;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090,G__24091) : f.call(null,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090,G__24091));
}
} else {
var l15383 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383);
} else {
var G__24092 = a15372;
var G__24093 = b15373;
var G__24094 = c15374;
var G__24095 = d15375;
var G__24096 = e15376;
var G__24097 = f15377;
var G__24098 = g15378;
var G__24099 = h15379;
var G__24100 = i15380;
var G__24101 = j15381;
var G__24102 = k15382;
var G__24103 = l15383;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103) : f.call(null,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103));
}
} else {
var m15384 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384);
} else {
var G__24104 = a15372;
var G__24105 = b15373;
var G__24106 = c15374;
var G__24107 = d15375;
var G__24108 = e15376;
var G__24109 = f15377;
var G__24110 = g15378;
var G__24111 = h15379;
var G__24112 = i15380;
var G__24113 = j15381;
var G__24114 = k15382;
var G__24115 = l15383;
var G__24116 = m15384;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116) : f.call(null,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116));
}
} else {
var n15385 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385);
} else {
var G__24117 = a15372;
var G__24118 = b15373;
var G__24119 = c15374;
var G__24120 = d15375;
var G__24121 = e15376;
var G__24122 = f15377;
var G__24123 = g15378;
var G__24124 = h15379;
var G__24125 = i15380;
var G__24126 = j15381;
var G__24127 = k15382;
var G__24128 = l15383;
var G__24129 = m15384;
var G__24130 = n15385;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130) : f.call(null,G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130));
}
} else {
var o15386 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385,o15386);
} else {
var G__24131 = a15372;
var G__24132 = b15373;
var G__24133 = c15374;
var G__24134 = d15375;
var G__24135 = e15376;
var G__24136 = f15377;
var G__24137 = g15378;
var G__24138 = h15379;
var G__24139 = i15380;
var G__24140 = j15381;
var G__24141 = k15382;
var G__24142 = l15383;
var G__24143 = m15384;
var G__24144 = n15385;
var G__24145 = o15386;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145) : f.call(null,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145));
}
} else {
var p15387 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385,o15386,p15387);
} else {
var G__24146 = a15372;
var G__24147 = b15373;
var G__24148 = c15374;
var G__24149 = d15375;
var G__24150 = e15376;
var G__24151 = f15377;
var G__24152 = g15378;
var G__24153 = h15379;
var G__24154 = i15380;
var G__24155 = j15381;
var G__24156 = k15382;
var G__24157 = l15383;
var G__24158 = m15384;
var G__24159 = n15385;
var G__24160 = o15386;
var G__24161 = p15387;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161) : f.call(null,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161));
}
} else {
var q15388 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385,o15386,p15387,q15388);
} else {
var G__24162 = a15372;
var G__24163 = b15373;
var G__24164 = c15374;
var G__24165 = d15375;
var G__24166 = e15376;
var G__24167 = f15377;
var G__24168 = g15378;
var G__24169 = h15379;
var G__24170 = i15380;
var G__24171 = j15381;
var G__24172 = k15382;
var G__24173 = l15383;
var G__24174 = m15384;
var G__24175 = n15385;
var G__24176 = o15386;
var G__24177 = p15387;
var G__24178 = q15388;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178) : f.call(null,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178));
}
} else {
var r15389 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385,o15386,p15387,q15388,r15389);
} else {
var G__24179 = a15372;
var G__24180 = b15373;
var G__24181 = c15374;
var G__24182 = d15375;
var G__24183 = e15376;
var G__24184 = f15377;
var G__24185 = g15378;
var G__24186 = h15379;
var G__24187 = i15380;
var G__24188 = j15381;
var G__24189 = k15382;
var G__24190 = l15383;
var G__24191 = m15384;
var G__24192 = n15385;
var G__24193 = o15386;
var G__24194 = p15387;
var G__24195 = q15388;
var G__24196 = r15389;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196) : f.call(null,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196));
}
} else {
var s15390 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385,o15386,p15387,q15388,r15389,s15390);
} else {
var G__24197 = a15372;
var G__24198 = b15373;
var G__24199 = c15374;
var G__24200 = d15375;
var G__24201 = e15376;
var G__24202 = f15377;
var G__24203 = g15378;
var G__24204 = h15379;
var G__24205 = i15380;
var G__24206 = j15381;
var G__24207 = k15382;
var G__24208 = l15383;
var G__24209 = m15384;
var G__24210 = n15385;
var G__24211 = o15386;
var G__24212 = p15387;
var G__24213 = q15388;
var G__24214 = r15389;
var G__24215 = s15390;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215) : f.call(null,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215));
}
} else {
var t15391 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a15372,b15373,c15374,d15375,e15376,f15377,g15378,h15379,i15380,j15381,k15382,l15383,m15384,n15385,o15386,p15387,q15388,r15389,s15390,t15391);
} else {
var G__24216 = a15372;
var G__24217 = b15373;
var G__24218 = c15374;
var G__24219 = d15375;
var G__24220 = e15376;
var G__24221 = f15377;
var G__24222 = g15378;
var G__24223 = h15379;
var G__24224 = i15380;
var G__24225 = j15381;
var G__24226 = k15382;
var G__24227 = l15383;
var G__24228 = m15384;
var G__24229 = n15385;
var G__24230 = o15386;
var G__24231 = p15387;
var G__24232 = q15388;
var G__24233 = r15389;
var G__24234 = s15390;
var G__24235 = t15391;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235) : f.call(null,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__24236__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__24236 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__24237__i = 0, G__24237__a = new Array(arguments.length -  5);
while (G__24237__i < G__24237__a.length) {G__24237__a[G__24237__i] = arguments[G__24237__i + 5]; ++G__24237__i;}
  args = new cljs.core.IndexedSeq(G__24237__a,0);
} 
return G__24236__delegate.call(this,f,a,b,c,d,args);};
G__24236.cljs$lang$maxFixedArity = 5;
G__24236.cljs$lang$applyTo = (function (arglist__24238){
var f = cljs.core.first(arglist__24238);
arglist__24238 = cljs.core.next(arglist__24238);
var a = cljs.core.first(arglist__24238);
arglist__24238 = cljs.core.next(arglist__24238);
var b = cljs.core.first(arglist__24238);
arglist__24238 = cljs.core.next(arglist__24238);
var c = cljs.core.first(arglist__24238);
arglist__24238 = cljs.core.next(arglist__24238);
var d = cljs.core.first(arglist__24238);
var args = cljs.core.rest(arglist__24238);
return G__24236__delegate(f,a,b,c,d,args);
});
G__24236.cljs$core$IFn$_invoke$arity$variadic = G__24236__delegate;
return G__24236;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__24239 = null;
if (arguments.length > 5) {
var G__24240__i = 0, G__24240__a = new Array(arguments.length -  5);
while (G__24240__i < G__24240__a.length) {G__24240__a[G__24240__i] = arguments[G__24240__i + 5]; ++G__24240__i;}
G__24239 = new cljs.core.IndexedSeq(G__24240__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__24239);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__24256 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24256) : f.call(null,G__24256));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__24257 = cljs.core.meta(obj);
var G__24258 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24257,G__24258) : f.call(null,G__24257,G__24258));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__24259 = cljs.core.meta(obj);
var G__24260 = a;
var G__24261 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24259,G__24260,G__24261) : f.call(null,G__24259,G__24260,G__24261));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__24262 = cljs.core.meta(obj);
var G__24263 = a;
var G__24264 = b;
var G__24265 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24262,G__24263,G__24264,G__24265) : f.call(null,G__24262,G__24263,G__24264,G__24265));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__24266 = cljs.core.meta(obj);
var G__24267 = a;
var G__24268 = b;
var G__24269 = c;
var G__24270 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24266,G__24267,G__24268,G__24269,G__24270) : f.call(null,G__24266,G__24267,G__24268,G__24269,G__24270));
})());
});
var vary_meta__7 = (function() { 
var G__24271__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__24271 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__24272__i = 0, G__24272__a = new Array(arguments.length -  6);
while (G__24272__i < G__24272__a.length) {G__24272__a[G__24272__i] = arguments[G__24272__i + 6]; ++G__24272__i;}
  args = new cljs.core.IndexedSeq(G__24272__a,0);
} 
return G__24271__delegate.call(this,obj,f,a,b,c,d,args);};
G__24271.cljs$lang$maxFixedArity = 6;
G__24271.cljs$lang$applyTo = (function (arglist__24273){
var obj = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var f = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var a = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var b = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var c = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var d = cljs.core.first(arglist__24273);
var args = cljs.core.rest(arglist__24273);
return G__24271__delegate(obj,f,a,b,c,d,args);
});
G__24271.cljs$core$IFn$_invoke$arity$variadic = G__24271__delegate;
return G__24271;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__24274 = null;
if (arguments.length > 6) {
var G__24275__i = 0, G__24275__a = new Array(arguments.length -  6);
while (G__24275__i < G__24275__a.length) {G__24275__a[G__24275__i] = arguments[G__24275__i + 6]; ++G__24275__i;}
G__24274 = new cljs.core.IndexedSeq(G__24275__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__24274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__24276__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__24276 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24277__i = 0, G__24277__a = new Array(arguments.length -  2);
while (G__24277__i < G__24277__a.length) {G__24277__a[G__24277__i] = arguments[G__24277__i + 2]; ++G__24277__i;}
  more = new cljs.core.IndexedSeq(G__24277__a,0);
} 
return G__24276__delegate.call(this,x,y,more);};
G__24276.cljs$lang$maxFixedArity = 2;
G__24276.cljs$lang$applyTo = (function (arglist__24278){
var x = cljs.core.first(arglist__24278);
arglist__24278 = cljs.core.next(arglist__24278);
var y = cljs.core.first(arglist__24278);
var more = cljs.core.rest(arglist__24278);
return G__24276__delegate(x,y,more);
});
G__24276.cljs$core$IFn$_invoke$arity$variadic = G__24276__delegate;
return G__24276;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__24279 = null;
if (arguments.length > 2) {
var G__24280__i = 0, G__24280__a = new Array(arguments.length -  2);
while (G__24280__i < G__24280__a.length) {G__24280__a[G__24280__i] = arguments[G__24280__i + 2]; ++G__24280__i;}
G__24279 = new cljs.core.IndexedSeq(G__24280__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t24284 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t24284 = (function (nil_iter,meta24285){
this.nil_iter = nil_iter;
this.meta24285 = meta24285;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t24284.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t24284.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t24284.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t24284.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_24286){
var self__ = this;
var _24286__$1 = this;
return self__.meta24285;
});

cljs.core.t24284.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_24286,meta24285__$1){
var self__ = this;
var _24286__$1 = this;
return (new cljs.core.t24284(self__.nil_iter,meta24285__$1));
});

cljs.core.t24284.cljs$lang$type = true;

cljs.core.t24284.cljs$lang$ctorStr = "cljs.core/t24284";

cljs.core.t24284.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/t24284");
});

cljs.core.__GT_t24284 = (function __GT_t24284(nil_iter__$1,meta24285){
return (new cljs.core.t24284(nil_iter__$1,meta24285));
});

}

return (new cljs.core.t24284(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__14429__auto__ = !((lt.stepper == null));
if(and__14429__auto__){
return self__.iter.hasNext();
} else {
return and__14429__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__24287 = lt;
var G__24288 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__24287,G__24288) : self__.xform.call(null,G__24287,G__24288));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__24289 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__24289) : self__.xform.call(null,G__24289));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__24291 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24291) : xform.call(null,G__24291));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__24293 = cljs.core.next(iters__$1);
iters__$1 = G__24293;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__15328__auto___24294 = self__.iters.length;
var i_24295 = (0);
while(true){
if((i_24295 < n__15328__auto___24294)){
(self__.nexts[i_24295] = (self__.iters[i_24295]).next());

var G__24296 = (i_24295 + (1));
i_24295 = G__24296;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__14429__auto__ = !((lt.stepper == null));
if(and__14429__auto__){
return this$.hasNext();
} else {
return and__14429__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__24292 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__24292) : self__.xform.call(null,G__24292));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__24301 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24301) : xform.call(null,G__24301));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__24302_24306 = cljs.core.seq(colls);
var chunk__24303_24307 = null;
var count__24304_24308 = (0);
var i__24305_24309 = (0);
while(true){
if((i__24305_24309 < count__24304_24308)){
var coll_24310 = chunk__24303_24307.cljs$core$IIndexed$_nth$arity$2(null,i__24305_24309);
iters.push(cljs.core.iter(coll_24310));

var G__24311 = seq__24302_24306;
var G__24312 = chunk__24303_24307;
var G__24313 = count__24304_24308;
var G__24314 = (i__24305_24309 + (1));
seq__24302_24306 = G__24311;
chunk__24303_24307 = G__24312;
count__24304_24308 = G__24313;
i__24305_24309 = G__24314;
continue;
} else {
var temp__4406__auto___24315 = cljs.core.seq(seq__24302_24306);
if(temp__4406__auto___24315){
var seq__24302_24316__$1 = temp__4406__auto___24315;
if(cljs.core.chunked_seq_QMARK_(seq__24302_24316__$1)){
var c__15228__auto___24317 = cljs.core.chunk_first(seq__24302_24316__$1);
var G__24318 = cljs.core.chunk_rest(seq__24302_24316__$1);
var G__24319 = c__15228__auto___24317;
var G__24320 = cljs.core.count(c__15228__auto___24317);
var G__24321 = (0);
seq__24302_24306 = G__24318;
chunk__24303_24307 = G__24319;
count__24304_24308 = G__24320;
i__24305_24309 = G__24321;
continue;
} else {
var coll_24322 = cljs.core.first(seq__24302_24316__$1);
iters.push(cljs.core.iter(coll_24322));

var G__24323 = cljs.core.next(seq__24302_24316__$1);
var G__24324 = null;
var G__24325 = (0);
var G__24326 = (0);
seq__24302_24306 = G__24323;
chunk__24303_24307 = G__24324;
count__24304_24308 = G__24325;
i__24305_24309 = G__24326;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__14441__auto__ = cljs.core.seq(coll);
if(or__14441__auto__){
return or__14441__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__24327__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__24327 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__24328__i = 0, G__24328__a = new Array(arguments.length -  2);
while (G__24328__i < G__24328__a.length) {G__24328__a[G__24328__i] = arguments[G__24328__i + 2]; ++G__24328__i;}
  colls = new cljs.core.IndexedSeq(G__24328__a,0);
} 
return G__24327__delegate.call(this,xform,coll,colls);};
G__24327.cljs$lang$maxFixedArity = 2;
G__24327.cljs$lang$applyTo = (function (arglist__24329){
var xform = cljs.core.first(arglist__24329);
arglist__24329 = cljs.core.next(arglist__24329);
var coll = cljs.core.first(arglist__24329);
var colls = cljs.core.rest(arglist__24329);
return G__24327__delegate(xform,coll,colls);
});
G__24327.cljs$core$IFn$_invoke$arity$variadic = G__24327__delegate;
return G__24327;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__24330 = null;
if (arguments.length > 2) {
var G__24331__i = 0, G__24331__a = new Array(arguments.length -  2);
while (G__24331__i < G__24331__a.length) {G__24331__a[G__24331__i] = arguments[G__24331__i + 2]; ++G__24331__i;}
G__24330 = new cljs.core.IndexedSeq(G__24331__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__24330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__24333 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24333) : pred.call(null,G__24333));
})())){
var G__24334 = pred;
var G__24335 = cljs.core.next(coll);
pred = G__24334;
coll = G__24335;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__14441__auto__ = (function (){var G__24339 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24339) : pred.call(null,G__24339));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var G__24340 = pred;
var G__24341 = cljs.core.next(coll);
pred = G__24340;
coll = G__24341;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__24348 = null;
var G__24348__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__24348__1 = (function (x){
return cljs.core.not((function (){var G__24345 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24345) : f.call(null,G__24345));
})());
});
var G__24348__2 = (function (x,y){
return cljs.core.not((function (){var G__24346 = x;
var G__24347 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24346,G__24347) : f.call(null,G__24346,G__24347));
})());
});
var G__24348__3 = (function() { 
var G__24349__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__24349 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24350__i = 0, G__24350__a = new Array(arguments.length -  2);
while (G__24350__i < G__24350__a.length) {G__24350__a[G__24350__i] = arguments[G__24350__i + 2]; ++G__24350__i;}
  zs = new cljs.core.IndexedSeq(G__24350__a,0);
} 
return G__24349__delegate.call(this,x,y,zs);};
G__24349.cljs$lang$maxFixedArity = 2;
G__24349.cljs$lang$applyTo = (function (arglist__24351){
var x = cljs.core.first(arglist__24351);
arglist__24351 = cljs.core.next(arglist__24351);
var y = cljs.core.first(arglist__24351);
var zs = cljs.core.rest(arglist__24351);
return G__24349__delegate(x,y,zs);
});
G__24349.cljs$core$IFn$_invoke$arity$variadic = G__24349__delegate;
return G__24349;
})()
;
G__24348 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__24348__0.call(this);
case 1:
return G__24348__1.call(this,x);
case 2:
return G__24348__2.call(this,x,y);
default:
var G__24352 = null;
if (arguments.length > 2) {
var G__24353__i = 0, G__24353__a = new Array(arguments.length -  2);
while (G__24353__i < G__24353__a.length) {G__24353__a[G__24353__i] = arguments[G__24353__i + 2]; ++G__24353__i;}
G__24352 = new cljs.core.IndexedSeq(G__24353__a,0);
}
return G__24348__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24352);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24348.cljs$lang$maxFixedArity = 2;
G__24348.cljs$lang$applyTo = G__24348__3.cljs$lang$applyTo;
G__24348.cljs$core$IFn$_invoke$arity$0 = G__24348__0;
G__24348.cljs$core$IFn$_invoke$arity$1 = G__24348__1;
G__24348.cljs$core$IFn$_invoke$arity$2 = G__24348__2;
G__24348.cljs$core$IFn$_invoke$arity$variadic = G__24348__3.cljs$core$IFn$_invoke$arity$variadic;
return G__24348;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__24354__delegate = function (args){
return x;
};
var G__24354 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24355__i = 0, G__24355__a = new Array(arguments.length -  0);
while (G__24355__i < G__24355__a.length) {G__24355__a[G__24355__i] = arguments[G__24355__i + 0]; ++G__24355__i;}
  args = new cljs.core.IndexedSeq(G__24355__a,0);
} 
return G__24354__delegate.call(this,args);};
G__24354.cljs$lang$maxFixedArity = 0;
G__24354.cljs$lang$applyTo = (function (arglist__24356){
var args = cljs.core.seq(arglist__24356);
return G__24354__delegate(args);
});
G__24354.cljs$core$IFn$_invoke$arity$variadic = G__24354__delegate;
return G__24354;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__24411 = null;
var G__24411__0 = (function (){
var G__24384 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24384) : f.call(null,G__24384));
});
var G__24411__1 = (function (x){
var G__24385 = (function (){var G__24386 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24386) : g.call(null,G__24386));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24385) : f.call(null,G__24385));
});
var G__24411__2 = (function (x,y){
var G__24387 = (function (){var G__24388 = x;
var G__24389 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24388,G__24389) : g.call(null,G__24388,G__24389));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24387) : f.call(null,G__24387));
});
var G__24411__3 = (function (x,y,z){
var G__24390 = (function (){var G__24391 = x;
var G__24392 = y;
var G__24393 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24391,G__24392,G__24393) : g.call(null,G__24391,G__24392,G__24393));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24390) : f.call(null,G__24390));
});
var G__24411__4 = (function() { 
var G__24412__delegate = function (x,y,z,args){
var G__24394 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24394) : f.call(null,G__24394));
};
var G__24412 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24413__i = 0, G__24413__a = new Array(arguments.length -  3);
while (G__24413__i < G__24413__a.length) {G__24413__a[G__24413__i] = arguments[G__24413__i + 3]; ++G__24413__i;}
  args = new cljs.core.IndexedSeq(G__24413__a,0);
} 
return G__24412__delegate.call(this,x,y,z,args);};
G__24412.cljs$lang$maxFixedArity = 3;
G__24412.cljs$lang$applyTo = (function (arglist__24414){
var x = cljs.core.first(arglist__24414);
arglist__24414 = cljs.core.next(arglist__24414);
var y = cljs.core.first(arglist__24414);
arglist__24414 = cljs.core.next(arglist__24414);
var z = cljs.core.first(arglist__24414);
var args = cljs.core.rest(arglist__24414);
return G__24412__delegate(x,y,z,args);
});
G__24412.cljs$core$IFn$_invoke$arity$variadic = G__24412__delegate;
return G__24412;
})()
;
G__24411 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24411__0.call(this);
case 1:
return G__24411__1.call(this,x);
case 2:
return G__24411__2.call(this,x,y);
case 3:
return G__24411__3.call(this,x,y,z);
default:
var G__24415 = null;
if (arguments.length > 3) {
var G__24416__i = 0, G__24416__a = new Array(arguments.length -  3);
while (G__24416__i < G__24416__a.length) {G__24416__a[G__24416__i] = arguments[G__24416__i + 3]; ++G__24416__i;}
G__24415 = new cljs.core.IndexedSeq(G__24416__a,0);
}
return G__24411__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24411.cljs$lang$maxFixedArity = 3;
G__24411.cljs$lang$applyTo = G__24411__4.cljs$lang$applyTo;
G__24411.cljs$core$IFn$_invoke$arity$0 = G__24411__0;
G__24411.cljs$core$IFn$_invoke$arity$1 = G__24411__1;
G__24411.cljs$core$IFn$_invoke$arity$2 = G__24411__2;
G__24411.cljs$core$IFn$_invoke$arity$3 = G__24411__3;
G__24411.cljs$core$IFn$_invoke$arity$variadic = G__24411__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24411;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__24417 = null;
var G__24417__0 = (function (){
var G__24395 = (function (){var G__24396 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24396) : g.call(null,G__24396));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24395) : f.call(null,G__24395));
});
var G__24417__1 = (function (x){
var G__24397 = (function (){var G__24398 = (function (){var G__24399 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__24399) : h.call(null,G__24399));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24398) : g.call(null,G__24398));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24397) : f.call(null,G__24397));
});
var G__24417__2 = (function (x,y){
var G__24400 = (function (){var G__24401 = (function (){var G__24402 = x;
var G__24403 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__24402,G__24403) : h.call(null,G__24402,G__24403));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24401) : g.call(null,G__24401));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24400) : f.call(null,G__24400));
});
var G__24417__3 = (function (x,y,z){
var G__24404 = (function (){var G__24405 = (function (){var G__24406 = x;
var G__24407 = y;
var G__24408 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__24406,G__24407,G__24408) : h.call(null,G__24406,G__24407,G__24408));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24405) : g.call(null,G__24405));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24404) : f.call(null,G__24404));
});
var G__24417__4 = (function() { 
var G__24418__delegate = function (x,y,z,args){
var G__24409 = (function (){var G__24410 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24410) : g.call(null,G__24410));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24409) : f.call(null,G__24409));
};
var G__24418 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24419__i = 0, G__24419__a = new Array(arguments.length -  3);
while (G__24419__i < G__24419__a.length) {G__24419__a[G__24419__i] = arguments[G__24419__i + 3]; ++G__24419__i;}
  args = new cljs.core.IndexedSeq(G__24419__a,0);
} 
return G__24418__delegate.call(this,x,y,z,args);};
G__24418.cljs$lang$maxFixedArity = 3;
G__24418.cljs$lang$applyTo = (function (arglist__24420){
var x = cljs.core.first(arglist__24420);
arglist__24420 = cljs.core.next(arglist__24420);
var y = cljs.core.first(arglist__24420);
arglist__24420 = cljs.core.next(arglist__24420);
var z = cljs.core.first(arglist__24420);
var args = cljs.core.rest(arglist__24420);
return G__24418__delegate(x,y,z,args);
});
G__24418.cljs$core$IFn$_invoke$arity$variadic = G__24418__delegate;
return G__24418;
})()
;
G__24417 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24417__0.call(this);
case 1:
return G__24417__1.call(this,x);
case 2:
return G__24417__2.call(this,x,y);
case 3:
return G__24417__3.call(this,x,y,z);
default:
var G__24421 = null;
if (arguments.length > 3) {
var G__24422__i = 0, G__24422__a = new Array(arguments.length -  3);
while (G__24422__i < G__24422__a.length) {G__24422__a[G__24422__i] = arguments[G__24422__i + 3]; ++G__24422__i;}
G__24421 = new cljs.core.IndexedSeq(G__24422__a,0);
}
return G__24417__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24417.cljs$lang$maxFixedArity = 3;
G__24417.cljs$lang$applyTo = G__24417__4.cljs$lang$applyTo;
G__24417.cljs$core$IFn$_invoke$arity$0 = G__24417__0;
G__24417.cljs$core$IFn$_invoke$arity$1 = G__24417__1;
G__24417.cljs$core$IFn$_invoke$arity$2 = G__24417__2;
G__24417.cljs$core$IFn$_invoke$arity$3 = G__24417__3;
G__24417.cljs$core$IFn$_invoke$arity$variadic = G__24417__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24417;
})()
});
var comp__4 = (function() { 
var G__24423__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__24424__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__24425 = cljs.core.first(fs__$2).call(null,ret);
var G__24426 = cljs.core.next(fs__$2);
ret = G__24425;
fs__$2 = G__24426;
continue;
} else {
return ret;
}
break;
}
};
var G__24424 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24427__i = 0, G__24427__a = new Array(arguments.length -  0);
while (G__24427__i < G__24427__a.length) {G__24427__a[G__24427__i] = arguments[G__24427__i + 0]; ++G__24427__i;}
  args = new cljs.core.IndexedSeq(G__24427__a,0);
} 
return G__24424__delegate.call(this,args);};
G__24424.cljs$lang$maxFixedArity = 0;
G__24424.cljs$lang$applyTo = (function (arglist__24428){
var args = cljs.core.seq(arglist__24428);
return G__24424__delegate(args);
});
G__24424.cljs$core$IFn$_invoke$arity$variadic = G__24424__delegate;
return G__24424;
})()
;
;})(fs__$1))
};
var G__24423 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__24429__i = 0, G__24429__a = new Array(arguments.length -  3);
while (G__24429__i < G__24429__a.length) {G__24429__a[G__24429__i] = arguments[G__24429__i + 3]; ++G__24429__i;}
  fs = new cljs.core.IndexedSeq(G__24429__a,0);
} 
return G__24423__delegate.call(this,f1,f2,f3,fs);};
G__24423.cljs$lang$maxFixedArity = 3;
G__24423.cljs$lang$applyTo = (function (arglist__24430){
var f1 = cljs.core.first(arglist__24430);
arglist__24430 = cljs.core.next(arglist__24430);
var f2 = cljs.core.first(arglist__24430);
arglist__24430 = cljs.core.next(arglist__24430);
var f3 = cljs.core.first(arglist__24430);
var fs = cljs.core.rest(arglist__24430);
return G__24423__delegate(f1,f2,f3,fs);
});
G__24423.cljs$core$IFn$_invoke$arity$variadic = G__24423__delegate;
return G__24423;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__24431 = null;
if (arguments.length > 3) {
var G__24432__i = 0, G__24432__a = new Array(arguments.length -  3);
while (G__24432__i < G__24432__a.length) {G__24432__a[G__24432__i] = arguments[G__24432__i + 3]; ++G__24432__i;}
G__24431 = new cljs.core.IndexedSeq(G__24432__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__24431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__24517 = null;
var G__24517__0 = (function (){
var G__24475 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24475) : f.call(null,G__24475));
});
var G__24517__1 = (function (x){
var G__24476 = arg1;
var G__24477 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24476,G__24477) : f.call(null,G__24476,G__24477));
});
var G__24517__2 = (function (x,y){
var G__24478 = arg1;
var G__24479 = x;
var G__24480 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24478,G__24479,G__24480) : f.call(null,G__24478,G__24479,G__24480));
});
var G__24517__3 = (function (x,y,z){
var G__24481 = arg1;
var G__24482 = x;
var G__24483 = y;
var G__24484 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24481,G__24482,G__24483,G__24484) : f.call(null,G__24481,G__24482,G__24483,G__24484));
});
var G__24517__4 = (function() { 
var G__24518__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__24518 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24519__i = 0, G__24519__a = new Array(arguments.length -  3);
while (G__24519__i < G__24519__a.length) {G__24519__a[G__24519__i] = arguments[G__24519__i + 3]; ++G__24519__i;}
  args = new cljs.core.IndexedSeq(G__24519__a,0);
} 
return G__24518__delegate.call(this,x,y,z,args);};
G__24518.cljs$lang$maxFixedArity = 3;
G__24518.cljs$lang$applyTo = (function (arglist__24520){
var x = cljs.core.first(arglist__24520);
arglist__24520 = cljs.core.next(arglist__24520);
var y = cljs.core.first(arglist__24520);
arglist__24520 = cljs.core.next(arglist__24520);
var z = cljs.core.first(arglist__24520);
var args = cljs.core.rest(arglist__24520);
return G__24518__delegate(x,y,z,args);
});
G__24518.cljs$core$IFn$_invoke$arity$variadic = G__24518__delegate;
return G__24518;
})()
;
G__24517 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24517__0.call(this);
case 1:
return G__24517__1.call(this,x);
case 2:
return G__24517__2.call(this,x,y);
case 3:
return G__24517__3.call(this,x,y,z);
default:
var G__24521 = null;
if (arguments.length > 3) {
var G__24522__i = 0, G__24522__a = new Array(arguments.length -  3);
while (G__24522__i < G__24522__a.length) {G__24522__a[G__24522__i] = arguments[G__24522__i + 3]; ++G__24522__i;}
G__24521 = new cljs.core.IndexedSeq(G__24522__a,0);
}
return G__24517__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24517.cljs$lang$maxFixedArity = 3;
G__24517.cljs$lang$applyTo = G__24517__4.cljs$lang$applyTo;
G__24517.cljs$core$IFn$_invoke$arity$0 = G__24517__0;
G__24517.cljs$core$IFn$_invoke$arity$1 = G__24517__1;
G__24517.cljs$core$IFn$_invoke$arity$2 = G__24517__2;
G__24517.cljs$core$IFn$_invoke$arity$3 = G__24517__3;
G__24517.cljs$core$IFn$_invoke$arity$variadic = G__24517__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24517;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__24523 = null;
var G__24523__0 = (function (){
var G__24485 = arg1;
var G__24486 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24485,G__24486) : f.call(null,G__24485,G__24486));
});
var G__24523__1 = (function (x){
var G__24487 = arg1;
var G__24488 = arg2;
var G__24489 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24487,G__24488,G__24489) : f.call(null,G__24487,G__24488,G__24489));
});
var G__24523__2 = (function (x,y){
var G__24490 = arg1;
var G__24491 = arg2;
var G__24492 = x;
var G__24493 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24490,G__24491,G__24492,G__24493) : f.call(null,G__24490,G__24491,G__24492,G__24493));
});
var G__24523__3 = (function (x,y,z){
var G__24494 = arg1;
var G__24495 = arg2;
var G__24496 = x;
var G__24497 = y;
var G__24498 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24494,G__24495,G__24496,G__24497,G__24498) : f.call(null,G__24494,G__24495,G__24496,G__24497,G__24498));
});
var G__24523__4 = (function() { 
var G__24524__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__24524 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24525__i = 0, G__24525__a = new Array(arguments.length -  3);
while (G__24525__i < G__24525__a.length) {G__24525__a[G__24525__i] = arguments[G__24525__i + 3]; ++G__24525__i;}
  args = new cljs.core.IndexedSeq(G__24525__a,0);
} 
return G__24524__delegate.call(this,x,y,z,args);};
G__24524.cljs$lang$maxFixedArity = 3;
G__24524.cljs$lang$applyTo = (function (arglist__24526){
var x = cljs.core.first(arglist__24526);
arglist__24526 = cljs.core.next(arglist__24526);
var y = cljs.core.first(arglist__24526);
arglist__24526 = cljs.core.next(arglist__24526);
var z = cljs.core.first(arglist__24526);
var args = cljs.core.rest(arglist__24526);
return G__24524__delegate(x,y,z,args);
});
G__24524.cljs$core$IFn$_invoke$arity$variadic = G__24524__delegate;
return G__24524;
})()
;
G__24523 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24523__0.call(this);
case 1:
return G__24523__1.call(this,x);
case 2:
return G__24523__2.call(this,x,y);
case 3:
return G__24523__3.call(this,x,y,z);
default:
var G__24527 = null;
if (arguments.length > 3) {
var G__24528__i = 0, G__24528__a = new Array(arguments.length -  3);
while (G__24528__i < G__24528__a.length) {G__24528__a[G__24528__i] = arguments[G__24528__i + 3]; ++G__24528__i;}
G__24527 = new cljs.core.IndexedSeq(G__24528__a,0);
}
return G__24523__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24523.cljs$lang$maxFixedArity = 3;
G__24523.cljs$lang$applyTo = G__24523__4.cljs$lang$applyTo;
G__24523.cljs$core$IFn$_invoke$arity$0 = G__24523__0;
G__24523.cljs$core$IFn$_invoke$arity$1 = G__24523__1;
G__24523.cljs$core$IFn$_invoke$arity$2 = G__24523__2;
G__24523.cljs$core$IFn$_invoke$arity$3 = G__24523__3;
G__24523.cljs$core$IFn$_invoke$arity$variadic = G__24523__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24523;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__24529 = null;
var G__24529__0 = (function (){
var G__24499 = arg1;
var G__24500 = arg2;
var G__24501 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24499,G__24500,G__24501) : f.call(null,G__24499,G__24500,G__24501));
});
var G__24529__1 = (function (x){
var G__24502 = arg1;
var G__24503 = arg2;
var G__24504 = arg3;
var G__24505 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24502,G__24503,G__24504,G__24505) : f.call(null,G__24502,G__24503,G__24504,G__24505));
});
var G__24529__2 = (function (x,y){
var G__24506 = arg1;
var G__24507 = arg2;
var G__24508 = arg3;
var G__24509 = x;
var G__24510 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24506,G__24507,G__24508,G__24509,G__24510) : f.call(null,G__24506,G__24507,G__24508,G__24509,G__24510));
});
var G__24529__3 = (function (x,y,z){
var G__24511 = arg1;
var G__24512 = arg2;
var G__24513 = arg3;
var G__24514 = x;
var G__24515 = y;
var G__24516 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__24511,G__24512,G__24513,G__24514,G__24515,G__24516) : f.call(null,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516));
});
var G__24529__4 = (function() { 
var G__24530__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__24530 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24531__i = 0, G__24531__a = new Array(arguments.length -  3);
while (G__24531__i < G__24531__a.length) {G__24531__a[G__24531__i] = arguments[G__24531__i + 3]; ++G__24531__i;}
  args = new cljs.core.IndexedSeq(G__24531__a,0);
} 
return G__24530__delegate.call(this,x,y,z,args);};
G__24530.cljs$lang$maxFixedArity = 3;
G__24530.cljs$lang$applyTo = (function (arglist__24532){
var x = cljs.core.first(arglist__24532);
arglist__24532 = cljs.core.next(arglist__24532);
var y = cljs.core.first(arglist__24532);
arglist__24532 = cljs.core.next(arglist__24532);
var z = cljs.core.first(arglist__24532);
var args = cljs.core.rest(arglist__24532);
return G__24530__delegate(x,y,z,args);
});
G__24530.cljs$core$IFn$_invoke$arity$variadic = G__24530__delegate;
return G__24530;
})()
;
G__24529 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24529__0.call(this);
case 1:
return G__24529__1.call(this,x);
case 2:
return G__24529__2.call(this,x,y);
case 3:
return G__24529__3.call(this,x,y,z);
default:
var G__24533 = null;
if (arguments.length > 3) {
var G__24534__i = 0, G__24534__a = new Array(arguments.length -  3);
while (G__24534__i < G__24534__a.length) {G__24534__a[G__24534__i] = arguments[G__24534__i + 3]; ++G__24534__i;}
G__24533 = new cljs.core.IndexedSeq(G__24534__a,0);
}
return G__24529__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24529.cljs$lang$maxFixedArity = 3;
G__24529.cljs$lang$applyTo = G__24529__4.cljs$lang$applyTo;
G__24529.cljs$core$IFn$_invoke$arity$0 = G__24529__0;
G__24529.cljs$core$IFn$_invoke$arity$1 = G__24529__1;
G__24529.cljs$core$IFn$_invoke$arity$2 = G__24529__2;
G__24529.cljs$core$IFn$_invoke$arity$3 = G__24529__3;
G__24529.cljs$core$IFn$_invoke$arity$variadic = G__24529__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24529;
})()
});
var partial__5 = (function() { 
var G__24535__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__24536__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__24536 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24537__i = 0, G__24537__a = new Array(arguments.length -  0);
while (G__24537__i < G__24537__a.length) {G__24537__a[G__24537__i] = arguments[G__24537__i + 0]; ++G__24537__i;}
  args = new cljs.core.IndexedSeq(G__24537__a,0);
} 
return G__24536__delegate.call(this,args);};
G__24536.cljs$lang$maxFixedArity = 0;
G__24536.cljs$lang$applyTo = (function (arglist__24538){
var args = cljs.core.seq(arglist__24538);
return G__24536__delegate(args);
});
G__24536.cljs$core$IFn$_invoke$arity$variadic = G__24536__delegate;
return G__24536;
})()
;
};
var G__24535 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__24539__i = 0, G__24539__a = new Array(arguments.length -  4);
while (G__24539__i < G__24539__a.length) {G__24539__a[G__24539__i] = arguments[G__24539__i + 4]; ++G__24539__i;}
  more = new cljs.core.IndexedSeq(G__24539__a,0);
} 
return G__24535__delegate.call(this,f,arg1,arg2,arg3,more);};
G__24535.cljs$lang$maxFixedArity = 4;
G__24535.cljs$lang$applyTo = (function (arglist__24540){
var f = cljs.core.first(arglist__24540);
arglist__24540 = cljs.core.next(arglist__24540);
var arg1 = cljs.core.first(arglist__24540);
arglist__24540 = cljs.core.next(arglist__24540);
var arg2 = cljs.core.first(arglist__24540);
arglist__24540 = cljs.core.next(arglist__24540);
var arg3 = cljs.core.first(arglist__24540);
var more = cljs.core.rest(arglist__24540);
return G__24535__delegate(f,arg1,arg2,arg3,more);
});
G__24535.cljs$core$IFn$_invoke$arity$variadic = G__24535__delegate;
return G__24535;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__24541 = null;
if (arguments.length > 4) {
var G__24542__i = 0, G__24542__a = new Array(arguments.length -  4);
while (G__24542__i < G__24542__a.length) {G__24542__a[G__24542__i] = arguments[G__24542__i + 4]; ++G__24542__i;}
G__24541 = new cljs.core.IndexedSeq(G__24542__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__24541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__24575 = null;
var G__24575__1 = (function (a){
var G__24559 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24559) : f.call(null,G__24559));
});
var G__24575__2 = (function (a,b){
var G__24560 = (((a == null))?x:a);
var G__24561 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24560,G__24561) : f.call(null,G__24560,G__24561));
});
var G__24575__3 = (function (a,b,c){
var G__24562 = (((a == null))?x:a);
var G__24563 = b;
var G__24564 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24562,G__24563,G__24564) : f.call(null,G__24562,G__24563,G__24564));
});
var G__24575__4 = (function() { 
var G__24576__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__24576 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__24577__i = 0, G__24577__a = new Array(arguments.length -  3);
while (G__24577__i < G__24577__a.length) {G__24577__a[G__24577__i] = arguments[G__24577__i + 3]; ++G__24577__i;}
  ds = new cljs.core.IndexedSeq(G__24577__a,0);
} 
return G__24576__delegate.call(this,a,b,c,ds);};
G__24576.cljs$lang$maxFixedArity = 3;
G__24576.cljs$lang$applyTo = (function (arglist__24578){
var a = cljs.core.first(arglist__24578);
arglist__24578 = cljs.core.next(arglist__24578);
var b = cljs.core.first(arglist__24578);
arglist__24578 = cljs.core.next(arglist__24578);
var c = cljs.core.first(arglist__24578);
var ds = cljs.core.rest(arglist__24578);
return G__24576__delegate(a,b,c,ds);
});
G__24576.cljs$core$IFn$_invoke$arity$variadic = G__24576__delegate;
return G__24576;
})()
;
G__24575 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__24575__1.call(this,a);
case 2:
return G__24575__2.call(this,a,b);
case 3:
return G__24575__3.call(this,a,b,c);
default:
var G__24579 = null;
if (arguments.length > 3) {
var G__24580__i = 0, G__24580__a = new Array(arguments.length -  3);
while (G__24580__i < G__24580__a.length) {G__24580__a[G__24580__i] = arguments[G__24580__i + 3]; ++G__24580__i;}
G__24579 = new cljs.core.IndexedSeq(G__24580__a,0);
}
return G__24575__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__24579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24575.cljs$lang$maxFixedArity = 3;
G__24575.cljs$lang$applyTo = G__24575__4.cljs$lang$applyTo;
G__24575.cljs$core$IFn$_invoke$arity$1 = G__24575__1;
G__24575.cljs$core$IFn$_invoke$arity$2 = G__24575__2;
G__24575.cljs$core$IFn$_invoke$arity$3 = G__24575__3;
G__24575.cljs$core$IFn$_invoke$arity$variadic = G__24575__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24575;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__24581 = null;
var G__24581__2 = (function (a,b){
var G__24565 = (((a == null))?x:a);
var G__24566 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24565,G__24566) : f.call(null,G__24565,G__24566));
});
var G__24581__3 = (function (a,b,c){
var G__24567 = (((a == null))?x:a);
var G__24568 = (((b == null))?y:b);
var G__24569 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24567,G__24568,G__24569) : f.call(null,G__24567,G__24568,G__24569));
});
var G__24581__4 = (function() { 
var G__24582__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__24582 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__24583__i = 0, G__24583__a = new Array(arguments.length -  3);
while (G__24583__i < G__24583__a.length) {G__24583__a[G__24583__i] = arguments[G__24583__i + 3]; ++G__24583__i;}
  ds = new cljs.core.IndexedSeq(G__24583__a,0);
} 
return G__24582__delegate.call(this,a,b,c,ds);};
G__24582.cljs$lang$maxFixedArity = 3;
G__24582.cljs$lang$applyTo = (function (arglist__24584){
var a = cljs.core.first(arglist__24584);
arglist__24584 = cljs.core.next(arglist__24584);
var b = cljs.core.first(arglist__24584);
arglist__24584 = cljs.core.next(arglist__24584);
var c = cljs.core.first(arglist__24584);
var ds = cljs.core.rest(arglist__24584);
return G__24582__delegate(a,b,c,ds);
});
G__24582.cljs$core$IFn$_invoke$arity$variadic = G__24582__delegate;
return G__24582;
})()
;
G__24581 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__24581__2.call(this,a,b);
case 3:
return G__24581__3.call(this,a,b,c);
default:
var G__24585 = null;
if (arguments.length > 3) {
var G__24586__i = 0, G__24586__a = new Array(arguments.length -  3);
while (G__24586__i < G__24586__a.length) {G__24586__a[G__24586__i] = arguments[G__24586__i + 3]; ++G__24586__i;}
G__24585 = new cljs.core.IndexedSeq(G__24586__a,0);
}
return G__24581__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__24585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24581.cljs$lang$maxFixedArity = 3;
G__24581.cljs$lang$applyTo = G__24581__4.cljs$lang$applyTo;
G__24581.cljs$core$IFn$_invoke$arity$2 = G__24581__2;
G__24581.cljs$core$IFn$_invoke$arity$3 = G__24581__3;
G__24581.cljs$core$IFn$_invoke$arity$variadic = G__24581__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24581;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__24587 = null;
var G__24587__2 = (function (a,b){
var G__24570 = (((a == null))?x:a);
var G__24571 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24570,G__24571) : f.call(null,G__24570,G__24571));
});
var G__24587__3 = (function (a,b,c){
var G__24572 = (((a == null))?x:a);
var G__24573 = (((b == null))?y:b);
var G__24574 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24572,G__24573,G__24574) : f.call(null,G__24572,G__24573,G__24574));
});
var G__24587__4 = (function() { 
var G__24588__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__24588 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__24589__i = 0, G__24589__a = new Array(arguments.length -  3);
while (G__24589__i < G__24589__a.length) {G__24589__a[G__24589__i] = arguments[G__24589__i + 3]; ++G__24589__i;}
  ds = new cljs.core.IndexedSeq(G__24589__a,0);
} 
return G__24588__delegate.call(this,a,b,c,ds);};
G__24588.cljs$lang$maxFixedArity = 3;
G__24588.cljs$lang$applyTo = (function (arglist__24590){
var a = cljs.core.first(arglist__24590);
arglist__24590 = cljs.core.next(arglist__24590);
var b = cljs.core.first(arglist__24590);
arglist__24590 = cljs.core.next(arglist__24590);
var c = cljs.core.first(arglist__24590);
var ds = cljs.core.rest(arglist__24590);
return G__24588__delegate(a,b,c,ds);
});
G__24588.cljs$core$IFn$_invoke$arity$variadic = G__24588__delegate;
return G__24588;
})()
;
G__24587 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__24587__2.call(this,a,b);
case 3:
return G__24587__3.call(this,a,b,c);
default:
var G__24591 = null;
if (arguments.length > 3) {
var G__24592__i = 0, G__24592__a = new Array(arguments.length -  3);
while (G__24592__i < G__24592__a.length) {G__24592__a[G__24592__i] = arguments[G__24592__i + 3]; ++G__24592__i;}
G__24591 = new cljs.core.IndexedSeq(G__24592__a,0);
}
return G__24587__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__24591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24587.cljs$lang$maxFixedArity = 3;
G__24587.cljs$lang$applyTo = G__24587__4.cljs$lang$applyTo;
G__24587.cljs$core$IFn$_invoke$arity$2 = G__24587__2;
G__24587.cljs$core$IFn$_invoke$arity$3 = G__24587__3;
G__24587.cljs$core$IFn$_invoke$arity$variadic = G__24587__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24587;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__24623 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__24623) : cljs.core.volatile_BANG_.call(null,G__24623));
})();
return ((function (i){
return (function() {
var G__24653 = null;
var G__24653__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24653__1 = (function (result){
var G__24624 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24624) : rf.call(null,G__24624));
});
var G__24653__2 = (function (result,input){
var G__24625 = result;
var G__24626 = (function (){var G__24627 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__24628 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24627,G__24628) : f.call(null,G__24627,G__24628));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24625,G__24626) : rf.call(null,G__24625,G__24626));
});
G__24653 = function(result,input){
switch(arguments.length){
case 0:
return G__24653__0.call(this);
case 1:
return G__24653__1.call(this,result);
case 2:
return G__24653__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24653.cljs$core$IFn$_invoke$arity$0 = G__24653__0;
G__24653.cljs$core$IFn$_invoke$arity$1 = G__24653__1;
G__24653.cljs$core$IFn$_invoke$arity$2 = G__24653__2;
return G__24653;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15328__auto___24654 = size;
var i_24655 = (0);
while(true){
if((i_24655 < n__15328__auto___24654)){
cljs.core.chunk_append(b,(function (){var G__24649 = (idx + i_24655);
var G__24650 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24655);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24649,G__24650) : f.call(null,G__24649,G__24650));
})());

var G__24656 = (i_24655 + (1));
i_24655 = G__24656;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__24651 = idx;
var G__24652 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24651,G__24652) : f.call(null,G__24651,G__24652));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__24675 = null;
var G__24675__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24675__1 = (function (result){
var G__24669 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24669) : rf.call(null,G__24669));
});
var G__24675__2 = (function (result,input){
var v = (function (){var G__24670 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24670) : f.call(null,G__24670));
})();
if((v == null)){
return result;
} else {
var G__24671 = result;
var G__24672 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24671,G__24672) : rf.call(null,G__24671,G__24672));
}
});
G__24675 = function(result,input){
switch(arguments.length){
case 0:
return G__24675__0.call(this);
case 1:
return G__24675__1.call(this,result);
case 2:
return G__24675__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24675.cljs$core$IFn$_invoke$arity$0 = G__24675__0;
G__24675.cljs$core$IFn$_invoke$arity$1 = G__24675__1;
G__24675.cljs$core$IFn$_invoke$arity$2 = G__24675__2;
return G__24675;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15328__auto___24676 = size;
var i_24677 = (0);
while(true){
if((i_24677 < n__15328__auto___24676)){
var x_24678 = (function (){var G__24673 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24677);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24673) : f.call(null,G__24673));
})();
if((x_24678 == null)){
} else {
cljs.core.chunk_append(b,x_24678);
}

var G__24679 = (i_24677 + (1));
i_24677 = G__24679;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__24674 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24674) : f.call(null,G__24674));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24680 = this$__$1;
return goog.getUid(G__24680);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__24681 = cljs.core.seq(self__.watches);
var chunk__24682 = null;
var count__24683 = (0);
var i__24684 = (0);
while(true){
if((i__24684 < count__24683)){
var vec__24685 = chunk__24682.cljs$core$IIndexed$_nth$arity$2(null,i__24684);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24685,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24685,(1),null);
var G__24686_24695 = key;
var G__24687_24696 = this$__$1;
var G__24688_24697 = oldval;
var G__24689_24698 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24686_24695,G__24687_24696,G__24688_24697,G__24689_24698) : f.call(null,G__24686_24695,G__24687_24696,G__24688_24697,G__24689_24698));

var G__24699 = seq__24681;
var G__24700 = chunk__24682;
var G__24701 = count__24683;
var G__24702 = (i__24684 + (1));
seq__24681 = G__24699;
chunk__24682 = G__24700;
count__24683 = G__24701;
i__24684 = G__24702;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__24681);
if(temp__4406__auto__){
var seq__24681__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24681__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__24681__$1);
var G__24703 = cljs.core.chunk_rest(seq__24681__$1);
var G__24704 = c__15228__auto__;
var G__24705 = cljs.core.count(c__15228__auto__);
var G__24706 = (0);
seq__24681 = G__24703;
chunk__24682 = G__24704;
count__24683 = G__24705;
i__24684 = G__24706;
continue;
} else {
var vec__24690 = cljs.core.first(seq__24681__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24690,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24690,(1),null);
var G__24691_24707 = key;
var G__24692_24708 = this$__$1;
var G__24693_24709 = oldval;
var G__24694_24710 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24691_24707,G__24692_24708,G__24693_24709,G__24694_24710) : f.call(null,G__24691_24707,G__24692_24708,G__24693_24709,G__24694_24710));

var G__24711 = cljs.core.next(seq__24681__$1);
var G__24712 = null;
var G__24713 = (0);
var G__24714 = (0);
seq__24681 = G__24711;
chunk__24682 = G__24712;
count__24683 = G__24713;
i__24684 = G__24714;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__24718__delegate = function (x,p__24715){
var map__24717 = p__24715;
var map__24717__$1 = ((cljs.core.seq_QMARK_(map__24717))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24717):map__24717);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24717__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24717__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__24718 = function (x,var_args){
var p__24715 = null;
if (arguments.length > 1) {
var G__24719__i = 0, G__24719__a = new Array(arguments.length -  1);
while (G__24719__i < G__24719__a.length) {G__24719__a[G__24719__i] = arguments[G__24719__i + 1]; ++G__24719__i;}
  p__24715 = new cljs.core.IndexedSeq(G__24719__a,0);
} 
return G__24718__delegate.call(this,x,p__24715);};
G__24718.cljs$lang$maxFixedArity = 1;
G__24718.cljs$lang$applyTo = (function (arglist__24720){
var x = cljs.core.first(arglist__24720);
var p__24715 = cljs.core.rest(arglist__24720);
return G__24718__delegate(x,p__24715);
});
G__24718.cljs$core$IFn$_invoke$arity$variadic = G__24718__delegate;
return G__24718;
})()
;
atom = function(x,var_args){
var p__24715 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__24721 = null;
if (arguments.length > 1) {
var G__24722__i = 0, G__24722__a = new Array(arguments.length -  1);
while (G__24722__i < G__24722__a.length) {G__24722__a[G__24722__i] = arguments[G__24722__i + 1]; ++G__24722__i;}
G__24721 = new cljs.core.IndexedSeq(G__24722__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__24725 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__24725) : validate.call(null,G__24725));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__24726 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__24726) : cljs.core.pr_str.call(null,G__24726));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__24733 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24733) : f.call(null,G__24733));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__24734 = a.state;
var G__24735 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24734,G__24735) : f.call(null,G__24734,G__24735));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__24736 = a.state;
var G__24737 = x;
var G__24738 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24736,G__24737,G__24738) : f.call(null,G__24736,G__24737,G__24738));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__24739__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__24739 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__24740__i = 0, G__24740__a = new Array(arguments.length -  4);
while (G__24740__i < G__24740__a.length) {G__24740__a[G__24740__i] = arguments[G__24740__i + 4]; ++G__24740__i;}
  more = new cljs.core.IndexedSeq(G__24740__a,0);
} 
return G__24739__delegate.call(this,a,f,x,y,more);};
G__24739.cljs$lang$maxFixedArity = 4;
G__24739.cljs$lang$applyTo = (function (arglist__24741){
var a = cljs.core.first(arglist__24741);
arglist__24741 = cljs.core.next(arglist__24741);
var f = cljs.core.first(arglist__24741);
arglist__24741 = cljs.core.next(arglist__24741);
var x = cljs.core.first(arglist__24741);
arglist__24741 = cljs.core.next(arglist__24741);
var y = cljs.core.first(arglist__24741);
var more = cljs.core.rest(arglist__24741);
return G__24739__delegate(a,f,x,y,more);
});
G__24739.cljs$core$IFn$_invoke$arity$variadic = G__24739__delegate;
return G__24739;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__24742 = null;
if (arguments.length > 4) {
var G__24743__i = 0, G__24743__a = new Array(arguments.length -  4);
while (G__24743__i < G__24743__a.length) {G__24743__a[G__24743__i] = arguments[G__24743__i + 4]; ++G__24743__i;}
G__24742 = new cljs.core.IndexedSeq(G__24743__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__24742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__24810 = null;
var G__24810__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24810__1 = (function (result){
var G__24777 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24777) : rf.call(null,G__24777));
});
var G__24810__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__24778 = i;
var G__24779 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24778,G__24779) : f.call(null,G__24778,G__24779));
})();
if((v == null)){
return result;
} else {
var G__24780 = result;
var G__24781 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24780,G__24781) : rf.call(null,G__24780,G__24781));
}
});
G__24810 = function(result,input){
switch(arguments.length){
case 0:
return G__24810__0.call(this);
case 1:
return G__24810__1.call(this,result);
case 2:
return G__24810__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24810.cljs$core$IFn$_invoke$arity$0 = G__24810__0;
G__24810.cljs$core$IFn$_invoke$arity$1 = G__24810__1;
G__24810.cljs$core$IFn$_invoke$arity$2 = G__24810__2;
return G__24810;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15328__auto___24811 = size;
var i_24812 = (0);
while(true){
if((i_24812 < n__15328__auto___24811)){
var x_24813 = (function (){var G__24806 = (idx + i_24812);
var G__24807 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24812);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24806,G__24807) : f.call(null,G__24806,G__24807));
})();
if((x_24813 == null)){
} else {
cljs.core.chunk_append(b,x_24813);
}

var G__24814 = (i_24812 + (1));
i_24812 = G__24814;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__24808 = idx;
var G__24809 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24808,G__24809) : f.call(null,G__24808,G__24809));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__25028 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25028) : p.call(null,G__25028));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25030 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25030) : p.call(null,G__25030));
})();
if(cljs.core.truth_(and__14429__auto__)){
var G__25031 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25031) : p.call(null,G__25031));
} else {
return and__14429__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25033 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25033) : p.call(null,G__25033));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25035 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25035) : p.call(null,G__25035));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var G__25036 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25036) : p.call(null,G__25036));
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__25205__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__25205 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25206__i = 0, G__25206__a = new Array(arguments.length -  3);
while (G__25206__i < G__25206__a.length) {G__25206__a[G__25206__i] = arguments[G__25206__i + 3]; ++G__25206__i;}
  args = new cljs.core.IndexedSeq(G__25206__a,0);
} 
return G__25205__delegate.call(this,x,y,z,args);};
G__25205.cljs$lang$maxFixedArity = 3;
G__25205.cljs$lang$applyTo = (function (arglist__25207){
var x = cljs.core.first(arglist__25207);
arglist__25207 = cljs.core.next(arglist__25207);
var y = cljs.core.first(arglist__25207);
arglist__25207 = cljs.core.next(arglist__25207);
var z = cljs.core.first(arglist__25207);
var args = cljs.core.rest(arglist__25207);
return G__25205__delegate(x,y,z,args);
});
G__25205.cljs$core$IFn$_invoke$arity$variadic = G__25205__delegate;
return G__25205;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__25208 = null;
if (arguments.length > 3) {
var G__25209__i = 0, G__25209__a = new Array(arguments.length -  3);
while (G__25209__i < G__25209__a.length) {G__25209__a[G__25209__i] = arguments[G__25209__i + 3]; ++G__25209__i;}
G__25208 = new cljs.core.IndexedSeq(G__25209__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25068 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25068) : p1.call(null,G__25068));
})();
if(cljs.core.truth_(and__14429__auto__)){
var G__25069 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25069) : p2.call(null,G__25069));
} else {
return and__14429__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25071 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25071) : p1.call(null,G__25071));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25073 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25073) : p1.call(null,G__25073));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var and__14429__auto____$2 = (function (){var G__25075 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25075) : p2.call(null,G__25075));
})();
if(cljs.core.truth_(and__14429__auto____$2)){
var G__25076 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25076) : p2.call(null,G__25076));
} else {
return and__14429__auto____$2;
}
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25078 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25078) : p1.call(null,G__25078));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25080 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25080) : p1.call(null,G__25080));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var and__14429__auto____$2 = (function (){var G__25082 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25082) : p1.call(null,G__25082));
})();
if(cljs.core.truth_(and__14429__auto____$2)){
var and__14429__auto____$3 = (function (){var G__25084 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25084) : p2.call(null,G__25084));
})();
if(cljs.core.truth_(and__14429__auto____$3)){
var and__14429__auto____$4 = (function (){var G__25086 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25086) : p2.call(null,G__25086));
})();
if(cljs.core.truth_(and__14429__auto____$4)){
var G__25087 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25087) : p2.call(null,G__25087));
} else {
return and__14429__auto____$4;
}
} else {
return and__14429__auto____$3;
}
} else {
return and__14429__auto____$2;
}
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__25210__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__24815_SHARP_){
var and__14429__auto__ = (function (){var G__25092 = p1__24815_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25092) : p1.call(null,G__25092));
})();
if(cljs.core.truth_(and__14429__auto__)){
var G__25093 = p1__24815_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25093) : p2.call(null,G__25093));
} else {
return and__14429__auto__;
}
}),args)));
};
var G__25210 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25211__i = 0, G__25211__a = new Array(arguments.length -  3);
while (G__25211__i < G__25211__a.length) {G__25211__a[G__25211__i] = arguments[G__25211__i + 3]; ++G__25211__i;}
  args = new cljs.core.IndexedSeq(G__25211__a,0);
} 
return G__25210__delegate.call(this,x,y,z,args);};
G__25210.cljs$lang$maxFixedArity = 3;
G__25210.cljs$lang$applyTo = (function (arglist__25212){
var x = cljs.core.first(arglist__25212);
arglist__25212 = cljs.core.next(arglist__25212);
var y = cljs.core.first(arglist__25212);
arglist__25212 = cljs.core.next(arglist__25212);
var z = cljs.core.first(arglist__25212);
var args = cljs.core.rest(arglist__25212);
return G__25210__delegate(x,y,z,args);
});
G__25210.cljs$core$IFn$_invoke$arity$variadic = G__25210__delegate;
return G__25210;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__25213 = null;
if (arguments.length > 3) {
var G__25214__i = 0, G__25214__a = new Array(arguments.length -  3);
while (G__25214__i < G__25214__a.length) {G__25214__a[G__25214__i] = arguments[G__25214__i + 3]; ++G__25214__i;}
G__25213 = new cljs.core.IndexedSeq(G__25214__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25139 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25139) : p1.call(null,G__25139));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25141 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25141) : p2.call(null,G__25141));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var G__25142 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25142) : p3.call(null,G__25142));
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25144 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25144) : p1.call(null,G__25144));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25146 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25146) : p2.call(null,G__25146));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var and__14429__auto____$2 = (function (){var G__25148 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25148) : p3.call(null,G__25148));
})();
if(cljs.core.truth_(and__14429__auto____$2)){
var and__14429__auto____$3 = (function (){var G__25150 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25150) : p1.call(null,G__25150));
})();
if(cljs.core.truth_(and__14429__auto____$3)){
var and__14429__auto____$4 = (function (){var G__25152 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25152) : p2.call(null,G__25152));
})();
if(cljs.core.truth_(and__14429__auto____$4)){
var G__25153 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25153) : p3.call(null,G__25153));
} else {
return and__14429__auto____$4;
}
} else {
return and__14429__auto____$3;
}
} else {
return and__14429__auto____$2;
}
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__14429__auto__ = (function (){var G__25155 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25155) : p1.call(null,G__25155));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25157 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25157) : p2.call(null,G__25157));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var and__14429__auto____$2 = (function (){var G__25159 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25159) : p3.call(null,G__25159));
})();
if(cljs.core.truth_(and__14429__auto____$2)){
var and__14429__auto____$3 = (function (){var G__25161 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25161) : p1.call(null,G__25161));
})();
if(cljs.core.truth_(and__14429__auto____$3)){
var and__14429__auto____$4 = (function (){var G__25163 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25163) : p2.call(null,G__25163));
})();
if(cljs.core.truth_(and__14429__auto____$4)){
var and__14429__auto____$5 = (function (){var G__25165 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25165) : p3.call(null,G__25165));
})();
if(cljs.core.truth_(and__14429__auto____$5)){
var and__14429__auto____$6 = (function (){var G__25167 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25167) : p1.call(null,G__25167));
})();
if(cljs.core.truth_(and__14429__auto____$6)){
var and__14429__auto____$7 = (function (){var G__25169 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25169) : p2.call(null,G__25169));
})();
if(cljs.core.truth_(and__14429__auto____$7)){
var G__25170 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25170) : p3.call(null,G__25170));
} else {
return and__14429__auto____$7;
}
} else {
return and__14429__auto____$6;
}
} else {
return and__14429__auto____$5;
}
} else {
return and__14429__auto____$4;
}
} else {
return and__14429__auto____$3;
}
} else {
return and__14429__auto____$2;
}
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__25215__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__24816_SHARP_){
var and__14429__auto__ = (function (){var G__25177 = p1__24816_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25177) : p1.call(null,G__25177));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25179 = p1__24816_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25179) : p2.call(null,G__25179));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var G__25180 = p1__24816_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25180) : p3.call(null,G__25180));
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
}),args)));
};
var G__25215 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25216__i = 0, G__25216__a = new Array(arguments.length -  3);
while (G__25216__i < G__25216__a.length) {G__25216__a[G__25216__i] = arguments[G__25216__i + 3]; ++G__25216__i;}
  args = new cljs.core.IndexedSeq(G__25216__a,0);
} 
return G__25215__delegate.call(this,x,y,z,args);};
G__25215.cljs$lang$maxFixedArity = 3;
G__25215.cljs$lang$applyTo = (function (arglist__25217){
var x = cljs.core.first(arglist__25217);
arglist__25217 = cljs.core.next(arglist__25217);
var y = cljs.core.first(arglist__25217);
arglist__25217 = cljs.core.next(arglist__25217);
var z = cljs.core.first(arglist__25217);
var args = cljs.core.rest(arglist__25217);
return G__25215__delegate(x,y,z,args);
});
G__25215.cljs$core$IFn$_invoke$arity$variadic = G__25215__delegate;
return G__25215;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__25218 = null;
if (arguments.length > 3) {
var G__25219__i = 0, G__25219__a = new Array(arguments.length -  3);
while (G__25219__i < G__25219__a.length) {G__25219__a[G__25219__i] = arguments[G__25219__i + 3]; ++G__25219__i;}
G__25218 = new cljs.core.IndexedSeq(G__25219__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25218);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__25220__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__24817_SHARP_){
var G__25196 = x;
return (p1__24817_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24817_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25196) : p1__24817_SHARP_.call(null,G__25196));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__24818_SHARP_){
var and__14429__auto__ = (function (){var G__25198 = x;
return (p1__24818_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24818_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25198) : p1__24818_SHARP_.call(null,G__25198));
})();
if(cljs.core.truth_(and__14429__auto__)){
var G__25199 = y;
return (p1__24818_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24818_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25199) : p1__24818_SHARP_.call(null,G__25199));
} else {
return and__14429__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__24819_SHARP_){
var and__14429__auto__ = (function (){var G__25201 = x;
return (p1__24819_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24819_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25201) : p1__24819_SHARP_.call(null,G__25201));
})();
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__25203 = y;
return (p1__24819_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24819_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25203) : p1__24819_SHARP_.call(null,G__25203));
})();
if(cljs.core.truth_(and__14429__auto____$1)){
var G__25204 = z;
return (p1__24819_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24819_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25204) : p1__24819_SHARP_.call(null,G__25204));
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__25221__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__24820_SHARP_){
return cljs.core.every_QMARK_(p1__24820_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__25221 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25222__i = 0, G__25222__a = new Array(arguments.length -  3);
while (G__25222__i < G__25222__a.length) {G__25222__a[G__25222__i] = arguments[G__25222__i + 3]; ++G__25222__i;}
  args = new cljs.core.IndexedSeq(G__25222__a,0);
} 
return G__25221__delegate.call(this,x,y,z,args);};
G__25221.cljs$lang$maxFixedArity = 3;
G__25221.cljs$lang$applyTo = (function (arglist__25223){
var x = cljs.core.first(arglist__25223);
arglist__25223 = cljs.core.next(arglist__25223);
var y = cljs.core.first(arglist__25223);
arglist__25223 = cljs.core.next(arglist__25223);
var z = cljs.core.first(arglist__25223);
var args = cljs.core.rest(arglist__25223);
return G__25221__delegate(x,y,z,args);
});
G__25221.cljs$core$IFn$_invoke$arity$variadic = G__25221__delegate;
return G__25221;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__25224 = null;
if (arguments.length > 3) {
var G__25225__i = 0, G__25225__a = new Array(arguments.length -  3);
while (G__25225__i < G__25225__a.length) {G__25225__a[G__25225__i] = arguments[G__25225__i + 3]; ++G__25225__i;}
G__25224 = new cljs.core.IndexedSeq(G__25225__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__25220 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__25226__i = 0, G__25226__a = new Array(arguments.length -  3);
while (G__25226__i < G__25226__a.length) {G__25226__a[G__25226__i] = arguments[G__25226__i + 3]; ++G__25226__i;}
  ps = new cljs.core.IndexedSeq(G__25226__a,0);
} 
return G__25220__delegate.call(this,p1,p2,p3,ps);};
G__25220.cljs$lang$maxFixedArity = 3;
G__25220.cljs$lang$applyTo = (function (arglist__25227){
var p1 = cljs.core.first(arglist__25227);
arglist__25227 = cljs.core.next(arglist__25227);
var p2 = cljs.core.first(arglist__25227);
arglist__25227 = cljs.core.next(arglist__25227);
var p3 = cljs.core.first(arglist__25227);
var ps = cljs.core.rest(arglist__25227);
return G__25220__delegate(p1,p2,p3,ps);
});
G__25220.cljs$core$IFn$_invoke$arity$variadic = G__25220__delegate;
return G__25220;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__25228 = null;
if (arguments.length > 3) {
var G__25229__i = 0, G__25229__a = new Array(arguments.length -  3);
while (G__25229__i < G__25229__a.length) {G__25229__a[G__25229__i] = arguments[G__25229__i + 3]; ++G__25229__i;}
G__25228 = new cljs.core.IndexedSeq(G__25229__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__25228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__25435 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25435) : p.call(null,G__25435));
});
var sp1__2 = (function (x,y){
var or__14441__auto__ = (function (){var G__25437 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25437) : p.call(null,G__25437));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var G__25438 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25438) : p.call(null,G__25438));
}
});
var sp1__3 = (function (x,y,z){
var or__14441__auto__ = (function (){var G__25440 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25440) : p.call(null,G__25440));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25442 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25442) : p.call(null,G__25442));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var G__25443 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25443) : p.call(null,G__25443));
}
}
});
var sp1__4 = (function() { 
var G__25604__delegate = function (x,y,z,args){
var or__14441__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__25604 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25605__i = 0, G__25605__a = new Array(arguments.length -  3);
while (G__25605__i < G__25605__a.length) {G__25605__a[G__25605__i] = arguments[G__25605__i + 3]; ++G__25605__i;}
  args = new cljs.core.IndexedSeq(G__25605__a,0);
} 
return G__25604__delegate.call(this,x,y,z,args);};
G__25604.cljs$lang$maxFixedArity = 3;
G__25604.cljs$lang$applyTo = (function (arglist__25606){
var x = cljs.core.first(arglist__25606);
arglist__25606 = cljs.core.next(arglist__25606);
var y = cljs.core.first(arglist__25606);
arglist__25606 = cljs.core.next(arglist__25606);
var z = cljs.core.first(arglist__25606);
var args = cljs.core.rest(arglist__25606);
return G__25604__delegate(x,y,z,args);
});
G__25604.cljs$core$IFn$_invoke$arity$variadic = G__25604__delegate;
return G__25604;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__25607 = null;
if (arguments.length > 3) {
var G__25608__i = 0, G__25608__a = new Array(arguments.length -  3);
while (G__25608__i < G__25608__a.length) {G__25608__a[G__25608__i] = arguments[G__25608__i + 3]; ++G__25608__i;}
G__25607 = new cljs.core.IndexedSeq(G__25608__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__14441__auto__ = (function (){var G__25475 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25475) : p1.call(null,G__25475));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var G__25476 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25476) : p2.call(null,G__25476));
}
});
var sp2__2 = (function (x,y){
var or__14441__auto__ = (function (){var G__25478 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25478) : p1.call(null,G__25478));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25480 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25480) : p1.call(null,G__25480));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var or__14441__auto____$2 = (function (){var G__25482 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25482) : p2.call(null,G__25482));
})();
if(cljs.core.truth_(or__14441__auto____$2)){
return or__14441__auto____$2;
} else {
var G__25483 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25483) : p2.call(null,G__25483));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__14441__auto__ = (function (){var G__25485 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25485) : p1.call(null,G__25485));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25487 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25487) : p1.call(null,G__25487));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var or__14441__auto____$2 = (function (){var G__25489 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25489) : p1.call(null,G__25489));
})();
if(cljs.core.truth_(or__14441__auto____$2)){
return or__14441__auto____$2;
} else {
var or__14441__auto____$3 = (function (){var G__25491 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25491) : p2.call(null,G__25491));
})();
if(cljs.core.truth_(or__14441__auto____$3)){
return or__14441__auto____$3;
} else {
var or__14441__auto____$4 = (function (){var G__25493 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25493) : p2.call(null,G__25493));
})();
if(cljs.core.truth_(or__14441__auto____$4)){
return or__14441__auto____$4;
} else {
var G__25494 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25494) : p2.call(null,G__25494));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__25609__delegate = function (x,y,z,args){
var or__14441__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.some(((function (or__14441__auto__){
return (function (p1__25230_SHARP_){
var or__14441__auto____$1 = (function (){var G__25496 = p1__25230_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25496) : p1.call(null,G__25496));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var G__25497 = p1__25230_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25497) : p2.call(null,G__25497));
}
});})(or__14441__auto__))
,args);
}
};
var G__25609 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25610__i = 0, G__25610__a = new Array(arguments.length -  3);
while (G__25610__i < G__25610__a.length) {G__25610__a[G__25610__i] = arguments[G__25610__i + 3]; ++G__25610__i;}
  args = new cljs.core.IndexedSeq(G__25610__a,0);
} 
return G__25609__delegate.call(this,x,y,z,args);};
G__25609.cljs$lang$maxFixedArity = 3;
G__25609.cljs$lang$applyTo = (function (arglist__25611){
var x = cljs.core.first(arglist__25611);
arglist__25611 = cljs.core.next(arglist__25611);
var y = cljs.core.first(arglist__25611);
arglist__25611 = cljs.core.next(arglist__25611);
var z = cljs.core.first(arglist__25611);
var args = cljs.core.rest(arglist__25611);
return G__25609__delegate(x,y,z,args);
});
G__25609.cljs$core$IFn$_invoke$arity$variadic = G__25609__delegate;
return G__25609;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__25612 = null;
if (arguments.length > 3) {
var G__25613__i = 0, G__25613__a = new Array(arguments.length -  3);
while (G__25613__i < G__25613__a.length) {G__25613__a[G__25613__i] = arguments[G__25613__i + 3]; ++G__25613__i;}
G__25612 = new cljs.core.IndexedSeq(G__25613__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__14441__auto__ = (function (){var G__25543 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25543) : p1.call(null,G__25543));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25545 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25545) : p2.call(null,G__25545));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var G__25546 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25546) : p3.call(null,G__25546));
}
}
});
var sp3__2 = (function (x,y){
var or__14441__auto__ = (function (){var G__25548 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25548) : p1.call(null,G__25548));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25550 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25550) : p2.call(null,G__25550));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var or__14441__auto____$2 = (function (){var G__25552 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25552) : p3.call(null,G__25552));
})();
if(cljs.core.truth_(or__14441__auto____$2)){
return or__14441__auto____$2;
} else {
var or__14441__auto____$3 = (function (){var G__25554 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25554) : p1.call(null,G__25554));
})();
if(cljs.core.truth_(or__14441__auto____$3)){
return or__14441__auto____$3;
} else {
var or__14441__auto____$4 = (function (){var G__25556 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25556) : p2.call(null,G__25556));
})();
if(cljs.core.truth_(or__14441__auto____$4)){
return or__14441__auto____$4;
} else {
var G__25557 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25557) : p3.call(null,G__25557));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__14441__auto__ = (function (){var G__25559 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25559) : p1.call(null,G__25559));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25561 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25561) : p2.call(null,G__25561));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var or__14441__auto____$2 = (function (){var G__25563 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25563) : p3.call(null,G__25563));
})();
if(cljs.core.truth_(or__14441__auto____$2)){
return or__14441__auto____$2;
} else {
var or__14441__auto____$3 = (function (){var G__25565 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25565) : p1.call(null,G__25565));
})();
if(cljs.core.truth_(or__14441__auto____$3)){
return or__14441__auto____$3;
} else {
var or__14441__auto____$4 = (function (){var G__25567 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25567) : p2.call(null,G__25567));
})();
if(cljs.core.truth_(or__14441__auto____$4)){
return or__14441__auto____$4;
} else {
var or__14441__auto____$5 = (function (){var G__25569 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25569) : p3.call(null,G__25569));
})();
if(cljs.core.truth_(or__14441__auto____$5)){
return or__14441__auto____$5;
} else {
var or__14441__auto____$6 = (function (){var G__25571 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25571) : p1.call(null,G__25571));
})();
if(cljs.core.truth_(or__14441__auto____$6)){
return or__14441__auto____$6;
} else {
var or__14441__auto____$7 = (function (){var G__25573 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25573) : p2.call(null,G__25573));
})();
if(cljs.core.truth_(or__14441__auto____$7)){
return or__14441__auto____$7;
} else {
var G__25574 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25574) : p3.call(null,G__25574));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__25614__delegate = function (x,y,z,args){
var or__14441__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.some(((function (or__14441__auto__){
return (function (p1__25231_SHARP_){
var or__14441__auto____$1 = (function (){var G__25576 = p1__25231_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25576) : p1.call(null,G__25576));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var or__14441__auto____$2 = (function (){var G__25578 = p1__25231_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25578) : p2.call(null,G__25578));
})();
if(cljs.core.truth_(or__14441__auto____$2)){
return or__14441__auto____$2;
} else {
var G__25579 = p1__25231_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25579) : p3.call(null,G__25579));
}
}
});})(or__14441__auto__))
,args);
}
};
var G__25614 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25615__i = 0, G__25615__a = new Array(arguments.length -  3);
while (G__25615__i < G__25615__a.length) {G__25615__a[G__25615__i] = arguments[G__25615__i + 3]; ++G__25615__i;}
  args = new cljs.core.IndexedSeq(G__25615__a,0);
} 
return G__25614__delegate.call(this,x,y,z,args);};
G__25614.cljs$lang$maxFixedArity = 3;
G__25614.cljs$lang$applyTo = (function (arglist__25616){
var x = cljs.core.first(arglist__25616);
arglist__25616 = cljs.core.next(arglist__25616);
var y = cljs.core.first(arglist__25616);
arglist__25616 = cljs.core.next(arglist__25616);
var z = cljs.core.first(arglist__25616);
var args = cljs.core.rest(arglist__25616);
return G__25614__delegate(x,y,z,args);
});
G__25614.cljs$core$IFn$_invoke$arity$variadic = G__25614__delegate;
return G__25614;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__25617 = null;
if (arguments.length > 3) {
var G__25618__i = 0, G__25618__a = new Array(arguments.length -  3);
while (G__25618__i < G__25618__a.length) {G__25618__a[G__25618__i] = arguments[G__25618__i + 3]; ++G__25618__i;}
G__25617 = new cljs.core.IndexedSeq(G__25618__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__25619__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__25232_SHARP_){
var G__25595 = x;
return (p1__25232_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25232_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25595) : p1__25232_SHARP_.call(null,G__25595));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__25233_SHARP_){
var or__14441__auto__ = (function (){var G__25597 = x;
return (p1__25233_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25233_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25597) : p1__25233_SHARP_.call(null,G__25597));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var G__25598 = y;
return (p1__25233_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25233_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25598) : p1__25233_SHARP_.call(null,G__25598));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__25234_SHARP_){
var or__14441__auto__ = (function (){var G__25600 = x;
return (p1__25234_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25234_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25600) : p1__25234_SHARP_.call(null,G__25600));
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var G__25602 = y;
return (p1__25234_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25234_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25602) : p1__25234_SHARP_.call(null,G__25602));
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var G__25603 = z;
return (p1__25234_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25234_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25603) : p1__25234_SHARP_.call(null,G__25603));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__25620__delegate = function (x,y,z,args){
var or__14441__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.some(((function (or__14441__auto__,ps__$1){
return (function (p1__25235_SHARP_){
return cljs.core.some(p1__25235_SHARP_,args);
});})(or__14441__auto__,ps__$1))
,ps__$1);
}
};
var G__25620 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25621__i = 0, G__25621__a = new Array(arguments.length -  3);
while (G__25621__i < G__25621__a.length) {G__25621__a[G__25621__i] = arguments[G__25621__i + 3]; ++G__25621__i;}
  args = new cljs.core.IndexedSeq(G__25621__a,0);
} 
return G__25620__delegate.call(this,x,y,z,args);};
G__25620.cljs$lang$maxFixedArity = 3;
G__25620.cljs$lang$applyTo = (function (arglist__25622){
var x = cljs.core.first(arglist__25622);
arglist__25622 = cljs.core.next(arglist__25622);
var y = cljs.core.first(arglist__25622);
arglist__25622 = cljs.core.next(arglist__25622);
var z = cljs.core.first(arglist__25622);
var args = cljs.core.rest(arglist__25622);
return G__25620__delegate(x,y,z,args);
});
G__25620.cljs$core$IFn$_invoke$arity$variadic = G__25620__delegate;
return G__25620;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__25623 = null;
if (arguments.length > 3) {
var G__25624__i = 0, G__25624__a = new Array(arguments.length -  3);
while (G__25624__i < G__25624__a.length) {G__25624__a[G__25624__i] = arguments[G__25624__i + 3]; ++G__25624__i;}
G__25623 = new cljs.core.IndexedSeq(G__25624__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__25619 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__25625__i = 0, G__25625__a = new Array(arguments.length -  3);
while (G__25625__i < G__25625__a.length) {G__25625__a[G__25625__i] = arguments[G__25625__i + 3]; ++G__25625__i;}
  ps = new cljs.core.IndexedSeq(G__25625__a,0);
} 
return G__25619__delegate.call(this,p1,p2,p3,ps);};
G__25619.cljs$lang$maxFixedArity = 3;
G__25619.cljs$lang$applyTo = (function (arglist__25626){
var p1 = cljs.core.first(arglist__25626);
arglist__25626 = cljs.core.next(arglist__25626);
var p2 = cljs.core.first(arglist__25626);
arglist__25626 = cljs.core.next(arglist__25626);
var p3 = cljs.core.first(arglist__25626);
var ps = cljs.core.rest(arglist__25626);
return G__25619__delegate(p1,p2,p3,ps);
});
G__25619.cljs$core$IFn$_invoke$arity$variadic = G__25619__delegate;
return G__25619;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__25627 = null;
if (arguments.length > 3) {
var G__25628__i = 0, G__25628__a = new Array(arguments.length -  3);
while (G__25628__i < G__25628__a.length) {G__25628__a[G__25628__i] = arguments[G__25628__i + 3]; ++G__25628__i;}
G__25627 = new cljs.core.IndexedSeq(G__25628__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__25627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__25683 = null;
var G__25683__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25683__1 = (function (result){
var G__25669 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25669) : rf.call(null,G__25669));
});
var G__25683__2 = (function (result,input){
var G__25670 = result;
var G__25671 = (function (){var G__25672 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25672) : f.call(null,G__25672));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25670,G__25671) : rf.call(null,G__25670,G__25671));
});
var G__25683__3 = (function() { 
var G__25684__delegate = function (result,input,inputs){
var G__25673 = result;
var G__25674 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25673,G__25674) : rf.call(null,G__25673,G__25674));
};
var G__25684 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__25685__i = 0, G__25685__a = new Array(arguments.length -  2);
while (G__25685__i < G__25685__a.length) {G__25685__a[G__25685__i] = arguments[G__25685__i + 2]; ++G__25685__i;}
  inputs = new cljs.core.IndexedSeq(G__25685__a,0);
} 
return G__25684__delegate.call(this,result,input,inputs);};
G__25684.cljs$lang$maxFixedArity = 2;
G__25684.cljs$lang$applyTo = (function (arglist__25686){
var result = cljs.core.first(arglist__25686);
arglist__25686 = cljs.core.next(arglist__25686);
var input = cljs.core.first(arglist__25686);
var inputs = cljs.core.rest(arglist__25686);
return G__25684__delegate(result,input,inputs);
});
G__25684.cljs$core$IFn$_invoke$arity$variadic = G__25684__delegate;
return G__25684;
})()
;
G__25683 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__25683__0.call(this);
case 1:
return G__25683__1.call(this,result);
case 2:
return G__25683__2.call(this,result,input);
default:
var G__25687 = null;
if (arguments.length > 2) {
var G__25688__i = 0, G__25688__a = new Array(arguments.length -  2);
while (G__25688__i < G__25688__a.length) {G__25688__a[G__25688__i] = arguments[G__25688__i + 2]; ++G__25688__i;}
G__25687 = new cljs.core.IndexedSeq(G__25688__a,0);
}
return G__25683__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__25687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25683.cljs$lang$maxFixedArity = 2;
G__25683.cljs$lang$applyTo = G__25683__3.cljs$lang$applyTo;
G__25683.cljs$core$IFn$_invoke$arity$0 = G__25683__0;
G__25683.cljs$core$IFn$_invoke$arity$1 = G__25683__1;
G__25683.cljs$core$IFn$_invoke$arity$2 = G__25683__2;
G__25683.cljs$core$IFn$_invoke$arity$variadic = G__25683__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25683;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15328__auto___25689 = size;
var i_25690 = (0);
while(true){
if((i_25690 < n__15328__auto___25689)){
cljs.core.chunk_append(b,(function (){var G__25675 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25690);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25675) : f.call(null,G__25675));
})());

var G__25691 = (i_25690 + (1));
i_25690 = G__25691;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25676 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25676) : f.call(null,G__25676));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__25677 = cljs.core.first(s1);
var G__25678 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25677,G__25678) : f.call(null,G__25677,G__25678));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__25679 = cljs.core.first(s1);
var G__25680 = cljs.core.first(s2);
var G__25681 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25679,G__25680,G__25681) : f.call(null,G__25679,G__25680,G__25681));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__25692__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__25629_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__25629_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__25692 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__25693__i = 0, G__25693__a = new Array(arguments.length -  4);
while (G__25693__i < G__25693__a.length) {G__25693__a[G__25693__i] = arguments[G__25693__i + 4]; ++G__25693__i;}
  colls = new cljs.core.IndexedSeq(G__25693__a,0);
} 
return G__25692__delegate.call(this,f,c1,c2,c3,colls);};
G__25692.cljs$lang$maxFixedArity = 4;
G__25692.cljs$lang$applyTo = (function (arglist__25694){
var f = cljs.core.first(arglist__25694);
arglist__25694 = cljs.core.next(arglist__25694);
var c1 = cljs.core.first(arglist__25694);
arglist__25694 = cljs.core.next(arglist__25694);
var c2 = cljs.core.first(arglist__25694);
arglist__25694 = cljs.core.next(arglist__25694);
var c3 = cljs.core.first(arglist__25694);
var colls = cljs.core.rest(arglist__25694);
return G__25692__delegate(f,c1,c2,c3,colls);
});
G__25692.cljs$core$IFn$_invoke$arity$variadic = G__25692__delegate;
return G__25692;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__25695 = null;
if (arguments.length > 4) {
var G__25696__i = 0, G__25696__a = new Array(arguments.length -  4);
while (G__25696__i < G__25696__a.length) {G__25696__a[G__25696__i] = arguments[G__25696__i + 4]; ++G__25696__i;}
G__25695 = new cljs.core.IndexedSeq(G__25696__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__25695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__25705 = null;
var G__25705__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25705__1 = (function (result){
var G__25702 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25702) : rf.call(null,G__25702));
});
var G__25705__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__25703 = result;
var G__25704 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25703,G__25704) : rf.call(null,G__25703,G__25704));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__25705 = function(result,input){
switch(arguments.length){
case 0:
return G__25705__0.call(this);
case 1:
return G__25705__1.call(this,result);
case 2:
return G__25705__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25705.cljs$core$IFn$_invoke$arity$0 = G__25705__0;
G__25705.cljs$core$IFn$_invoke$arity$1 = G__25705__1;
G__25705.cljs$core$IFn$_invoke$arity$2 = G__25705__2;
return G__25705;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__25712 = null;
var G__25712__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25712__1 = (function (result){
var G__25709 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25709) : rf.call(null,G__25709));
});
var G__25712__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__25710 = result;
var G__25711 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25710,G__25711) : rf.call(null,G__25710,G__25711));
}
});
G__25712 = function(result,input){
switch(arguments.length){
case 0:
return G__25712__0.call(this);
case 1:
return G__25712__1.call(this,result);
case 2:
return G__25712__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25712.cljs$core$IFn$_invoke$arity$0 = G__25712__0;
G__25712.cljs$core$IFn$_invoke$arity$1 = G__25712__1;
G__25712.cljs$core$IFn$_invoke$arity$2 = G__25712__2;
return G__25712;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__25713 = (n__$1 - (1));
var G__25714 = cljs.core.rest(s);
n__$1 = G__25713;
coll__$1 = G__25714;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__25717 = cljs.core.next(s);
var G__25718 = cljs.core.next(lead);
s = G__25717;
lead = G__25718;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__25731 = null;
var G__25731__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25731__1 = (function (result){
var G__25725 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25725) : rf.call(null,G__25725));
});
var G__25731__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__14429__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__14429__auto__)){
var G__25726 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25726) : pred.call(null,G__25726));
} else {
return and__14429__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__25727 = result;
var G__25728 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25727,G__25728) : rf.call(null,G__25727,G__25728));
}
});
G__25731 = function(result,input){
switch(arguments.length){
case 0:
return G__25731__0.call(this);
case 1:
return G__25731__1.call(this,result);
case 2:
return G__25731__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25731.cljs$core$IFn$_invoke$arity$0 = G__25731__0;
G__25731.cljs$core$IFn$_invoke$arity$1 = G__25731__1;
G__25731.cljs$core$IFn$_invoke$arity$2 = G__25731__2;
return G__25731;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__14429__auto__ = s;
if(and__14429__auto__){
var G__25730 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__25730) : pred__$1.call(null,G__25730));
} else {
return and__14429__auto__;
}
})())){
var G__25732 = pred__$1;
var G__25733 = cljs.core.rest(s);
pred__$1 = G__25732;
coll__$1 = G__25733;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__25742 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25742) : f.call(null,G__25742));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__25745__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__25745 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25746__i = 0, G__25746__a = new Array(arguments.length -  2);
while (G__25746__i < G__25746__a.length) {G__25746__a[G__25746__i] = arguments[G__25746__i + 2]; ++G__25746__i;}
  colls = new cljs.core.IndexedSeq(G__25746__a,0);
} 
return G__25745__delegate.call(this,c1,c2,colls);};
G__25745.cljs$lang$maxFixedArity = 2;
G__25745.cljs$lang$applyTo = (function (arglist__25747){
var c1 = cljs.core.first(arglist__25747);
arglist__25747 = cljs.core.next(arglist__25747);
var c2 = cljs.core.first(arglist__25747);
var colls = cljs.core.rest(arglist__25747);
return G__25745__delegate(c1,c2,colls);
});
G__25745.cljs$core$IFn$_invoke$arity$variadic = G__25745__delegate;
return G__25745;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__25748 = null;
if (arguments.length > 2) {
var G__25749__i = 0, G__25749__a = new Array(arguments.length -  2);
while (G__25749__i < G__25749__a.length) {G__25749__a[G__25749__i] = arguments[G__25749__i + 2]; ++G__25749__i;}
G__25748 = new cljs.core.IndexedSeq(G__25749__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__25748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__25764 = null;
var G__25764__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25764__1 = (function (result){
var G__25757 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25757) : rf.call(null,G__25757));
});
var G__25764__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__25758 = result;
var G__25759 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25758,G__25759) : rf.call(null,G__25758,G__25759));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__25760 = sepr;
var G__25761 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25760,G__25761) : rf.call(null,G__25760,G__25761));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__25762 = result;
var G__25763 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25762,G__25763) : rf.call(null,G__25762,G__25763));
}
});
G__25764 = function(result,input){
switch(arguments.length){
case 0:
return G__25764__0.call(this);
case 1:
return G__25764__1.call(this,result);
case 2:
return G__25764__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25764.cljs$core$IFn$_invoke$arity$0 = G__25764__0;
G__25764.cljs$core$IFn$_invoke$arity$1 = G__25764__1;
G__25764.cljs$core$IFn$_invoke$arity$2 = G__25764__2;
return G__25764;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__25773__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__25773 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__25774__i = 0, G__25774__a = new Array(arguments.length -  1);
while (G__25774__i < G__25774__a.length) {G__25774__a[G__25774__i] = arguments[G__25774__i + 1]; ++G__25774__i;}
  colls = new cljs.core.IndexedSeq(G__25774__a,0);
} 
return G__25773__delegate.call(this,f,colls);};
G__25773.cljs$lang$maxFixedArity = 1;
G__25773.cljs$lang$applyTo = (function (arglist__25775){
var f = cljs.core.first(arglist__25775);
var colls = cljs.core.rest(arglist__25775);
return G__25773__delegate(f,colls);
});
G__25773.cljs$core$IFn$_invoke$arity$variadic = G__25773__delegate;
return G__25773;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__25776 = null;
if (arguments.length > 1) {
var G__25777__i = 0, G__25777__a = new Array(arguments.length -  1);
while (G__25777__i < G__25777__a.length) {G__25777__a[G__25777__i] = arguments[G__25777__i + 1]; ++G__25777__i;}
G__25776 = new cljs.core.IndexedSeq(G__25777__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__25776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__25796 = null;
var G__25796__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25796__1 = (function (result){
var G__25790 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25790) : rf.call(null,G__25790));
});
var G__25796__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__25791 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25791) : pred.call(null,G__25791));
})())){
var G__25792 = result;
var G__25793 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25792,G__25793) : rf.call(null,G__25792,G__25793));
} else {
return result;
}
});
G__25796 = function(result,input){
switch(arguments.length){
case 0:
return G__25796__0.call(this);
case 1:
return G__25796__1.call(this,result);
case 2:
return G__25796__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25796.cljs$core$IFn$_invoke$arity$0 = G__25796__0;
G__25796.cljs$core$IFn$_invoke$arity$1 = G__25796__1;
G__25796.cljs$core$IFn$_invoke$arity$2 = G__25796__2;
return G__25796;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__15328__auto___25797 = size;
var i_25798 = (0);
while(true){
if((i_25798 < n__15328__auto___25797)){
if(cljs.core.truth_((function (){var G__25794 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25798);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25794) : pred.call(null,G__25794));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25798));
} else {
}

var G__25799 = (i_25798 + (1));
i_25798 = G__25799;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__25795 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25795) : pred.call(null,G__25795));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__25806 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__25806) : branch_QMARK_.call(null,G__25806));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__25807 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__25807) : children.call(null,G__25807));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__25808_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__25808_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__25811 = to;
if(G__25811){
var bit__15115__auto__ = (G__25811.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__15115__auto__) || (G__25811.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__25812 = to;
if(G__25812){
var bit__15115__auto__ = (G__25812.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__15115__auto__) || (G__25812.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__25814 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25814) : f.call(null,G__25814));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__25815__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__25815 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__25816__i = 0, G__25816__a = new Array(arguments.length -  4);
while (G__25816__i < G__25816__a.length) {G__25816__a[G__25816__i] = arguments[G__25816__i + 4]; ++G__25816__i;}
  colls = new cljs.core.IndexedSeq(G__25816__a,0);
} 
return G__25815__delegate.call(this,f,c1,c2,c3,colls);};
G__25815.cljs$lang$maxFixedArity = 4;
G__25815.cljs$lang$applyTo = (function (arglist__25817){
var f = cljs.core.first(arglist__25817);
arglist__25817 = cljs.core.next(arglist__25817);
var c1 = cljs.core.first(arglist__25817);
arglist__25817 = cljs.core.next(arglist__25817);
var c2 = cljs.core.first(arglist__25817);
arglist__25817 = cljs.core.next(arglist__25817);
var c3 = cljs.core.first(arglist__25817);
var colls = cljs.core.rest(arglist__25817);
return G__25815__delegate(f,c1,c2,c3,colls);
});
G__25815.cljs$core$IFn$_invoke$arity$variadic = G__25815__delegate;
return G__25815;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__25818 = null;
if (arguments.length > 4) {
var G__25819__i = 0, G__25819__a = new Array(arguments.length -  4);
while (G__25819__i < G__25819__a.length) {G__25819__a[G__25819__i] = arguments[G__25819__i + 4]; ++G__25819__i;}
G__25818 = new cljs.core.IndexedSeq(G__25819__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__25818);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__25821 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25821) : pred.call(null,G__25821));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__25836 = m__$1;
if(G__25836){
var bit__15122__auto__ = (G__25836.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__15122__auto__) || (G__25836.cljs$core$ILookup$)){
return true;
} else {
if((!G__25836.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__25836);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__25836);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__25837 = sentinel;
var G__25838 = m__$2;
var G__25839 = cljs.core.next(ks__$1);
sentinel = G__25837;
m__$1 = G__25838;
ks__$1 = G__25839;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__25840,v){
var vec__25845 = p__25840;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25845,(0),null);
var ks = cljs.core.nthnext(vec__25845,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__25846,f){
var vec__25884 = p__25846;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25884,(0),null);
var ks = cljs.core.nthnext(vec__25884,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25885 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25885) : f.call(null,G__25885));
})());
}
});
var update_in__4 = (function (m,p__25847,f,a){
var vec__25886 = p__25847;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25886,(0),null);
var ks = cljs.core.nthnext(vec__25886,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25887 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25888 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25887,G__25888) : f.call(null,G__25887,G__25888));
})());
}
});
var update_in__5 = (function (m,p__25848,f,a,b){
var vec__25889 = p__25848;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25889,(0),null);
var ks = cljs.core.nthnext(vec__25889,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25890 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25891 = a;
var G__25892 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25890,G__25891,G__25892) : f.call(null,G__25890,G__25891,G__25892));
})());
}
});
var update_in__6 = (function (m,p__25849,f,a,b,c){
var vec__25893 = p__25849;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25893,(0),null);
var ks = cljs.core.nthnext(vec__25893,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25894 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25895 = a;
var G__25896 = b;
var G__25897 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25894,G__25895,G__25896,G__25897) : f.call(null,G__25894,G__25895,G__25896,G__25897));
})());
}
});
var update_in__7 = (function() { 
var G__25899__delegate = function (m,p__25850,f,a,b,c,args){
var vec__25898 = p__25850;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25898,(0),null);
var ks = cljs.core.nthnext(vec__25898,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__25899 = function (m,p__25850,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__25900__i = 0, G__25900__a = new Array(arguments.length -  6);
while (G__25900__i < G__25900__a.length) {G__25900__a[G__25900__i] = arguments[G__25900__i + 6]; ++G__25900__i;}
  args = new cljs.core.IndexedSeq(G__25900__a,0);
} 
return G__25899__delegate.call(this,m,p__25850,f,a,b,c,args);};
G__25899.cljs$lang$maxFixedArity = 6;
G__25899.cljs$lang$applyTo = (function (arglist__25901){
var m = cljs.core.first(arglist__25901);
arglist__25901 = cljs.core.next(arglist__25901);
var p__25850 = cljs.core.first(arglist__25901);
arglist__25901 = cljs.core.next(arglist__25901);
var f = cljs.core.first(arglist__25901);
arglist__25901 = cljs.core.next(arglist__25901);
var a = cljs.core.first(arglist__25901);
arglist__25901 = cljs.core.next(arglist__25901);
var b = cljs.core.first(arglist__25901);
arglist__25901 = cljs.core.next(arglist__25901);
var c = cljs.core.first(arglist__25901);
var args = cljs.core.rest(arglist__25901);
return G__25899__delegate(m,p__25850,f,a,b,c,args);
});
G__25899.cljs$core$IFn$_invoke$arity$variadic = G__25899__delegate;
return G__25899;
})()
;
update_in = function(m,p__25850,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__25850,f);
case 4:
return update_in__4.call(this,m,p__25850,f,a);
case 5:
return update_in__5.call(this,m,p__25850,f,a,b);
case 6:
return update_in__6.call(this,m,p__25850,f,a,b,c);
default:
var G__25902 = null;
if (arguments.length > 6) {
var G__25903__i = 0, G__25903__a = new Array(arguments.length -  6);
while (G__25903__i < G__25903__a.length) {G__25903__a[G__25903__i] = arguments[G__25903__i + 6]; ++G__25903__i;}
G__25902 = new cljs.core.IndexedSeq(G__25903__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__25850,f,a,b,c, G__25902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25914 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25914) : f.call(null,G__25914));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25915 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25916 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25915,G__25916) : f.call(null,G__25915,G__25916));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25917 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25918 = x;
var G__25919 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25917,G__25918,G__25919) : f.call(null,G__25917,G__25918,G__25919));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25920 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25921 = x;
var G__25922 = y;
var G__25923 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25920,G__25921,G__25922,G__25923) : f.call(null,G__25920,G__25921,G__25922,G__25923));
})());
});
var update__7 = (function() { 
var G__25924__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__25924 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__25925__i = 0, G__25925__a = new Array(arguments.length -  6);
while (G__25925__i < G__25925__a.length) {G__25925__a[G__25925__i] = arguments[G__25925__i + 6]; ++G__25925__i;}
  more = new cljs.core.IndexedSeq(G__25925__a,0);
} 
return G__25924__delegate.call(this,m,k,f,x,y,z,more);};
G__25924.cljs$lang$maxFixedArity = 6;
G__25924.cljs$lang$applyTo = (function (arglist__25926){
var m = cljs.core.first(arglist__25926);
arglist__25926 = cljs.core.next(arglist__25926);
var k = cljs.core.first(arglist__25926);
arglist__25926 = cljs.core.next(arglist__25926);
var f = cljs.core.first(arglist__25926);
arglist__25926 = cljs.core.next(arglist__25926);
var x = cljs.core.first(arglist__25926);
arglist__25926 = cljs.core.next(arglist__25926);
var y = cljs.core.first(arglist__25926);
arglist__25926 = cljs.core.next(arglist__25926);
var z = cljs.core.first(arglist__25926);
var more = cljs.core.rest(arglist__25926);
return G__25924__delegate(m,k,f,x,y,z,more);
});
G__25924.cljs$core$IFn$_invoke$arity$variadic = G__25924__delegate;
return G__25924;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__25927 = null;
if (arguments.length > 6) {
var G__25928__i = 0, G__25928__a = new Array(arguments.length -  6);
while (G__25928__i < G__25928__a.length) {G__25928__a[G__25928__i] = arguments[G__25928__i + 6]; ++G__25928__i;}
G__25927 = new cljs.core.IndexedSeq(G__25928__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__25927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__25929 = (ll - (5));
var G__25930 = r;
ll = G__25929;
ret = G__25930;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__25935 = cljs.core.pv_aget(node,(0));
var G__25936 = (level - (5));
node = G__25935;
level = G__25936;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__25937 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__25938 = (level - (5));
node = G__25937;
level = G__25938;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__25948 = init__$2;
var G__25949 = (j + i);
var G__25950 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25948,G__25949,G__25950) : f.call(null,G__25948,G__25949,G__25950));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__25961 = (j + (1));
var G__25962 = init__$3;
j = G__25961;
init__$2 = G__25962;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25951 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25951) : cljs.core.deref.call(null,G__25951));
} else {
var G__25963 = (i + len);
var G__25964 = init__$2;
i = G__25963;
init__$1 = G__25964;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__25952 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__25952) : cljs.core.tv_editable_root.call(null,G__25952));
})(),(function (){var G__25953 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__25953) : cljs.core.tv_editable_tail.call(null,G__25953));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__25954 = init__$2;
var G__25955 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25954,G__25955) : f.call(null,G__25954,G__25955));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__25965 = (j + (1));
var G__25966 = init__$3;
j = G__25965;
init__$2 = G__25966;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25956 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25956) : cljs.core.deref.call(null,G__25956));
} else {
var G__25967 = (i + len);
var G__25968 = init__$2;
i = G__25967;
init__$1 = G__25968;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__25957 = coll__$1;
var G__25958 = cljs.core.first_array_for_longvec(coll__$1);
var G__25959 = (0);
var G__25960 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25957,G__25958,G__25959,G__25960) : cljs.core.chunked_seq.call(null,G__25957,G__25958,G__25959,G__25960));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__15328__auto___25969 = len;
var i_25970 = (0);
while(true){
if((i_25970 < n__15328__auto___25969)){
(new_tail[i_25970] = (self__.tail[i_25970]));

var G__25971 = (i_25970 + (1));
i_25970 = G__25971;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__25972 = null;
var G__25972__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__25972__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__25972 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25972__2.call(this,self__,k);
case 3:
return G__25972__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25972.cljs$core$IFn$_invoke$arity$2 = G__25972__2;
G__25972.cljs$core$IFn$_invoke$arity$3 = G__25972__3;
return G__25972;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args25947){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25947)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__25973 = (i + (1));
var G__25974 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__25973;
out = G__25974;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25975__i = 0, G__25975__a = new Array(arguments.length -  0);
while (G__25975__i < G__25975__a.length) {G__25975__a[G__25975__i] = arguments[G__25975__i + 0]; ++G__25975__i;}
  args = new cljs.core.IndexedSeq(G__25975__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__25976){
var args = cljs.core.seq(arglist__25976);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__25977 = self__.vec;
var G__25978 = self__.node;
var G__25979 = self__.i;
var G__25980 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25977,G__25978,G__25979,G__25980) : cljs.core.chunked_seq.call(null,G__25977,G__25978,G__25979,G__25980));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__25981 = self__.vec;
var G__25982 = (self__.i + self__.off);
var G__25983 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__25981,G__25982,G__25983) : cljs.core.subvec.call(null,G__25981,G__25982,G__25983));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__25984 = self__.vec;
var G__25985 = (self__.i + self__.off);
var G__25986 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__25984,G__25985,G__25986) : cljs.core.subvec.call(null,G__25984,G__25985,G__25986));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__25987 = self__.vec;
var G__25988 = self__.node;
var G__25989 = self__.i;
var G__25990 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25987,G__25988,G__25989,G__25990) : cljs.core.chunked_seq.call(null,G__25987,G__25988,G__25989,G__25990));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__25991 = self__.vec;
var G__25992 = cljs.core.unchecked_array_for(self__.vec,end);
var G__25993 = end;
var G__25994 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__25991,G__25992,G__25993,G__25994) : cljs.core.chunked_seq.call(null,G__25991,G__25992,G__25993,G__25994));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__25995 = self__.vec;
var G__25996 = self__.node;
var G__25997 = self__.i;
var G__25998 = self__.off;
var G__25999 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__25995,G__25996,G__25997,G__25998,G__25999) : cljs.core.chunked_seq.call(null,G__25995,G__25996,G__25997,G__25998,G__25999));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26000 = self__.vec;
var G__26001 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26002 = end;
var G__26003 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26000,G__26001,G__26002,G__26003) : cljs.core.chunked_seq.call(null,G__26000,G__26001,G__26002,G__26003));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__26005 = self__.meta;
var G__26006 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__26007 = self__.start;
var G__26008 = (function (){var x__14758__auto__ = self__.end;
var y__14759__auto__ = (v_pos + (1));
return ((x__14758__auto__ > y__14759__auto__) ? x__14758__auto__ : y__14759__auto__);
})();
var G__26009 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26005,G__26006,G__26007,G__26008,G__26009) : cljs.core.build_subvec.call(null,G__26005,G__26006,G__26007,G__26008,G__26009));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__26010 = self__.meta;
var G__26011 = self__.v;
var G__26012 = self__.start;
var G__26013 = (self__.end - (1));
var G__26014 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26010,G__26011,G__26012,G__26013,G__26014) : cljs.core.build_subvec.call(null,G__26010,G__26011,G__26012,G__26013,G__26014));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__26016 = meta__$1;
var G__26017 = self__.v;
var G__26018 = self__.start;
var G__26019 = self__.end;
var G__26020 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26016,G__26017,G__26018,G__26019,G__26020) : cljs.core.build_subvec.call(null,G__26016,G__26017,G__26018,G__26019,G__26020));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26021 = self__.meta;
var G__26022 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__26023 = self__.start;
var G__26024 = (self__.end + (1));
var G__26025 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26021,G__26022,G__26023,G__26024,G__26025) : cljs.core.build_subvec.call(null,G__26021,G__26022,G__26023,G__26024,G__26025));
});

cljs.core.Subvec.prototype.call = (function() {
var G__26026 = null;
var G__26026__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26026__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26026 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26026__2.call(this,self__,k);
case 3:
return G__26026__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26026.cljs$core$IFn$_invoke$arity$2 = G__26026__2;
G__26026.cljs$core$IFn$_invoke$arity$3 = G__26026__3;
return G__26026;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args26004){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26004)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__26027 = meta;
var G__26028 = v.v;
var G__26029 = (v.start + start);
var G__26030 = (v.start + end);
var G__26031 = __hash;
meta = G__26027;
v = G__26028;
start = G__26029;
end = G__26030;
__hash = G__26031;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj26038 = {};
return obj26038;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__26046 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__26047 = (level - (5));
node = G__26046;
level = G__26047;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__26051 = null;
var G__26051__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26051__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26051 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26051__2.call(this,self__,k);
case 3:
return G__26051__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26051.cljs$core$IFn$_invoke$arity$2 = G__26051__2;
G__26051.cljs$core$IFn$_invoke$arity$3 = G__26051__3;
return G__26051;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args26048){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26048)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__14441__auto__ = self__.front;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__14441__auto__ = self__.rear;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__26052 = (i + incr);
i = G__26052;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__26053 = (i + (1));
var G__26054 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__26053;
out = G__26054;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj26058 = {};
return obj26058;
})();
var l = ks.length;
var i_26059 = (0);
while(true){
if((i_26059 < l)){
var k_26060 = (ks[i_26059]);
(new_obj[k_26060] = (obj[k_26060]));

var G__26061 = (i_26059 + (1));
i_26059 = G__26061;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14429__auto__ = (function (){var G__26065 = k;
return goog.isString(G__26065);
})();
if(cljs.core.truth_(and__14429__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14429__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__26066 = init__$1;
var G__26067 = k;
var G__26068 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26066,G__26067,G__26068) : f.call(null,G__26066,G__26067,G__26068));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26069 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26069) : cljs.core.deref.call(null,G__26069));
} else {
var G__26075 = cljs.core.rest(keys__$1);
var G__26076 = init__$2;
keys__$1 = G__26075;
init__$1 = G__26076;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14429__auto__ = (function (){var G__26071 = k;
return goog.isString(G__26071);
})();
if(cljs.core.truth_(and__14429__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14429__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__26072 = k;
return goog.isString(G__26072);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__14429__auto__ = (function (){var G__26074 = k;
return goog.isString(G__26074);
})();
if(cljs.core.truth_(and__14429__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__14429__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__26062_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__26062_SHARP_,(self__.strobj[p1__26062_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__26077 = null;
var G__26077__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26077__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26077 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26077__2.call(this,self__,k);
case 3:
return G__26077__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26077.cljs$core$IFn$_invoke$arity$2 = G__26077__2;
G__26077.cljs$core$IFn$_invoke$arity$3 = G__26077__3;
return G__26077;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args26063){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26063)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj26079 = {};
return obj26079;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__26080 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26080,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26080,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__26081 = (i + (2));
i = G__26081;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__26082 = (i + (2));
i = G__26082;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__26083 = (i + (2));
i = G__26083;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__26084 = (i + (2));
i = G__26084;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__26085 = (i + (2));
i = G__26085;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__14441__auto__ = (function (){var G__26089 = k;
return goog.isString(G__26089);
})();
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_26090 = (0);
while(true){
if((i_26090 < l)){
(narr[i_26090] = (arr[i_26090]));

var G__26091 = (i_26090 + (1));
i_26090 = G__26091;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26093 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26093) : cljs.core.keys.call(null,G__26093));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26094 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26094) : cljs.core.vals.call(null,G__26094));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26095 = cljs.core.seq(coll);
var chunk__26096 = null;
var count__26097 = (0);
var i__26098 = (0);
while(true){
if((i__26098 < count__26097)){
var vec__26099 = chunk__26096.cljs$core$IIndexed$_nth$arity$2(null,i__26098);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26099,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26099,(1),null);
var G__26100_26113 = v;
var G__26101_26114 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26100_26113,G__26101_26114) : f.call(null,G__26100_26113,G__26101_26114));

var G__26115 = seq__26095;
var G__26116 = chunk__26096;
var G__26117 = count__26097;
var G__26118 = (i__26098 + (1));
seq__26095 = G__26115;
chunk__26096 = G__26116;
count__26097 = G__26117;
i__26098 = G__26118;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26095);
if(temp__4406__auto__){
var seq__26095__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26095__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26095__$1);
var G__26119 = cljs.core.chunk_rest(seq__26095__$1);
var G__26120 = c__15228__auto__;
var G__26121 = cljs.core.count(c__15228__auto__);
var G__26122 = (0);
seq__26095 = G__26119;
chunk__26096 = G__26120;
count__26097 = G__26121;
i__26098 = G__26122;
continue;
} else {
var vec__26102 = cljs.core.first(seq__26095__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26102,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26102,(1),null);
var G__26103_26123 = v;
var G__26104_26124 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26103_26123,G__26104_26124) : f.call(null,G__26103_26123,G__26104_26124));

var G__26125 = cljs.core.next(seq__26095__$1);
var G__26126 = null;
var G__26127 = (0);
var G__26128 = (0);
seq__26095 = G__26125;
chunk__26096 = G__26126;
count__26097 = G__26127;
i__26098 = G__26128;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__26105 = init__$1;
var G__26106 = (self__.arr[i]);
var G__26107 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26105,G__26106,G__26107) : f.call(null,G__26105,G__26106,G__26107));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26108 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26108) : cljs.core.deref.call(null,G__26108));
} else {
var G__26129 = (i + (2));
var G__26130 = init__$2;
i = G__26129;
init__$1 = G__26130;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__26109 = other;
if(G__26109){
var bit__15115__auto__ = (G__26109.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__15115__auto__) || (G__26109.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__26131 = (i + (2));
i = G__26131;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj26111 = {};
return obj26111;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__26132 = (s + (2));
var G__26133 = d;
s = G__26132;
d = G__26133;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__26134 = (s + (2));
var G__26135 = (d + (2));
s = G__26134;
d = G__26135;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__26112 = cljs.core.aclone(self__.arr);
(G__26112[(idx + (1))] = v);

return G__26112;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26136 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26137 = cljs.core.next(es);
ret = G__26136;
es = G__26137;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__26138 = null;
var G__26138__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26138__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26138 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26138__2.call(this,self__,k);
case 3:
return G__26138__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26138.cljs$core$IFn$_invoke$arity$2 = G__26138__2;
G__26138.cljs$core$IFn$_invoke$arity$3 = G__26138__3;
return G__26138;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args26092){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26092)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__26139 = (i + (2));
var G__26140 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26139;
ret = G__26140;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__26141_26149 = self__.arr;
G__26141_26149.pop();

G__26141_26149.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__26142 = self__.len;
var G__26143 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__26142,G__26143) : cljs.core.array__GT_transient_hash_map.call(null,G__26142,G__26143));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__26144 = o;
if(G__26144){
var bit__15122__auto__ = (G__26144.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__15122__auto__) || (G__26144.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26144.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26144);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26144);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__26145 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26145) : cljs.core.key.call(null,G__26145));
})(),(function (){var G__26146 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26146) : cljs.core.val.call(null,G__26146));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__26150 = cljs.core.next(es);
var G__26151 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__26147 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26147) : cljs.core.key.call(null,G__26147));
})(),(function (){var G__26148 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26148) : cljs.core.val.call(null,G__26148));
})());
es = G__26150;
tcoll__$2 = G__26151;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__26152 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__26153 = (i + (2));
out = G__26152;
i = G__26153;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__26156 = cljs.core.aclone(arr);
(G__26156[i] = a);

return G__26156;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__26157 = cljs.core.aclone(arr);
(G__26157[i] = a);

(G__26157[j] = b);

return G__26157;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__26162 = init__$1;
var G__26163 = k;
var G__26164 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26162,G__26163,G__26164) : f.call(null,G__26162,G__26163,G__26164));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26165 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26165) : cljs.core.deref.call(null,G__26165));
} else {
var G__26166 = (i + (2));
var G__26167 = init__$2;
i = G__26166;
init__$1 = G__26167;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26168 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26168) : cljs.core.create_inode_seq.call(null,G__26168));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26182 = (0);
var j_26183 = (0);
while(true){
if((i_26182 < (32))){
if((((self__.bitmap >>> i_26182) & (1)) === (0))){
var G__26184 = (i_26182 + (1));
var G__26185 = j_26183;
i_26182 = G__26184;
j_26183 = G__26185;
continue;
} else {
(nodes[i_26182] = ((!(((self__.arr[j_26183]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_26183])),(self__.arr[j_26183]),(self__.arr[(j_26183 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26183 + (1))])));

var G__26186 = (i_26182 + (1));
var G__26187 = (j_26183 + (2));
i_26182 = G__26186;
j_26183 = G__26187;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26169 = edit__$1;
var G__26170 = (shift + (5));
var G__26171 = key_or_nil;
var G__26172 = val_or_node;
var G__26173 = hash;
var G__26174 = key;
var G__26175 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__26169,G__26170,G__26171,G__26172,G__26173,G__26174,G__26175) : cljs.core.create_node.call(null,G__26169,G__26170,G__26171,G__26172,G__26173,G__26174,G__26175));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26188 = (0);
var j_26189 = (0);
while(true){
if((i_26188 < (32))){
if((((self__.bitmap >>> i_26188) & (1)) === (0))){
var G__26190 = (i_26188 + (1));
var G__26191 = j_26189;
i_26188 = G__26190;
j_26189 = G__26191;
continue;
} else {
(nodes[i_26188] = ((!(((self__.arr[j_26189]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_26189])),(self__.arr[j_26189]),(self__.arr[(j_26189 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26189 + (1))])));

var G__26192 = (i_26188 + (1));
var G__26193 = (j_26189 + (2));
i_26188 = G__26192;
j_26189 = G__26193;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26176 = (shift + (5));
var G__26177 = key_or_nil;
var G__26178 = val_or_node;
var G__26179 = hash;
var G__26180 = key;
var G__26181 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__26176,G__26177,G__26178,G__26179,G__26180,G__26181) : cljs.core.create_node.call(null,G__26176,G__26177,G__26178,G__26179,G__26180,G__26181));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__26194 = (i + (1));
var G__26195 = (j + (2));
var G__26196 = (bitmap | ((1) << i));
i = G__26194;
j = G__26195;
bitmap = G__26196;
continue;
} else {
var G__26197 = (i + (1));
var G__26198 = j;
var G__26199 = bitmap;
i = G__26197;
j = G__26198;
bitmap = G__26199;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26200 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__26200) : cljs.core.create_array_node_seq.call(null,G__26200));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26201 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26201) : cljs.core.deref.call(null,G__26201));
} else {
var G__26202 = (i + (1));
var G__26203 = init__$2;
i = G__26202;
init__$1 = G__26203;
continue;
}
} else {
var G__26204 = (i + (1));
var G__26205 = init__$1;
i = G__26204;
init__$1 = G__26205;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__26206 = (i + (2));
i = G__26206;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26207 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26207) : cljs.core.create_inode_seq.call(null,G__26207));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__26208 = self__.nodes;
var G__26209 = (self__.i + (2));
var G__26210 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26208,G__26209,G__26210) : cljs.core.create_inode_seq.call(null,G__26208,G__26209,G__26210));
} else {
var G__26211 = self__.nodes;
var G__26212 = self__.i;
var G__26213 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26211,G__26212,G__26213) : cljs.core.create_inode_seq.call(null,G__26211,G__26212,G__26213));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__26217 = (j + (2));
j = G__26217;
continue;
}
} else {
var G__26218 = (j + (2));
j = G__26218;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__26219 = null;
var G__26220 = self__.nodes;
var G__26221 = self__.i;
var G__26222 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__26219,G__26220,G__26221,G__26222) : cljs.core.create_array_node_seq.call(null,G__26219,G__26220,G__26221,G__26222));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__26227 = (j + (1));
j = G__26227;
continue;
}
} else {
var G__26228 = (j + (1));
j = G__26228;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26230 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26230) : cljs.core.keys.call(null,G__26230));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26231 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26231) : cljs.core.vals.call(null,G__26231));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26232 = cljs.core.seq(coll);
var chunk__26233 = null;
var count__26234 = (0);
var i__26235 = (0);
while(true){
if((i__26235 < count__26234)){
var vec__26236 = chunk__26233.cljs$core$IIndexed$_nth$arity$2(null,i__26235);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26236,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26236,(1),null);
var G__26237_26248 = v;
var G__26238_26249 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26237_26248,G__26238_26249) : f.call(null,G__26237_26248,G__26238_26249));

var G__26250 = seq__26232;
var G__26251 = chunk__26233;
var G__26252 = count__26234;
var G__26253 = (i__26235 + (1));
seq__26232 = G__26250;
chunk__26233 = G__26251;
count__26234 = G__26252;
i__26235 = G__26253;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26232);
if(temp__4406__auto__){
var seq__26232__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26232__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26232__$1);
var G__26254 = cljs.core.chunk_rest(seq__26232__$1);
var G__26255 = c__15228__auto__;
var G__26256 = cljs.core.count(c__15228__auto__);
var G__26257 = (0);
seq__26232 = G__26254;
chunk__26233 = G__26255;
count__26234 = G__26256;
i__26235 = G__26257;
continue;
} else {
var vec__26239 = cljs.core.first(seq__26232__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26239,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26239,(1),null);
var G__26240_26258 = v;
var G__26241_26259 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26240_26258,G__26241_26259) : f.call(null,G__26240_26258,G__26241_26259));

var G__26260 = cljs.core.next(seq__26232__$1);
var G__26261 = null;
var G__26262 = (0);
var G__26263 = (0);
seq__26232 = G__26260;
chunk__26233 = G__26261;
count__26234 = G__26262;
i__26235 = G__26263;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__26242 = init;
var G__26243 = null;
var G__26244 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26242,G__26243,G__26244) : f.call(null,G__26242,G__26243,G__26244));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__26245 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26245) : cljs.core.deref.call(null,G__26245));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj26247 = {};
return obj26247;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26264 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26265 = cljs.core.next(es);
ret = G__26264;
es = G__26265;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__26266 = null;
var G__26266__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26266__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26266 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26266__2.call(this,self__,k);
case 3:
return G__26266__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26266.cljs$core$IFn$_invoke$arity$2 = G__26266__2;
G__26266.cljs$core$IFn$_invoke$arity$3 = G__26266__3;
return G__26266;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args26229){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26229)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__26267 = (i + (2));
var G__26268 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26267;
ret = G__26268;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__26269 = (i + (1));
var G__26270 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__26269;
out = G__26270;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__26271 = o;
if(G__26271){
var bit__15122__auto__ = (G__26271.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__15122__auto__) || (G__26271.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26271.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26271);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26271);
}
})()){
return tcoll.assoc_BANG_((function (){var G__26272 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26272) : cljs.core.key.call(null,G__26272));
})(),(function (){var G__26273 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26273) : cljs.core.val.call(null,G__26273));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__26276 = cljs.core.next(es);
var G__26277 = tcoll__$1.assoc_BANG_((function (){var G__26274 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26274) : cljs.core.key.call(null,G__26274));
})(),(function (){var G__26275 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26275) : cljs.core.val.call(null,G__26275));
})());
es = G__26276;
tcoll__$1 = G__26277;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__26278 = ((ascending_QMARK_)?t.left:t.right);
var G__26279 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__26278;
stack__$1 = G__26279;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__26292 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26292) : cljs.core.deref.call(null,G__26292));
} else {
var init__$2 = (function (){var G__26293 = init__$1;
var G__26294 = node.key;
var G__26295 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26293,G__26294,G__26295) : f.call(null,G__26293,G__26294,G__26295));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26296 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26296) : cljs.core.deref.call(null,G__26296));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__26297 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26297) : cljs.core.deref.call(null,G__26297));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__26299 = null;
var G__26299__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26299__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26299 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26299__2.call(this,self__,k);
case 3:
return G__26299__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26299.cljs$core$IFn$_invoke$arity$2 = G__26299__2;
G__26299.cljs$core$IFn$_invoke$arity$3 = G__26299__3;
return G__26299;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args26298){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26298)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__26301 = null;
var G__26301__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26301__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26301 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26301__2.call(this,self__,k);
case 3:
return G__26301__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26301.cljs$core$IFn$_invoke$arity$2 = G__26301__2;
G__26301.cljs$core$IFn$_invoke$arity$3 = G__26301__3;
return G__26301;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args26300){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26300)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__26314 = k;
var G__26315 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26314,G__26315) : comp.call(null,G__26314,G__26315));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__26334 = k;
var G__26335 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26334,G__26335) : comp.call(null,G__26334,G__26335));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__26346 = k;
var G__26347 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26346,G__26347) : comp.call(null,G__26346,G__26347));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26349 = cljs.core.seq(coll);
var chunk__26350 = null;
var count__26351 = (0);
var i__26352 = (0);
while(true){
if((i__26352 < count__26351)){
var vec__26353 = chunk__26350.cljs$core$IIndexed$_nth$arity$2(null,i__26352);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26353,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26353,(1),null);
var G__26354_26366 = v;
var G__26355_26367 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26354_26366,G__26355_26367) : f.call(null,G__26354_26366,G__26355_26367));

var G__26368 = seq__26349;
var G__26369 = chunk__26350;
var G__26370 = count__26351;
var G__26371 = (i__26352 + (1));
seq__26349 = G__26368;
chunk__26350 = G__26369;
count__26351 = G__26370;
i__26352 = G__26371;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26349);
if(temp__4406__auto__){
var seq__26349__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26349__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26349__$1);
var G__26372 = cljs.core.chunk_rest(seq__26349__$1);
var G__26373 = c__15228__auto__;
var G__26374 = cljs.core.count(c__15228__auto__);
var G__26375 = (0);
seq__26349 = G__26372;
chunk__26350 = G__26373;
count__26351 = G__26374;
i__26352 = G__26375;
continue;
} else {
var vec__26356 = cljs.core.first(seq__26349__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26356,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26356,(1),null);
var G__26357_26376 = v;
var G__26358_26377 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26357_26376,G__26358_26377) : f.call(null,G__26357_26376,G__26358_26377));

var G__26378 = cljs.core.next(seq__26349__$1);
var G__26379 = null;
var G__26380 = (0);
var G__26381 = (0);
seq__26349 = G__26378;
chunk__26350 = G__26379;
count__26351 = G__26380;
i__26352 = G__26381;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26359 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26359) : cljs.core.keys.call(null,G__26359));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26360 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26360) : cljs.core.vals.call(null,G__26360));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__26361 = k;
var G__26362 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__26361,G__26362) : self__.comp.call(null,G__26361,G__26362));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__26382 = t.left;
t = G__26382;
continue;
} else {
var G__26383 = t.right;
t = G__26383;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26384 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26385 = cljs.core.next(es);
ret = G__26384;
es = G__26385;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__26386 = null;
var G__26386__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26386__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26386 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26386__2.call(this,self__,k);
case 3:
return G__26386__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26386.cljs$core$IFn$_invoke$arity$2 = G__26386__2;
G__26386.cljs$core$IFn$_invoke$arity$3 = G__26386__3;
return G__26386;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args26348){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26348)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__26363 = k;
var G__26364 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__26363,G__26364) : self__.comp.call(null,G__26363,G__26364));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__26387 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__26388 = t.left;
stack = G__26387;
t = G__26388;
continue;
} else {
var G__26389 = stack;
var G__26390 = t.right;
stack = G__26389;
t = G__26390;
continue;
}
} else {
if((c > (0))){
var G__26391 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__26392 = t.right;
stack = G__26391;
t = G__26392;
continue;
} else {
var G__26393 = stack;
var G__26394 = t.left;
stack = G__26393;
t = G__26394;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__26365 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26365) : cljs.core.key.call(null,G__26365));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__26395 = cljs.core.nnext(in$);
var G__26396 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__26395;
out = G__26396;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__26397__i = 0, G__26397__a = new Array(arguments.length -  0);
while (G__26397__i < G__26397__a.length) {G__26397__a[G__26397__i] = arguments[G__26397__i + 0]; ++G__26397__i;}
  keyvals = new cljs.core.IndexedSeq(G__26397__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__26398){
var keyvals = cljs.core.seq(arglist__26398);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__26399__i = 0, G__26399__a = new Array(arguments.length -  0);
while (G__26399__i < G__26399__a.length) {G__26399__a[G__26399__i] = arguments[G__26399__i + 0]; ++G__26399__i;}
  keyvals = new cljs.core.IndexedSeq(G__26399__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__26400){
var keyvals = cljs.core.seq(arglist__26400);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj26404 = {};
return obj26404;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__26405 = cljs.core.nnext(kvs);
kvs = G__26405;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__26406__i = 0, G__26406__a = new Array(arguments.length -  0);
while (G__26406__i < G__26406__a.length) {G__26406__a[G__26406__i] = arguments[G__26406__i + 0]; ++G__26406__i;}
  keyvals = new cljs.core.IndexedSeq(G__26406__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__26407){
var keyvals = cljs.core.seq(arglist__26407);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__26408 = cljs.core.nnext(in$);
var G__26409 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__26408;
out = G__26409;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__26410__i = 0, G__26410__a = new Array(arguments.length -  0);
while (G__26410__i < G__26410__a.length) {G__26410__a[G__26410__i] = arguments[G__26410__i + 0]; ++G__26410__i;}
  keyvals = new cljs.core.IndexedSeq(G__26410__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__26411){
var keyvals = cljs.core.seq(arglist__26411);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__26412 = cljs.core.nnext(in$);
var G__26413 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__26412;
out = G__26413;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__26414__i = 0, G__26414__a = new Array(arguments.length -  1);
while (G__26414__i < G__26414__a.length) {G__26414__a[G__26414__i] = arguments[G__26414__i + 1]; ++G__26414__i;}
  keyvals = new cljs.core.IndexedSeq(G__26414__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__26415){
var comparator = cljs.core.first(arglist__26415);
var keyvals = cljs.core.rest(arglist__26415);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__26416 = self__.mseq;
if(G__26416){
var bit__15122__auto__ = (G__26416.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15122__auto__) || (G__26416.cljs$core$INext$)){
return true;
} else {
if((!G__26416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26416);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__26417 = self__.mseq;
if(G__26417){
var bit__15122__auto__ = (G__26417.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15122__auto__) || (G__26417.cljs$core$INext$)){
return true;
} else {
if((!G__26417.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26417);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26417);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__26418 = self__.mseq;
if(G__26418){
var bit__15122__auto__ = (G__26418.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15122__auto__) || (G__26418.cljs$core$INext$)){
return true;
} else {
if((!G__26418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26418);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__26419 = self__.mseq;
if(G__26419){
var bit__15122__auto__ = (G__26419.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__15122__auto__) || (G__26419.cljs$core$INext$)){
return true;
} else {
if((!G__26419.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26419);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__26419);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__26420_SHARP_,p2__26421_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__14441__auto__ = p1__26420_SHARP_;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__26421_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__26422__i = 0, G__26422__a = new Array(arguments.length -  0);
while (G__26422__i < G__26422__a.length) {G__26422__a[G__26422__i] = arguments[G__26422__i + 0]; ++G__26422__i;}
  maps = new cljs.core.IndexedSeq(G__26422__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__26423){
var maps = cljs.core.seq(arglist__26423);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26426 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26427 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26426,G__26427) : f.call(null,G__26426,G__26427));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__14441__auto__ = m1;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__26428__i = 0, G__26428__a = new Array(arguments.length -  1);
while (G__26428__i < G__26428__a.length) {G__26428__a[G__26428__i] = arguments[G__26428__i + 1]; ++G__26428__i;}
  maps = new cljs.core.IndexedSeq(G__26428__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__26429){
var f = cljs.core.first(arglist__26429);
var maps = cljs.core.rest(arglist__26429);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__26430 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__26431 = cljs.core.next(keys);
ret = G__26430;
keys = G__26431;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26434 = cljs.core.seq(coll);
var chunk__26435 = null;
var count__26436 = (0);
var i__26437 = (0);
while(true){
if((i__26437 < count__26436)){
var vec__26438 = chunk__26435.cljs$core$IIndexed$_nth$arity$2(null,i__26437);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26438,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26438,(1),null);
var G__26439_26444 = v;
var G__26440_26445 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26439_26444,G__26440_26445) : f.call(null,G__26439_26444,G__26440_26445));

var G__26446 = seq__26434;
var G__26447 = chunk__26435;
var G__26448 = count__26436;
var G__26449 = (i__26437 + (1));
seq__26434 = G__26446;
chunk__26435 = G__26447;
count__26436 = G__26448;
i__26437 = G__26449;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26434);
if(temp__4406__auto__){
var seq__26434__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26434__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26434__$1);
var G__26450 = cljs.core.chunk_rest(seq__26434__$1);
var G__26451 = c__15228__auto__;
var G__26452 = cljs.core.count(c__15228__auto__);
var G__26453 = (0);
seq__26434 = G__26450;
chunk__26435 = G__26451;
count__26436 = G__26452;
i__26437 = G__26453;
continue;
} else {
var vec__26441 = cljs.core.first(seq__26434__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26441,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26441,(1),null);
var G__26442_26454 = v;
var G__26443_26455 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26442_26454,G__26443_26455) : f.call(null,G__26442_26454,G__26443_26455));

var G__26456 = cljs.core.next(seq__26434__$1);
var G__26457 = null;
var G__26458 = (0);
var G__26459 = (0);
seq__26434 = G__26456;
chunk__26435 = G__26457;
count__26436 = G__26458;
i__26437 = G__26459;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__26432_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__26432_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__26460 = null;
var G__26460__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26460__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26460 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26460__2.call(this,self__,k);
case 3:
return G__26460__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26460.cljs$core$IFn$_invoke$arity$2 = G__26460__2;
G__26460.cljs$core$IFn$_invoke$arity$3 = G__26460__3;
return G__26460;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args26433){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26433)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__26461 = (i + (1));
var G__26462 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__26461;
out = G__26462;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__26463 = (i + (1));
var G__26464 = cljs.core._conj_BANG_(out,(items[i]));
i = G__26463;
out = G__26464;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__26466 = null;
var G__26466__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__26466__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__26466 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26466__2.call(this,self__,k);
case 3:
return G__26466__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26466.cljs$core$IFn$_invoke$arity$2 = G__26466__2;
G__26466.cljs$core$IFn$_invoke$arity$3 = G__26466__3;
return G__26466;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args26465){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26465)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26469 = cljs.core.seq(coll);
var chunk__26470 = null;
var count__26471 = (0);
var i__26472 = (0);
while(true){
if((i__26472 < count__26471)){
var vec__26473 = chunk__26470.cljs$core$IIndexed$_nth$arity$2(null,i__26472);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26473,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26473,(1),null);
var G__26474_26479 = v;
var G__26475_26480 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26474_26479,G__26475_26480) : f.call(null,G__26474_26479,G__26475_26480));

var G__26481 = seq__26469;
var G__26482 = chunk__26470;
var G__26483 = count__26471;
var G__26484 = (i__26472 + (1));
seq__26469 = G__26481;
chunk__26470 = G__26482;
count__26471 = G__26483;
i__26472 = G__26484;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26469);
if(temp__4406__auto__){
var seq__26469__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26469__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26469__$1);
var G__26485 = cljs.core.chunk_rest(seq__26469__$1);
var G__26486 = c__15228__auto__;
var G__26487 = cljs.core.count(c__15228__auto__);
var G__26488 = (0);
seq__26469 = G__26485;
chunk__26470 = G__26486;
count__26471 = G__26487;
i__26472 = G__26488;
continue;
} else {
var vec__26476 = cljs.core.first(seq__26469__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26476,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26476,(1),null);
var G__26477_26489 = v;
var G__26478_26490 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26477_26489,G__26478_26490) : f.call(null,G__26477_26489,G__26478_26490));

var G__26491 = cljs.core.next(seq__26469__$1);
var G__26492 = null;
var G__26493 = (0);
var G__26494 = (0);
seq__26469 = G__26491;
chunk__26470 = G__26492;
count__26471 = G__26493;
i__26472 = G__26494;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__26467_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__26467_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__26495 = null;
var G__26495__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26495__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26495 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26495__2.call(this,self__,k);
case 3:
return G__26495__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26495.cljs$core$IFn$_invoke$arity$2 = G__26495__2;
G__26495.cljs$core$IFn$_invoke$arity$3 = G__26495__3;
return G__26495;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args26468){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26468)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__15322__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__15322__auto__.length)){
var G__26496 = (i + (1));
var G__26497 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__26496;
res = G__26497;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__26498 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__26499 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__26498;
out = G__26499;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__26500__delegate = function (keys){
return cljs.core.set(keys);
};
var G__26500 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__26501__i = 0, G__26501__a = new Array(arguments.length -  0);
while (G__26501__i < G__26501__a.length) {G__26501__a[G__26501__i] = arguments[G__26501__i + 0]; ++G__26501__i;}
  keys = new cljs.core.IndexedSeq(G__26501__a,0);
} 
return G__26500__delegate.call(this,keys);};
G__26500.cljs$lang$maxFixedArity = 0;
G__26500.cljs$lang$applyTo = (function (arglist__26502){
var keys = cljs.core.seq(arglist__26502);
return G__26500__delegate(keys);
});
G__26500.cljs$core$IFn$_invoke$arity$variadic = G__26500__delegate;
return G__26500;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__26503 = null;
if (arguments.length > 0) {
var G__26504__i = 0, G__26504__a = new Array(arguments.length -  0);
while (G__26504__i < G__26504__a.length) {G__26504__a[G__26504__i] = arguments[G__26504__i + 0]; ++G__26504__i;}
G__26503 = new cljs.core.IndexedSeq(G__26504__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__26503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__26505__i = 0, G__26505__a = new Array(arguments.length -  0);
while (G__26505__i < G__26505__a.length) {G__26505__a[G__26505__i] = arguments[G__26505__i + 0]; ++G__26505__i;}
  keys = new cljs.core.IndexedSeq(G__26505__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__26506){
var keys = cljs.core.seq(arglist__26506);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__26507__i = 0, G__26507__a = new Array(arguments.length -  1);
while (G__26507__i < G__26507__a.length) {G__26507__a[G__26507__i] = arguments[G__26507__i + 1]; ++G__26507__i;}
  keys = new cljs.core.IndexedSeq(G__26507__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__26508){
var comparator = cljs.core.first(arglist__26508);
var keys = cljs.core.rest(arglist__26508);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__26509_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__26509_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__26509_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__26510_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__26510_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__26510_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__26531 = null;
var G__26531__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26531__1 = (function (result){
var G__26521 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26521) : rf.call(null,G__26521));
});
var G__26531__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__26522 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26522) : cljs.core.deref.call(null,G__26522));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__26523 = result;
var G__26524 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26523,G__26524) : rf.call(null,G__26523,G__26524));
}
});
G__26531 = function(result,input){
switch(arguments.length){
case 0:
return G__26531__0.call(this);
case 1:
return G__26531__1.call(this,result);
case 2:
return G__26531__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26531.cljs$core$IFn$_invoke$arity$0 = G__26531__0;
G__26531.cljs$core$IFn$_invoke$arity$1 = G__26531__1;
G__26531.cljs$core$IFn$_invoke$arity$2 = G__26531__2;
return G__26531;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__26529,seen__$1){
while(true){
var vec__26530 = p__26529;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26530,(0),null);
var xs__$1 = vec__26530;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__26532 = cljs.core.rest(s);
var G__26533 = seen__$1;
p__26529 = G__26532;
seen__$1 = G__26533;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__26534 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__26535 = cljs.core.next(s__$1);
ret = G__26534;
s__$1 = G__26535;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__26537 = x;
if(G__26537){
var bit__15115__auto__ = (G__26537.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__15115__auto__) || (G__26537.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__26538 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__26539 = cljs.core.next(ks);
var G__26540 = cljs.core.next(vs);
map = G__26538;
ks = G__26539;
vs = G__26540;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__26551 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__26551) : k.call(null,G__26551));
})() > (function (){var G__26552 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__26552) : k.call(null,G__26552));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__26553__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__26541_SHARP_,p2__26542_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__26541_SHARP_,p2__26542_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__26553 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__26554__i = 0, G__26554__a = new Array(arguments.length -  3);
while (G__26554__i < G__26554__a.length) {G__26554__a[G__26554__i] = arguments[G__26554__i + 3]; ++G__26554__i;}
  more = new cljs.core.IndexedSeq(G__26554__a,0);
} 
return G__26553__delegate.call(this,k,x,y,more);};
G__26553.cljs$lang$maxFixedArity = 3;
G__26553.cljs$lang$applyTo = (function (arglist__26555){
var k = cljs.core.first(arglist__26555);
arglist__26555 = cljs.core.next(arglist__26555);
var x = cljs.core.first(arglist__26555);
arglist__26555 = cljs.core.next(arglist__26555);
var y = cljs.core.first(arglist__26555);
var more = cljs.core.rest(arglist__26555);
return G__26553__delegate(k,x,y,more);
});
G__26553.cljs$core$IFn$_invoke$arity$variadic = G__26553__delegate;
return G__26553;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__26556 = null;
if (arguments.length > 3) {
var G__26557__i = 0, G__26557__a = new Array(arguments.length -  3);
while (G__26557__i < G__26557__a.length) {G__26557__a[G__26557__i] = arguments[G__26557__i + 3]; ++G__26557__i;}
G__26556 = new cljs.core.IndexedSeq(G__26557__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__26556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__26568 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__26568) : k.call(null,G__26568));
})() < (function (){var G__26569 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__26569) : k.call(null,G__26569));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__26570__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__26558_SHARP_,p2__26559_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__26558_SHARP_,p2__26559_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__26570 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__26571__i = 0, G__26571__a = new Array(arguments.length -  3);
while (G__26571__i < G__26571__a.length) {G__26571__a[G__26571__i] = arguments[G__26571__i + 3]; ++G__26571__i;}
  more = new cljs.core.IndexedSeq(G__26571__a,0);
} 
return G__26570__delegate.call(this,k,x,y,more);};
G__26570.cljs$lang$maxFixedArity = 3;
G__26570.cljs$lang$applyTo = (function (arglist__26572){
var k = cljs.core.first(arglist__26572);
arglist__26572 = cljs.core.next(arglist__26572);
var x = cljs.core.first(arglist__26572);
arglist__26572 = cljs.core.next(arglist__26572);
var y = cljs.core.first(arglist__26572);
var more = cljs.core.rest(arglist__26572);
return G__26570__delegate(k,x,y,more);
});
G__26570.cljs$core$IFn$_invoke$arity$variadic = G__26570__delegate;
return G__26570;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__26573 = null;
if (arguments.length > 3) {
var G__26574__i = 0, G__26574__a = new Array(arguments.length -  3);
while (G__26574__i < G__26574__a.length) {G__26574__a[G__26574__i] = arguments[G__26574__i + 3]; ++G__26574__i;}
G__26573 = new cljs.core.IndexedSeq(G__26574__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__26573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__26591 = null;
var G__26591__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26591__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__26586 = result;
var G__26587 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26586,G__26587) : rf.call(null,G__26586,G__26587));
})());
})());
var G__26588 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26588) : rf.call(null,G__26588));
});
var G__26591__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__26589 = result;
var G__26590 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26589,G__26590) : rf.call(null,G__26589,G__26590));
} else {
return result;
}
});
G__26591 = function(result,input){
switch(arguments.length){
case 0:
return G__26591__0.call(this);
case 1:
return G__26591__1.call(this,result);
case 2:
return G__26591__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26591.cljs$core$IFn$_invoke$arity$0 = G__26591__0;
G__26591.cljs$core$IFn$_invoke$arity$1 = G__26591__1;
G__26591.cljs$core$IFn$_invoke$arity$2 = G__26591__2;
return G__26591;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__26604 = null;
var G__26604__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26604__1 = (function (result){
var G__26599 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26599) : rf.call(null,G__26599));
});
var G__26604__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26600 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26600) : pred.call(null,G__26600));
})())){
var G__26601 = result;
var G__26602 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26601,G__26602) : rf.call(null,G__26601,G__26602));
} else {
return cljs.core.reduced(result);
}
});
G__26604 = function(result,input){
switch(arguments.length){
case 0:
return G__26604__0.call(this);
case 1:
return G__26604__1.call(this,result);
case 2:
return G__26604__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26604.cljs$core$IFn$_invoke$arity$0 = G__26604__0;
G__26604.cljs$core$IFn$_invoke$arity$1 = G__26604__1;
G__26604.cljs$core$IFn$_invoke$arity$2 = G__26604__2;
return G__26604;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__26603 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26603) : pred.call(null,G__26603));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__26609 = (function (){var G__26611 = cljs.core._entry_key(sc,e);
var G__26612 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26611,G__26612) : comp.call(null,G__26611,G__26612));
})();
var G__26610 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__26609,G__26610) : test.call(null,G__26609,G__26610));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__26616 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26616,(0),null);
var s = vec__26616;
if(cljs.core.truth_((function (){var G__26617 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__26617) : include.call(null,G__26617));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__26618 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26618,(0),null);
var s = vec__26618;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__26622 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26622,(0),null);
var s = vec__26622;
if(cljs.core.truth_((function (){var G__26623 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__26623) : include.call(null,G__26623));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__26624 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26624,(0),null);
var s = vec__26624;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__26625 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__26625) : Math.ceil.call(null,G__26625));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__14862__auto__ = self__.__hash;
if(!((h__14862__auto__ == null))){
return h__14862__auto__;
} else {
var h__14862__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__14862__auto____$1;

return h__14862__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__26626 = ret;
var G__26627 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26626,G__26627) : f.call(null,G__26626,G__26627));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__26628 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26628) : cljs.core.deref.call(null,G__26628));
} else {
var G__26629 = (i + self__.step);
var G__26630 = ret__$1;
i = G__26629;
ret = G__26630;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__26648 = null;
var G__26648__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26648__1 = (function (result){
var G__26645 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26645) : rf.call(null,G__26645));
});
var G__26648__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__26646 = result;
var G__26647 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26646,G__26647) : rf.call(null,G__26646,G__26647));
} else {
return result;
}
});
G__26648 = function(result,input){
switch(arguments.length){
case 0:
return G__26648__0.call(this);
case 1:
return G__26648__1.call(this,result);
case 2:
return G__26648__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26648.cljs$core$IFn$_invoke$arity$0 = G__26648__0;
G__26648.cljs$core$IFn$_invoke$arity$1 = G__26648__1;
G__26648.cljs$core$IFn$_invoke$arity$2 = G__26648__2;
return G__26648;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__26670 = null;
var G__26670__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26670__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__26661 = result;
var G__26662 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26661,G__26662) : rf.call(null,G__26661,G__26662));
})());
})());
var G__26663 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26663) : rf.call(null,G__26663));
});
var G__26670__2 = (function (result,input){
var pval = (function (){var G__26664 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26664) : cljs.core.deref.call(null,G__26664));
})();
var val = (function (){var G__26665 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26665) : f.call(null,G__26665));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__26666 = result;
var G__26667 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26666,G__26667) : rf.call(null,G__26666,G__26667));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__26670 = function(result,input){
switch(arguments.length){
case 0:
return G__26670__0.call(this);
case 1:
return G__26670__1.call(this,result);
case 2:
return G__26670__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26670.cljs$core$IFn$_invoke$arity$0 = G__26670__0;
G__26670.cljs$core$IFn$_invoke$arity$1 = G__26670__1;
G__26670.cljs$core$IFn$_invoke$arity$2 = G__26670__2;
return G__26670;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__26668 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26668) : f.call(null,G__26668));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__26649_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__26669 = p1__26649_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26669) : f.call(null,G__26669));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__26679 = init;
var G__26680 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26679,G__26680) : f.call(null,G__26679,G__26680));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__26775 = null;
var G__26775__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__26775__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26733 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26733) : f.call(null,G__26733));
})()],null));
});
var G__26775__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26734 = x;
var G__26735 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26734,G__26735) : f.call(null,G__26734,G__26735));
})()],null));
});
var G__26775__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26736 = x;
var G__26737 = y;
var G__26738 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26736,G__26737,G__26738) : f.call(null,G__26736,G__26737,G__26738));
})()],null));
});
var G__26775__4 = (function() { 
var G__26776__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__26776 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26777__i = 0, G__26777__a = new Array(arguments.length -  3);
while (G__26777__i < G__26777__a.length) {G__26777__a[G__26777__i] = arguments[G__26777__i + 3]; ++G__26777__i;}
  args = new cljs.core.IndexedSeq(G__26777__a,0);
} 
return G__26776__delegate.call(this,x,y,z,args);};
G__26776.cljs$lang$maxFixedArity = 3;
G__26776.cljs$lang$applyTo = (function (arglist__26778){
var x = cljs.core.first(arglist__26778);
arglist__26778 = cljs.core.next(arglist__26778);
var y = cljs.core.first(arglist__26778);
arglist__26778 = cljs.core.next(arglist__26778);
var z = cljs.core.first(arglist__26778);
var args = cljs.core.rest(arglist__26778);
return G__26776__delegate(x,y,z,args);
});
G__26776.cljs$core$IFn$_invoke$arity$variadic = G__26776__delegate;
return G__26776;
})()
;
G__26775 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26775__0.call(this);
case 1:
return G__26775__1.call(this,x);
case 2:
return G__26775__2.call(this,x,y);
case 3:
return G__26775__3.call(this,x,y,z);
default:
var G__26779 = null;
if (arguments.length > 3) {
var G__26780__i = 0, G__26780__a = new Array(arguments.length -  3);
while (G__26780__i < G__26780__a.length) {G__26780__a[G__26780__i] = arguments[G__26780__i + 3]; ++G__26780__i;}
G__26779 = new cljs.core.IndexedSeq(G__26780__a,0);
}
return G__26775__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26775.cljs$lang$maxFixedArity = 3;
G__26775.cljs$lang$applyTo = G__26775__4.cljs$lang$applyTo;
G__26775.cljs$core$IFn$_invoke$arity$0 = G__26775__0;
G__26775.cljs$core$IFn$_invoke$arity$1 = G__26775__1;
G__26775.cljs$core$IFn$_invoke$arity$2 = G__26775__2;
G__26775.cljs$core$IFn$_invoke$arity$3 = G__26775__3;
G__26775.cljs$core$IFn$_invoke$arity$variadic = G__26775__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26775;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__26781 = null;
var G__26781__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__26781__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26739 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26739) : f.call(null,G__26739));
})(),(function (){var G__26740 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26740) : g.call(null,G__26740));
})()],null));
});
var G__26781__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26741 = x;
var G__26742 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26741,G__26742) : f.call(null,G__26741,G__26742));
})(),(function (){var G__26743 = x;
var G__26744 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__26743,G__26744) : g.call(null,G__26743,G__26744));
})()],null));
});
var G__26781__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26745 = x;
var G__26746 = y;
var G__26747 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26745,G__26746,G__26747) : f.call(null,G__26745,G__26746,G__26747));
})(),(function (){var G__26748 = x;
var G__26749 = y;
var G__26750 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__26748,G__26749,G__26750) : g.call(null,G__26748,G__26749,G__26750));
})()],null));
});
var G__26781__4 = (function() { 
var G__26782__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__26782 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26783__i = 0, G__26783__a = new Array(arguments.length -  3);
while (G__26783__i < G__26783__a.length) {G__26783__a[G__26783__i] = arguments[G__26783__i + 3]; ++G__26783__i;}
  args = new cljs.core.IndexedSeq(G__26783__a,0);
} 
return G__26782__delegate.call(this,x,y,z,args);};
G__26782.cljs$lang$maxFixedArity = 3;
G__26782.cljs$lang$applyTo = (function (arglist__26784){
var x = cljs.core.first(arglist__26784);
arglist__26784 = cljs.core.next(arglist__26784);
var y = cljs.core.first(arglist__26784);
arglist__26784 = cljs.core.next(arglist__26784);
var z = cljs.core.first(arglist__26784);
var args = cljs.core.rest(arglist__26784);
return G__26782__delegate(x,y,z,args);
});
G__26782.cljs$core$IFn$_invoke$arity$variadic = G__26782__delegate;
return G__26782;
})()
;
G__26781 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26781__0.call(this);
case 1:
return G__26781__1.call(this,x);
case 2:
return G__26781__2.call(this,x,y);
case 3:
return G__26781__3.call(this,x,y,z);
default:
var G__26785 = null;
if (arguments.length > 3) {
var G__26786__i = 0, G__26786__a = new Array(arguments.length -  3);
while (G__26786__i < G__26786__a.length) {G__26786__a[G__26786__i] = arguments[G__26786__i + 3]; ++G__26786__i;}
G__26785 = new cljs.core.IndexedSeq(G__26786__a,0);
}
return G__26781__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26781.cljs$lang$maxFixedArity = 3;
G__26781.cljs$lang$applyTo = G__26781__4.cljs$lang$applyTo;
G__26781.cljs$core$IFn$_invoke$arity$0 = G__26781__0;
G__26781.cljs$core$IFn$_invoke$arity$1 = G__26781__1;
G__26781.cljs$core$IFn$_invoke$arity$2 = G__26781__2;
G__26781.cljs$core$IFn$_invoke$arity$3 = G__26781__3;
G__26781.cljs$core$IFn$_invoke$arity$variadic = G__26781__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26781;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__26787 = null;
var G__26787__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__26787__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26751 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26751) : f.call(null,G__26751));
})(),(function (){var G__26752 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26752) : g.call(null,G__26752));
})(),(function (){var G__26753 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__26753) : h.call(null,G__26753));
})()],null));
});
var G__26787__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26754 = x;
var G__26755 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26754,G__26755) : f.call(null,G__26754,G__26755));
})(),(function (){var G__26756 = x;
var G__26757 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__26756,G__26757) : g.call(null,G__26756,G__26757));
})(),(function (){var G__26758 = x;
var G__26759 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__26758,G__26759) : h.call(null,G__26758,G__26759));
})()],null));
});
var G__26787__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__26760 = x;
var G__26761 = y;
var G__26762 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26760,G__26761,G__26762) : f.call(null,G__26760,G__26761,G__26762));
})(),(function (){var G__26763 = x;
var G__26764 = y;
var G__26765 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__26763,G__26764,G__26765) : g.call(null,G__26763,G__26764,G__26765));
})(),(function (){var G__26766 = x;
var G__26767 = y;
var G__26768 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__26766,G__26767,G__26768) : h.call(null,G__26766,G__26767,G__26768));
})()],null));
});
var G__26787__4 = (function() { 
var G__26788__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__26788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26789__i = 0, G__26789__a = new Array(arguments.length -  3);
while (G__26789__i < G__26789__a.length) {G__26789__a[G__26789__i] = arguments[G__26789__i + 3]; ++G__26789__i;}
  args = new cljs.core.IndexedSeq(G__26789__a,0);
} 
return G__26788__delegate.call(this,x,y,z,args);};
G__26788.cljs$lang$maxFixedArity = 3;
G__26788.cljs$lang$applyTo = (function (arglist__26790){
var x = cljs.core.first(arglist__26790);
arglist__26790 = cljs.core.next(arglist__26790);
var y = cljs.core.first(arglist__26790);
arglist__26790 = cljs.core.next(arglist__26790);
var z = cljs.core.first(arglist__26790);
var args = cljs.core.rest(arglist__26790);
return G__26788__delegate(x,y,z,args);
});
G__26788.cljs$core$IFn$_invoke$arity$variadic = G__26788__delegate;
return G__26788;
})()
;
G__26787 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26787__0.call(this);
case 1:
return G__26787__1.call(this,x);
case 2:
return G__26787__2.call(this,x,y);
case 3:
return G__26787__3.call(this,x,y,z);
default:
var G__26791 = null;
if (arguments.length > 3) {
var G__26792__i = 0, G__26792__a = new Array(arguments.length -  3);
while (G__26792__i < G__26792__a.length) {G__26792__a[G__26792__i] = arguments[G__26792__i + 3]; ++G__26792__i;}
G__26791 = new cljs.core.IndexedSeq(G__26792__a,0);
}
return G__26787__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26787.cljs$lang$maxFixedArity = 3;
G__26787.cljs$lang$applyTo = G__26787__4.cljs$lang$applyTo;
G__26787.cljs$core$IFn$_invoke$arity$0 = G__26787__0;
G__26787.cljs$core$IFn$_invoke$arity$1 = G__26787__1;
G__26787.cljs$core$IFn$_invoke$arity$2 = G__26787__2;
G__26787.cljs$core$IFn$_invoke$arity$3 = G__26787__3;
G__26787.cljs$core$IFn$_invoke$arity$variadic = G__26787__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26787;
})()
});
var juxt__4 = (function() { 
var G__26793__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__26794 = null;
var G__26794__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__26681_SHARP_,p2__26682_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26681_SHARP_,(function (){return (p2__26682_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__26682_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__26682_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__26794__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__26683_SHARP_,p2__26684_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26683_SHARP_,(function (){var G__26769 = x;
return (p2__26684_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__26684_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26769) : p2__26684_SHARP_.call(null,G__26769));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__26794__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__26685_SHARP_,p2__26686_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26685_SHARP_,(function (){var G__26770 = x;
var G__26771 = y;
return (p2__26686_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__26686_SHARP_.cljs$core$IFn$_invoke$arity$2(G__26770,G__26771) : p2__26686_SHARP_.call(null,G__26770,G__26771));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__26794__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__26687_SHARP_,p2__26688_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26687_SHARP_,(function (){var G__26772 = x;
var G__26773 = y;
var G__26774 = z;
return (p2__26688_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__26688_SHARP_.cljs$core$IFn$_invoke$arity$3(G__26772,G__26773,G__26774) : p2__26688_SHARP_.call(null,G__26772,G__26773,G__26774));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__26794__4 = (function() { 
var G__26795__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__26689_SHARP_,p2__26690_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__26689_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__26690_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__26795 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26796__i = 0, G__26796__a = new Array(arguments.length -  3);
while (G__26796__i < G__26796__a.length) {G__26796__a[G__26796__i] = arguments[G__26796__i + 3]; ++G__26796__i;}
  args = new cljs.core.IndexedSeq(G__26796__a,0);
} 
return G__26795__delegate.call(this,x,y,z,args);};
G__26795.cljs$lang$maxFixedArity = 3;
G__26795.cljs$lang$applyTo = (function (arglist__26797){
var x = cljs.core.first(arglist__26797);
arglist__26797 = cljs.core.next(arglist__26797);
var y = cljs.core.first(arglist__26797);
arglist__26797 = cljs.core.next(arglist__26797);
var z = cljs.core.first(arglist__26797);
var args = cljs.core.rest(arglist__26797);
return G__26795__delegate(x,y,z,args);
});
G__26795.cljs$core$IFn$_invoke$arity$variadic = G__26795__delegate;
return G__26795;
})()
;
G__26794 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26794__0.call(this);
case 1:
return G__26794__1.call(this,x);
case 2:
return G__26794__2.call(this,x,y);
case 3:
return G__26794__3.call(this,x,y,z);
default:
var G__26798 = null;
if (arguments.length > 3) {
var G__26799__i = 0, G__26799__a = new Array(arguments.length -  3);
while (G__26799__i < G__26799__a.length) {G__26799__a[G__26799__i] = arguments[G__26799__i + 3]; ++G__26799__i;}
G__26798 = new cljs.core.IndexedSeq(G__26799__a,0);
}
return G__26794__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26794.cljs$lang$maxFixedArity = 3;
G__26794.cljs$lang$applyTo = G__26794__4.cljs$lang$applyTo;
G__26794.cljs$core$IFn$_invoke$arity$0 = G__26794__0;
G__26794.cljs$core$IFn$_invoke$arity$1 = G__26794__1;
G__26794.cljs$core$IFn$_invoke$arity$2 = G__26794__2;
G__26794.cljs$core$IFn$_invoke$arity$3 = G__26794__3;
G__26794.cljs$core$IFn$_invoke$arity$variadic = G__26794__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26794;
})()
;})(fs__$1))
};
var G__26793 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__26800__i = 0, G__26800__a = new Array(arguments.length -  3);
while (G__26800__i < G__26800__a.length) {G__26800__a[G__26800__i] = arguments[G__26800__i + 3]; ++G__26800__i;}
  fs = new cljs.core.IndexedSeq(G__26800__a,0);
} 
return G__26793__delegate.call(this,f,g,h,fs);};
G__26793.cljs$lang$maxFixedArity = 3;
G__26793.cljs$lang$applyTo = (function (arglist__26801){
var f = cljs.core.first(arglist__26801);
arglist__26801 = cljs.core.next(arglist__26801);
var g = cljs.core.first(arglist__26801);
arglist__26801 = cljs.core.next(arglist__26801);
var h = cljs.core.first(arglist__26801);
var fs = cljs.core.rest(arglist__26801);
return G__26793__delegate(f,g,h,fs);
});
G__26793.cljs$core$IFn$_invoke$arity$variadic = G__26793__delegate;
return G__26793;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__26802 = null;
if (arguments.length > 3) {
var G__26803__i = 0, G__26803__a = new Array(arguments.length -  3);
while (G__26803__i < G__26803__a.length) {G__26803__a[G__26803__i] = arguments[G__26803__i + 3]; ++G__26803__i;}
G__26802 = new cljs.core.IndexedSeq(G__26803__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__26802);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__26804 = cljs.core.next(coll);
coll = G__26804;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__26805 = (n - (1));
var G__26806 = cljs.core.next(coll);
n = G__26805;
coll = G__26806;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__26810 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26810,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26810,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26810,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_26818 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__26819_26825 = cljs.core.first(coll);
var G__26820_26826 = writer;
var G__26821_26827 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26819_26825,G__26820_26826,G__26821_26827) : print_one.call(null,G__26819_26825,G__26820_26826,G__26821_26827));
} else {
}

var coll_26828__$1 = cljs.core.next(coll);
var n_26829 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_26828__$1) && (((n_26829 == null)) || (!((n_26829 === (0)))))){
cljs.core._write(writer,sep);

var G__26822_26830 = cljs.core.first(coll_26828__$1);
var G__26823_26831 = writer;
var G__26824_26832 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26822_26830,G__26823_26831,G__26824_26832) : print_one.call(null,G__26822_26830,G__26823_26831,G__26824_26832));

var G__26833 = cljs.core.next(coll_26828__$1);
var G__26834 = (n_26829 - (1));
coll_26828__$1 = G__26833;
n_26829 = G__26834;
continue;
} else {
if((cljs.core.seq(coll_26828__$1)) && ((n_26829 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_26818;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__26839 = cljs.core.seq(ss);
var chunk__26840 = null;
var count__26841 = (0);
var i__26842 = (0);
while(true){
if((i__26842 < count__26841)){
var s = chunk__26840.cljs$core$IIndexed$_nth$arity$2(null,i__26842);
cljs.core._write(writer,s);

var G__26843 = seq__26839;
var G__26844 = chunk__26840;
var G__26845 = count__26841;
var G__26846 = (i__26842 + (1));
seq__26839 = G__26843;
chunk__26840 = G__26844;
count__26841 = G__26845;
i__26842 = G__26846;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26839);
if(temp__4406__auto__){
var seq__26839__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26839__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26839__$1);
var G__26847 = cljs.core.chunk_rest(seq__26839__$1);
var G__26848 = c__15228__auto__;
var G__26849 = cljs.core.count(c__15228__auto__);
var G__26850 = (0);
seq__26839 = G__26847;
chunk__26840 = G__26848;
count__26841 = G__26849;
i__26842 = G__26850;
continue;
} else {
var s = cljs.core.first(seq__26839__$1);
cljs.core._write(writer,s);

var G__26851 = cljs.core.next(seq__26839__$1);
var G__26852 = null;
var G__26853 = (0);
var G__26854 = (0);
seq__26839 = G__26851;
chunk__26840 = G__26852;
count__26841 = G__26853;
i__26842 = G__26854;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__26855__i = 0, G__26855__a = new Array(arguments.length -  1);
while (G__26855__i < G__26855__a.length) {G__26855__a[G__26855__i] = arguments[G__26855__i + 1]; ++G__26855__i;}
  ss = new cljs.core.IndexedSeq(G__26855__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__26856){
var writer = cljs.core.first(arglist__26856);
var ss = cljs.core.rest(arglist__26856);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj26858 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj26858;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__26861 = "[\\\\\"\b\f\n\r\t]";
var G__26862 = "g";
return RegExp(G__26861,G__26862);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__14429__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__14429__auto__)){
var and__14429__auto____$1 = (function (){var G__26876 = obj;
if(G__26876){
var bit__15122__auto__ = (G__26876.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__15122__auto__) || (G__26876.cljs$core$IMeta$)){
return true;
} else {
if((!G__26876.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__26876);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__26876);
}
})();
if(and__14429__auto____$1){
return cljs.core.meta(obj);
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__26877 = obj;
if(G__26877){
var bit__15115__auto__ = (G__26877.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__15115__auto__) || (G__26877.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__26878 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__26879 = pr_writer;
var G__26880 = writer;
var G__26881 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__26878,G__26879,G__26880,G__26881) : cljs.core.print_map.call(null,G__26878,G__26879,G__26880,G__26881));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__26882 = obj;
return goog.isString(G__26882);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__26884 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__26884;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__26883 = obj;
if(G__26883){
var bit__15122__auto__ = (G__26883.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__15122__auto__) || (G__26883.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__26883.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__26883);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__26883);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__26889 = cljs.core.seq(cljs.core.next(objs));
var chunk__26890 = null;
var count__26891 = (0);
var i__26892 = (0);
while(true){
if((i__26892 < count__26891)){
var obj = chunk__26890.cljs$core$IIndexed$_nth$arity$2(null,i__26892);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__26893 = seq__26889;
var G__26894 = chunk__26890;
var G__26895 = count__26891;
var G__26896 = (i__26892 + (1));
seq__26889 = G__26893;
chunk__26890 = G__26894;
count__26891 = G__26895;
i__26892 = G__26896;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__26889);
if(temp__4406__auto__){
var seq__26889__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26889__$1)){
var c__15228__auto__ = cljs.core.chunk_first(seq__26889__$1);
var G__26897 = cljs.core.chunk_rest(seq__26889__$1);
var G__26898 = c__15228__auto__;
var G__26899 = cljs.core.count(c__15228__auto__);
var G__26900 = (0);
seq__26889 = G__26897;
chunk__26890 = G__26898;
count__26891 = G__26899;
i__26892 = G__26900;
continue;
} else {
var obj = cljs.core.first(seq__26889__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__26901 = cljs.core.next(seq__26889__$1);
var G__26902 = null;
var G__26903 = (0);
var G__26904 = (0);
seq__26889 = G__26901;
chunk__26890 = G__26902;
count__26891 = G__26903;
i__26892 = G__26904;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26905__i = 0, G__26905__a = new Array(arguments.length -  0);
while (G__26905__i < G__26905__a.length) {G__26905__a[G__26905__i] = arguments[G__26905__i + 0]; ++G__26905__i;}
  objs = new cljs.core.IndexedSeq(G__26905__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__26906){
var objs = cljs.core.seq(arglist__26906);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26907__i = 0, G__26907__a = new Array(arguments.length -  0);
while (G__26907__i < G__26907__a.length) {G__26907__a[G__26907__i] = arguments[G__26907__i + 0]; ++G__26907__i;}
  objs = new cljs.core.IndexedSeq(G__26907__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__26908){
var objs = cljs.core.seq(arglist__26908);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26909__i = 0, G__26909__a = new Array(arguments.length -  0);
while (G__26909__i < G__26909__a.length) {G__26909__a[G__26909__i] = arguments[G__26909__i + 0]; ++G__26909__i;}
  objs = new cljs.core.IndexedSeq(G__26909__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__26910){
var objs = cljs.core.seq(arglist__26910);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26911__i = 0, G__26911__a = new Array(arguments.length -  0);
while (G__26911__i < G__26911__a.length) {G__26911__a[G__26911__i] = arguments[G__26911__i + 0]; ++G__26911__i;}
  objs = new cljs.core.IndexedSeq(G__26911__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__26912){
var objs = cljs.core.seq(arglist__26912);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26913__i = 0, G__26913__a = new Array(arguments.length -  0);
while (G__26913__i < G__26913__a.length) {G__26913__a[G__26913__i] = arguments[G__26913__i + 0]; ++G__26913__i;}
  objs = new cljs.core.IndexedSeq(G__26913__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__26914){
var objs = cljs.core.seq(arglist__26914);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26915__i = 0, G__26915__a = new Array(arguments.length -  0);
while (G__26915__i < G__26915__a.length) {G__26915__a[G__26915__i] = arguments[G__26915__i + 0]; ++G__26915__i;}
  objs = new cljs.core.IndexedSeq(G__26915__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__26916){
var objs = cljs.core.seq(arglist__26916);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26917__i = 0, G__26917__a = new Array(arguments.length -  0);
while (G__26917__i < G__26917__a.length) {G__26917__a[G__26917__i] = arguments[G__26917__i + 0]; ++G__26917__i;}
  objs = new cljs.core.IndexedSeq(G__26917__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__26918){
var objs = cljs.core.seq(arglist__26918);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__26919__i = 0, G__26919__a = new Array(arguments.length -  0);
while (G__26919__i < G__26919__a.length) {G__26919__a[G__26919__i] = arguments[G__26919__i + 0]; ++G__26919__i;}
  objs = new cljs.core.IndexedSeq(G__26919__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__26920){
var objs = cljs.core.seq(arglist__26920);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__26927_26933 = cljs.core.key(e);
var G__26928_26934 = w;
var G__26929_26935 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26927_26933,G__26928_26934,G__26929_26935) : print_one.call(null,G__26927_26933,G__26928_26934,G__26929_26935));

cljs.core._write(w," ");

var G__26930 = cljs.core.val(e);
var G__26931 = w;
var G__26932 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__26930,G__26931,G__26932) : print_one.call(null,G__26930,G__26931,G__26932));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__26936__i = 0, G__26936__a = new Array(arguments.length -  2);
while (G__26936__i < G__26936__a.length) {G__26936__a[G__26936__i] = arguments[G__26936__i + 2]; ++G__26936__i;}
  args = new cljs.core.IndexedSeq(G__26936__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__26937){
var iref = cljs.core.first(arglist__26937);
arglist__26937 = cljs.core.next(arglist__26937);
var f = cljs.core.first(arglist__26937);
var args = cljs.core.rest(arglist__26937);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__26940 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26940) : cljs.core.atom.call(null,G__26940));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__26942 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26942) : cljs.core.deref.call(null,G__26942));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__26943_SHARP_,p2__26944_SHARP_){
var ret = (function (){var G__26947 = p1__26943_SHARP_;
var G__26948 = p2__26944_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26947,G__26948) : rf.call(null,G__26947,G__26948));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__26951 = null;
var G__26951__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26951__1 = (function (result){
var G__26950 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26950) : rf.call(null,G__26950));
});
var G__26951__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__26951 = function(result,input){
switch(arguments.length){
case 0:
return G__26951__0.call(this);
case 1:
return G__26951__1.call(this,result);
case 2:
return G__26951__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26951.cljs$core$IFn$_invoke$arity$0 = G__26951__0;
G__26951.cljs$core$IFn$_invoke$arity$1 = G__26951__1;
G__26951.cljs$core$IFn$_invoke$arity$2 = G__26951__2;
return G__26951;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__26960 = null;
var G__26960__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26960__1 = (function (result){
var G__26956 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26956) : rf.call(null,G__26956));
});
var G__26960__2 = (function (result,input){
var prior = (function (){var G__26957 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26957) : cljs.core.deref.call(null,G__26957));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__26958 = result;
var G__26959 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26958,G__26959) : rf.call(null,G__26958,G__26959));
}
});
G__26960 = function(result,input){
switch(arguments.length){
case 0:
return G__26960__0.call(this);
case 1:
return G__26960__1.call(this,result);
case 2:
return G__26960__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26960.cljs$core$IFn$_invoke$arity$0 = G__26960__0;
G__26960.cljs$core$IFn$_invoke$arity$1 = G__26960__1;
G__26960.cljs$core$IFn$_invoke$arity$2 = G__26960__2;
return G__26960;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__15419__auto__ = this;
return cljs.core.es6_iterator(this__15419__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__26962_SHARP_,p2__26961_SHARP_){
var G__26964 = p2__26961_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__26964) : proc.call(null,G__26964));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj26966 = {};
return obj26966;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__14429__auto__ = x;
if(and__14429__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__14429__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__15085__auto__ = (((x == null))?null:x);
return (function (){var or__14441__auto__ = (cljs.core._clj__GT_js[(function (){var G__26970 = x__15085__auto__;
return goog.typeOf(G__26970);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__14429__auto__ = x;
if(and__14429__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__14429__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__15085__auto__ = (((x == null))?null:x);
return (function (){var or__14441__auto__ = (cljs.core._key__GT_js[(function (){var G__26974 = x__15085__auto__;
return goog.typeOf(G__26974);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__26977 = k;
if(G__26977){
var bit__15122__auto__ = null;
if(cljs.core.truth_((function (){var or__14441__auto__ = bit__15122__auto__;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return G__26977.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__26977.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26977);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__26978 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__26978) : cljs.core.clj__GT_js.call(null,G__26978));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__26994 = x;
if(G__26994){
var bit__15122__auto__ = null;
if(cljs.core.truth_((function (){var or__14441__auto__ = bit__15122__auto__;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return G__26994.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__26994.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__26994);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj26996 = {};
return obj26996;
})();
var seq__26997_27007 = cljs.core.seq(x);
var chunk__26998_27008 = null;
var count__26999_27009 = (0);
var i__27000_27010 = (0);
while(true){
if((i__27000_27010 < count__26999_27009)){
var vec__27001_27011 = chunk__26998_27008.cljs$core$IIndexed$_nth$arity$2(null,i__27000_27010);
var k_27012 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27001_27011,(0),null);
var v_27013 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27001_27011,(1),null);
(m[cljs.core.key__GT_js(k_27012)] = clj__GT_js(v_27013));

var G__27014 = seq__26997_27007;
var G__27015 = chunk__26998_27008;
var G__27016 = count__26999_27009;
var G__27017 = (i__27000_27010 + (1));
seq__26997_27007 = G__27014;
chunk__26998_27008 = G__27015;
count__26999_27009 = G__27016;
i__27000_27010 = G__27017;
continue;
} else {
var temp__4406__auto___27018 = cljs.core.seq(seq__26997_27007);
if(temp__4406__auto___27018){
var seq__26997_27019__$1 = temp__4406__auto___27018;
if(cljs.core.chunked_seq_QMARK_(seq__26997_27019__$1)){
var c__15228__auto___27020 = cljs.core.chunk_first(seq__26997_27019__$1);
var G__27021 = cljs.core.chunk_rest(seq__26997_27019__$1);
var G__27022 = c__15228__auto___27020;
var G__27023 = cljs.core.count(c__15228__auto___27020);
var G__27024 = (0);
seq__26997_27007 = G__27021;
chunk__26998_27008 = G__27022;
count__26999_27009 = G__27023;
i__27000_27010 = G__27024;
continue;
} else {
var vec__27002_27025 = cljs.core.first(seq__26997_27019__$1);
var k_27026 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27002_27025,(0),null);
var v_27027 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27002_27025,(1),null);
(m[cljs.core.key__GT_js(k_27026)] = clj__GT_js(v_27027));

var G__27028 = cljs.core.next(seq__26997_27019__$1);
var G__27029 = null;
var G__27030 = (0);
var G__27031 = (0);
seq__26997_27007 = G__27028;
chunk__26998_27008 = G__27029;
count__26999_27009 = G__27030;
i__27000_27010 = G__27031;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__27003_27032 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__27004_27033 = null;
var count__27005_27034 = (0);
var i__27006_27035 = (0);
while(true){
if((i__27006_27035 < count__27005_27034)){
var x_27036__$1 = chunk__27004_27033.cljs$core$IIndexed$_nth$arity$2(null,i__27006_27035);
arr.push(x_27036__$1);

var G__27037 = seq__27003_27032;
var G__27038 = chunk__27004_27033;
var G__27039 = count__27005_27034;
var G__27040 = (i__27006_27035 + (1));
seq__27003_27032 = G__27037;
chunk__27004_27033 = G__27038;
count__27005_27034 = G__27039;
i__27006_27035 = G__27040;
continue;
} else {
var temp__4406__auto___27041 = cljs.core.seq(seq__27003_27032);
if(temp__4406__auto___27041){
var seq__27003_27042__$1 = temp__4406__auto___27041;
if(cljs.core.chunked_seq_QMARK_(seq__27003_27042__$1)){
var c__15228__auto___27043 = cljs.core.chunk_first(seq__27003_27042__$1);
var G__27044 = cljs.core.chunk_rest(seq__27003_27042__$1);
var G__27045 = c__15228__auto___27043;
var G__27046 = cljs.core.count(c__15228__auto___27043);
var G__27047 = (0);
seq__27003_27032 = G__27044;
chunk__27004_27033 = G__27045;
count__27005_27034 = G__27046;
i__27006_27035 = G__27047;
continue;
} else {
var x_27048__$1 = cljs.core.first(seq__27003_27042__$1);
arr.push(x_27048__$1);

var G__27049 = cljs.core.next(seq__27003_27042__$1);
var G__27050 = null;
var G__27051 = (0);
var G__27052 = (0);
seq__27003_27032 = G__27049;
chunk__27004_27033 = G__27050;
count__27005_27034 = G__27051;
i__27006_27035 = G__27052;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj27054 = {};
return obj27054;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__14429__auto__ = x;
if(and__14429__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__14429__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__15085__auto__ = (((x == null))?null:x);
return (function (){var or__14441__auto__ = (cljs.core._js__GT_clj[(function (){var G__27058 = x__15085__auto__;
return goog.typeOf(G__27058);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__27115__delegate = function (x,opts){
var map__27088 = opts;
var map__27088__$1 = ((cljs.core.seq_QMARK_(map__27088))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27088):map__27088);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27088__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__27088,map__27088__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__27104 = x__$1;
if(G__27104){
var bit__15122__auto__ = null;
if(cljs.core.truth_((function (){var or__14441__auto__ = bit__15122__auto__;
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return G__27104.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__27104.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27104);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27104);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__15197__auto__ = ((function (map__27088,map__27088__$1,keywordize_keys,keyfn){
return (function iter__27105(s__27106){
return (new cljs.core.LazySeq(null,((function (map__27088,map__27088__$1,keywordize_keys,keyfn){
return (function (){
var s__27106__$1 = s__27106;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__27106__$1);
if(temp__4406__auto__){
var s__27106__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__27106__$2)){
var c__15195__auto__ = cljs.core.chunk_first(s__27106__$2);
var size__15196__auto__ = cljs.core.count(c__15195__auto__);
var b__27108 = cljs.core.chunk_buffer(size__15196__auto__);
if((function (){var i__27107 = (0);
while(true){
if((i__27107 < size__15196__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__15195__auto__,i__27107);
cljs.core.chunk_append(b__27108,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27113 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27113) : keyfn.call(null,G__27113));
})(),thisfn((x__$1[k]))], null));

var G__27116 = (i__27107 + (1));
i__27107 = G__27116;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__27108),iter__27105(cljs.core.chunk_rest(s__27106__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__27108),null);
}
} else {
var k = cljs.core.first(s__27106__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27114 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27114) : keyfn.call(null,G__27114));
})(),thisfn((x__$1[k]))], null),iter__27105(cljs.core.rest(s__27106__$2)));
}
} else {
return null;
}
break;
}
});})(map__27088,map__27088__$1,keywordize_keys,keyfn))
,null,null));
});})(map__27088,map__27088__$1,keywordize_keys,keyfn))
;
return iter__15197__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__27088,map__27088__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__27115 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__27117__i = 0, G__27117__a = new Array(arguments.length -  1);
while (G__27117__i < G__27117__a.length) {G__27117__a[G__27117__i] = arguments[G__27117__i + 1]; ++G__27117__i;}
  opts = new cljs.core.IndexedSeq(G__27117__a,0);
} 
return G__27115__delegate.call(this,x,opts);};
G__27115.cljs$lang$maxFixedArity = 1;
G__27115.cljs$lang$applyTo = (function (arglist__27118){
var x = cljs.core.first(arglist__27118);
var opts = cljs.core.rest(arglist__27118);
return G__27115__delegate(x,opts);
});
G__27115.cljs$core$IFn$_invoke$arity$variadic = G__27115__delegate;
return G__27115;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__27119 = null;
if (arguments.length > 1) {
var G__27120__i = 0, G__27120__a = new Array(arguments.length -  1);
while (G__27120__i < G__27120__a.length) {G__27120__a[G__27120__i] = arguments[G__27120__i + 1]; ++G__27120__i;}
G__27119 = new cljs.core.IndexedSeq(G__27120__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__27123 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27123) : cljs.core.atom.call(null,G__27123));
})();
return ((function (mem){
return (function() { 
var G__27125__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__27124 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27124) : cljs.core.deref.call(null,G__27124));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__27125 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27126__i = 0, G__27126__a = new Array(arguments.length -  0);
while (G__27126__i < G__27126__a.length) {G__27126__a[G__27126__i] = arguments[G__27126__i + 0]; ++G__27126__i;}
  args = new cljs.core.IndexedSeq(G__27126__a,0);
} 
return G__27125__delegate.call(this,args);};
G__27125.cljs$lang$maxFixedArity = 0;
G__27125.cljs$lang$applyTo = (function (arglist__27127){
var args = cljs.core.seq(arglist__27127);
return G__27125__delegate(args);
});
G__27125.cljs$core$IFn$_invoke$arity$variadic = G__27125__delegate;
return G__27125;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__27129 = ret;
f = G__27129;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__27130__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__27130 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27131__i = 0, G__27131__a = new Array(arguments.length -  1);
while (G__27131__i < G__27131__a.length) {G__27131__a[G__27131__i] = arguments[G__27131__i + 1]; ++G__27131__i;}
  args = new cljs.core.IndexedSeq(G__27131__a,0);
} 
return G__27130__delegate.call(this,f,args);};
G__27130.cljs$lang$maxFixedArity = 1;
G__27130.cljs$lang$applyTo = (function (arglist__27132){
var f = cljs.core.first(arglist__27132);
var args = cljs.core.rest(arglist__27132);
return G__27130__delegate(f,args);
});
G__27130.cljs$core$IFn$_invoke$arity$variadic = G__27130__delegate;
return G__27130;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__27133 = null;
if (arguments.length > 1) {
var G__27134__i = 0, G__27134__a = new Array(arguments.length -  1);
while (G__27134__i < G__27134__a.length) {G__27134__a[G__27134__i] = arguments[G__27134__i + 1]; ++G__27134__i;}
G__27133 = new cljs.core.IndexedSeq(G__27134__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__27137 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27137) : Math.floor.call(null,G__27137));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__27139 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27139) : f.call(null,G__27139));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__27141 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27141) : cljs.core.atom.call(null,G__27141));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27142__i = 0, G__27142__a = new Array(arguments.length -  1);
while (G__27142__i < G__27142__a.length) {G__27142__a[G__27142__i] = arguments[G__27142__i + 1]; ++G__27142__i;}
  args = new cljs.core.IndexedSeq(G__27142__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__27143){
var f = cljs.core.first(arglist__27143);
var args = cljs.core.rest(arglist__27143);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__27208 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27208) : cljs.core.deref.call(null,G__27208));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__14441__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
var and__14429__auto__ = cljs.core.vector_QMARK_(parent);
if(and__14429__auto__){
var and__14429__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__14429__auto____$1){
var and__14429__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__14429__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__27233 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__27231 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__27231) : child.call(null,G__27231));
})(),(function (){var G__27232 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__27232) : parent.call(null,G__27232));
})());
var G__27234 = (i + (1));
ret = G__27233;
i = G__27234;
continue;
}
break;
}
} else {
return and__14429__auto____$2;
}
} else {
return and__14429__auto____$1;
}
} else {
return and__14429__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__27238 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27238) : cljs.core.deref.call(null,G__27238));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__27242 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27242) : cljs.core.deref.call(null,G__27242));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__27246 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27246) : cljs.core.deref.call(null,G__27246));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__27255 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__27255) : targets.call(null,G__27255));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__27256 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__27256) : sources.call(null,G__27256));
})()));
});})(tp,td,ta))
;
var or__14441__auto__ = ((cljs.core.contains_QMARK_((function (){var G__27260 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__27260) : tp.call(null,G__27260));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__27261 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__27261) : ta.call(null,G__27261));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__27262 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__27262) : ta.call(null,G__27262));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__27269 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27269) : parentMap.call(null,G__27269));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__27270 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27270) : parentMap.call(null,G__27270));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__27263_SHARP_){
return cljs.core.cons(cljs.core.first(p1__27263_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__27263_SHARP_),cljs.core.second(p1__27263_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__27271 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27271) : parentMap.call(null,G__27271));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__27264_SHARP_,p2__27265_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__27264_SHARP_,p2__27265_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__27274 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27274) : cljs.core.deref.call(null,G__27274));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__27275 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27275) : cljs.core.deref.call(null,G__27275));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__27291 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27291) : cljs.core.deref.call(null,G__27291));
})().call(null,x);
var or__14441__auto__ = (cljs.core.truth_((function (){var and__14429__auto__ = xprefs;
if(cljs.core.truth_(and__14429__auto__)){
var G__27293 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__27293) : xprefs.call(null,G__27293));
} else {
return and__14429__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__27294 = cljs.core.rest(ps);
ps = G__27294;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__14441__auto____$1)){
return or__14441__auto____$1;
} else {
var or__14441__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__27295 = cljs.core.rest(ps);
ps = G__27295;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__14441__auto____$2)){
return or__14441__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__14441__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__14441__auto__)){
return or__14441__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__27309){
var vec__27310 = p__27309;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27310,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27310,(1),null);
var e = vec__27310;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__27311 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27311) : cljs.core.deref.call(null,G__27311));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__14441__auto__ = (be == null);
if(or__14441__auto__){
return or__14441__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__27312 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27312) : cljs.core.deref.call(null,G__27312));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__27313 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27313) : cljs.core.deref.call(null,G__27313));
})(),(function (){var G__27314 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27314) : cljs.core.deref.call(null,G__27314));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj27316 = {};
return obj27316;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._reset[(function (){var G__27320 = x__15085__auto__;
return goog.typeOf(G__27320);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._reset["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._add_method[(function (){var G__27324 = x__15085__auto__;
return goog.typeOf(G__27324);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._add_method["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._remove_method[(function (){var G__27328 = x__15085__auto__;
return goog.typeOf(G__27328);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._remove_method["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._prefer_method[(function (){var G__27332 = x__15085__auto__;
return goog.typeOf(G__27332);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._get_method[(function (){var G__27336 = x__15085__auto__;
return goog.typeOf(G__27336);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._get_method["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._methods[(function (){var G__27340 = x__15085__auto__;
return goog.typeOf(G__27340);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._methods["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__14429__auto__ = mf;
if(and__14429__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__14429__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__15085__auto__ = (((mf == null))?null:mf);
return (function (){var or__14441__auto__ = (cljs.core._prefers[(function (){var G__27344 = x__15085__auto__;
return goog.typeOf(G__27344);
})()]);
if(or__14441__auto__){
return or__14441__auto__;
} else {
var or__14441__auto____$1 = (cljs.core._prefers["_"]);
if(or__14441__auto____$1){
return or__14441__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__27346 = this$__$1;
return goog.getUid(G__27346);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__27347 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27347) : cljs.core.deref.call(null,G__27347));
})(),(function (){var G__27348 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27348) : cljs.core.deref.call(null,G__27348));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__27349 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27349) : cljs.core.deref.call(null,G__27349));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__27350 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27350) : cljs.core.deref.call(null,G__27350));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__27351 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27351) : cljs.core.deref.call(null,G__27351));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__27352 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27352) : cljs.core.deref.call(null,G__27352));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__28193 = null;
var G__28193__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__28193__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27353 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__27353) : self__.dispatch_fn.call(null,G__27353));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27354 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__27354) : target_fn.call(null,G__27354));
});
var G__28193__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27355 = a;
var G__27356 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__27355,G__27356) : self__.dispatch_fn.call(null,G__27355,G__27356));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27357 = a;
var G__27358 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__27357,G__27358) : target_fn.call(null,G__27357,G__27358));
});
var G__28193__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27359 = a;
var G__27360 = b;
var G__27361 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__27359,G__27360,G__27361) : self__.dispatch_fn.call(null,G__27359,G__27360,G__27361));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27362 = a;
var G__27363 = b;
var G__27364 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__27362,G__27363,G__27364) : target_fn.call(null,G__27362,G__27363,G__27364));
});
var G__28193__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27365 = a;
var G__27366 = b;
var G__27367 = c;
var G__27368 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__27365,G__27366,G__27367,G__27368) : self__.dispatch_fn.call(null,G__27365,G__27366,G__27367,G__27368));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27369 = a;
var G__27370 = b;
var G__27371 = c;
var G__27372 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__27369,G__27370,G__27371,G__27372) : target_fn.call(null,G__27369,G__27370,G__27371,G__27372));
});
var G__28193__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27373 = a;
var G__27374 = b;
var G__27375 = c;
var G__27376 = d;
var G__27377 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__27373,G__27374,G__27375,G__27376,G__27377) : self__.dispatch_fn.call(null,G__27373,G__27374,G__27375,G__27376,G__27377));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27378 = a;
var G__27379 = b;
var G__27380 = c;
var G__27381 = d;
var G__27382 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__27378,G__27379,G__27380,G__27381,G__27382) : target_fn.call(null,G__27378,G__27379,G__27380,G__27381,G__27382));
});
var G__28193__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27383 = a;
var G__27384 = b;
var G__27385 = c;
var G__27386 = d;
var G__27387 = e;
var G__27388 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__27383,G__27384,G__27385,G__27386,G__27387,G__27388) : self__.dispatch_fn.call(null,G__27383,G__27384,G__27385,G__27386,G__27387,G__27388));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27389 = a;
var G__27390 = b;
var G__27391 = c;
var G__27392 = d;
var G__27393 = e;
var G__27394 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__27389,G__27390,G__27391,G__27392,G__27393,G__27394) : target_fn.call(null,G__27389,G__27390,G__27391,G__27392,G__27393,G__27394));
});
var G__28193__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27395 = a;
var G__27396 = b;
var G__27397 = c;
var G__27398 = d;
var G__27399 = e;
var G__27400 = f;
var G__27401 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__27395,G__27396,G__27397,G__27398,G__27399,G__27400,G__27401) : self__.dispatch_fn.call(null,G__27395,G__27396,G__27397,G__27398,G__27399,G__27400,G__27401));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27402 = a;
var G__27403 = b;
var G__27404 = c;
var G__27405 = d;
var G__27406 = e;
var G__27407 = f;
var G__27408 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__27402,G__27403,G__27404,G__27405,G__27406,G__27407,G__27408) : target_fn.call(null,G__27402,G__27403,G__27404,G__27405,G__27406,G__27407,G__27408));
});
var G__28193__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27409 = a;
var G__27410 = b;
var G__27411 = c;
var G__27412 = d;
var G__27413 = e;
var G__27414 = f;
var G__27415 = g;
var G__27416 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__27409,G__27410,G__27411,G__27412,G__27413,G__27414,G__27415,G__27416) : self__.dispatch_fn.call(null,G__27409,G__27410,G__27411,G__27412,G__27413,G__27414,G__27415,G__27416));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27417 = a;
var G__27418 = b;
var G__27419 = c;
var G__27420 = d;
var G__27421 = e;
var G__27422 = f;
var G__27423 = g;
var G__27424 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__27417,G__27418,G__27419,G__27420,G__27421,G__27422,G__27423,G__27424) : target_fn.call(null,G__27417,G__27418,G__27419,G__27420,G__27421,G__27422,G__27423,G__27424));
});
var G__28193__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27425 = a;
var G__27426 = b;
var G__27427 = c;
var G__27428 = d;
var G__27429 = e;
var G__27430 = f;
var G__27431 = g;
var G__27432 = h;
var G__27433 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__27425,G__27426,G__27427,G__27428,G__27429,G__27430,G__27431,G__27432,G__27433) : self__.dispatch_fn.call(null,G__27425,G__27426,G__27427,G__27428,G__27429,G__27430,G__27431,G__27432,G__27433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27434 = a;
var G__27435 = b;
var G__27436 = c;
var G__27437 = d;
var G__27438 = e;
var G__27439 = f;
var G__27440 = g;
var G__27441 = h;
var G__27442 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__27434,G__27435,G__27436,G__27437,G__27438,G__27439,G__27440,G__27441,G__27442) : target_fn.call(null,G__27434,G__27435,G__27436,G__27437,G__27438,G__27439,G__27440,G__27441,G__27442));
});
var G__28193__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27443 = a;
var G__27444 = b;
var G__27445 = c;
var G__27446 = d;
var G__27447 = e;
var G__27448 = f;
var G__27449 = g;
var G__27450 = h;
var G__27451 = i;
var G__27452 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__27443,G__27444,G__27445,G__27446,G__27447,G__27448,G__27449,G__27450,G__27451,G__27452) : self__.dispatch_fn.call(null,G__27443,G__27444,G__27445,G__27446,G__27447,G__27448,G__27449,G__27450,G__27451,G__27452));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27453 = a;
var G__27454 = b;
var G__27455 = c;
var G__27456 = d;
var G__27457 = e;
var G__27458 = f;
var G__27459 = g;
var G__27460 = h;
var G__27461 = i;
var G__27462 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__27453,G__27454,G__27455,G__27456,G__27457,G__27458,G__27459,G__27460,G__27461,G__27462) : target_fn.call(null,G__27453,G__27454,G__27455,G__27456,G__27457,G__27458,G__27459,G__27460,G__27461,G__27462));
});
var G__28193__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27463 = a;
var G__27464 = b;
var G__27465 = c;
var G__27466 = d;
var G__27467 = e;
var G__27468 = f;
var G__27469 = g;
var G__27470 = h;
var G__27471 = i;
var G__27472 = j;
var G__27473 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__27463,G__27464,G__27465,G__27466,G__27467,G__27468,G__27469,G__27470,G__27471,G__27472,G__27473) : self__.dispatch_fn.call(null,G__27463,G__27464,G__27465,G__27466,G__27467,G__27468,G__27469,G__27470,G__27471,G__27472,G__27473));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27474 = a;
var G__27475 = b;
var G__27476 = c;
var G__27477 = d;
var G__27478 = e;
var G__27479 = f;
var G__27480 = g;
var G__27481 = h;
var G__27482 = i;
var G__27483 = j;
var G__27484 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__27474,G__27475,G__27476,G__27477,G__27478,G__27479,G__27480,G__27481,G__27482,G__27483,G__27484) : target_fn.call(null,G__27474,G__27475,G__27476,G__27477,G__27478,G__27479,G__27480,G__27481,G__27482,G__27483,G__27484));
});
var G__28193__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27485 = a;
var G__27486 = b;
var G__27487 = c;
var G__27488 = d;
var G__27489 = e;
var G__27490 = f;
var G__27491 = g;
var G__27492 = h;
var G__27493 = i;
var G__27494 = j;
var G__27495 = k;
var G__27496 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__27485,G__27486,G__27487,G__27488,G__27489,G__27490,G__27491,G__27492,G__27493,G__27494,G__27495,G__27496) : self__.dispatch_fn.call(null,G__27485,G__27486,G__27487,G__27488,G__27489,G__27490,G__27491,G__27492,G__27493,G__27494,G__27495,G__27496));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27497 = a;
var G__27498 = b;
var G__27499 = c;
var G__27500 = d;
var G__27501 = e;
var G__27502 = f;
var G__27503 = g;
var G__27504 = h;
var G__27505 = i;
var G__27506 = j;
var G__27507 = k;
var G__27508 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__27497,G__27498,G__27499,G__27500,G__27501,G__27502,G__27503,G__27504,G__27505,G__27506,G__27507,G__27508) : target_fn.call(null,G__27497,G__27498,G__27499,G__27500,G__27501,G__27502,G__27503,G__27504,G__27505,G__27506,G__27507,G__27508));
});
var G__28193__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27509 = a;
var G__27510 = b;
var G__27511 = c;
var G__27512 = d;
var G__27513 = e;
var G__27514 = f;
var G__27515 = g;
var G__27516 = h;
var G__27517 = i;
var G__27518 = j;
var G__27519 = k;
var G__27520 = l;
var G__27521 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__27509,G__27510,G__27511,G__27512,G__27513,G__27514,G__27515,G__27516,G__27517,G__27518,G__27519,G__27520,G__27521) : self__.dispatch_fn.call(null,G__27509,G__27510,G__27511,G__27512,G__27513,G__27514,G__27515,G__27516,G__27517,G__27518,G__27519,G__27520,G__27521));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27522 = a;
var G__27523 = b;
var G__27524 = c;
var G__27525 = d;
var G__27526 = e;
var G__27527 = f;
var G__27528 = g;
var G__27529 = h;
var G__27530 = i;
var G__27531 = j;
var G__27532 = k;
var G__27533 = l;
var G__27534 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__27522,G__27523,G__27524,G__27525,G__27526,G__27527,G__27528,G__27529,G__27530,G__27531,G__27532,G__27533,G__27534) : target_fn.call(null,G__27522,G__27523,G__27524,G__27525,G__27526,G__27527,G__27528,G__27529,G__27530,G__27531,G__27532,G__27533,G__27534));
});
var G__28193__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27535 = a;
var G__27536 = b;
var G__27537 = c;
var G__27538 = d;
var G__27539 = e;
var G__27540 = f;
var G__27541 = g;
var G__27542 = h;
var G__27543 = i;
var G__27544 = j;
var G__27545 = k;
var G__27546 = l;
var G__27547 = m;
var G__27548 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__27535,G__27536,G__27537,G__27538,G__27539,G__27540,G__27541,G__27542,G__27543,G__27544,G__27545,G__27546,G__27547,G__27548) : self__.dispatch_fn.call(null,G__27535,G__27536,G__27537,G__27538,G__27539,G__27540,G__27541,G__27542,G__27543,G__27544,G__27545,G__27546,G__27547,G__27548));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27549 = a;
var G__27550 = b;
var G__27551 = c;
var G__27552 = d;
var G__27553 = e;
var G__27554 = f;
var G__27555 = g;
var G__27556 = h;
var G__27557 = i;
var G__27558 = j;
var G__27559 = k;
var G__27560 = l;
var G__27561 = m;
var G__27562 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__27549,G__27550,G__27551,G__27552,G__27553,G__27554,G__27555,G__27556,G__27557,G__27558,G__27559,G__27560,G__27561,G__27562) : target_fn.call(null,G__27549,G__27550,G__27551,G__27552,G__27553,G__27554,G__27555,G__27556,G__27557,G__27558,G__27559,G__27560,G__27561,G__27562));
});
var G__28193__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27563 = a;
var G__27564 = b;
var G__27565 = c;
var G__27566 = d;
var G__27567 = e;
var G__27568 = f;
var G__27569 = g;
var G__27570 = h;
var G__27571 = i;
var G__27572 = j;
var G__27573 = k;
var G__27574 = l;
var G__27575 = m;
var G__27576 = n;
var G__27577 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__27563,G__27564,G__27565,G__27566,G__27567,G__27568,G__27569,G__27570,G__27571,G__27572,G__27573,G__27574,G__27575,G__27576,G__27577) : self__.dispatch_fn.call(null,G__27563,G__27564,G__27565,G__27566,G__27567,G__27568,G__27569,G__27570,G__27571,G__27572,G__27573,G__27574,G__27575,G__27576,G__27577));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27578 = a;
var G__27579 = b;
var G__27580 = c;
var G__27581 = d;
var G__27582 = e;
var G__27583 = f;
var G__27584 = g;
var G__27585 = h;
var G__27586 = i;
var G__27587 = j;
var G__27588 = k;
var G__27589 = l;
var G__27590 = m;
var G__27591 = n;
var G__27592 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__27578,G__27579,G__27580,G__27581,G__27582,G__27583,G__27584,G__27585,G__27586,G__27587,G__27588,G__27589,G__27590,G__27591,G__27592) : target_fn.call(null,G__27578,G__27579,G__27580,G__27581,G__27582,G__27583,G__27584,G__27585,G__27586,G__27587,G__27588,G__27589,G__27590,G__27591,G__27592));
});
var G__28193__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27593 = a;
var G__27594 = b;
var G__27595 = c;
var G__27596 = d;
var G__27597 = e;
var G__27598 = f;
var G__27599 = g;
var G__27600 = h;
var G__27601 = i;
var G__27602 = j;
var G__27603 = k;
var G__27604 = l;
var G__27605 = m;
var G__27606 = n;
var G__27607 = o;
var G__27608 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__27593,G__27594,G__27595,G__27596,G__27597,G__27598,G__27599,G__27600,G__27601,G__27602,G__27603,G__27604,G__27605,G__27606,G__27607,G__27608) : self__.dispatch_fn.call(null,G__27593,G__27594,G__27595,G__27596,G__27597,G__27598,G__27599,G__27600,G__27601,G__27602,G__27603,G__27604,G__27605,G__27606,G__27607,G__27608));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27609 = a;
var G__27610 = b;
var G__27611 = c;
var G__27612 = d;
var G__27613 = e;
var G__27614 = f;
var G__27615 = g;
var G__27616 = h;
var G__27617 = i;
var G__27618 = j;
var G__27619 = k;
var G__27620 = l;
var G__27621 = m;
var G__27622 = n;
var G__27623 = o;
var G__27624 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__27609,G__27610,G__27611,G__27612,G__27613,G__27614,G__27615,G__27616,G__27617,G__27618,G__27619,G__27620,G__27621,G__27622,G__27623,G__27624) : target_fn.call(null,G__27609,G__27610,G__27611,G__27612,G__27613,G__27614,G__27615,G__27616,G__27617,G__27618,G__27619,G__27620,G__27621,G__27622,G__27623,G__27624));
});
var G__28193__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27625 = a;
var G__27626 = b;
var G__27627 = c;
var G__27628 = d;
var G__27629 = e;
var G__27630 = f;
var G__27631 = g;
var G__27632 = h;
var G__27633 = i;
var G__27634 = j;
var G__27635 = k;
var G__27636 = l;
var G__27637 = m;
var G__27638 = n;
var G__27639 = o;
var G__27640 = p;
var G__27641 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__27625,G__27626,G__27627,G__27628,G__27629,G__27630,G__27631,G__27632,G__27633,G__27634,G__27635,G__27636,G__27637,G__27638,G__27639,G__27640,G__27641) : self__.dispatch_fn.call(null,G__27625,G__27626,G__27627,G__27628,G__27629,G__27630,G__27631,G__27632,G__27633,G__27634,G__27635,G__27636,G__27637,G__27638,G__27639,G__27640,G__27641));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27642 = a;
var G__27643 = b;
var G__27644 = c;
var G__27645 = d;
var G__27646 = e;
var G__27647 = f;
var G__27648 = g;
var G__27649 = h;
var G__27650 = i;
var G__27651 = j;
var G__27652 = k;
var G__27653 = l;
var G__27654 = m;
var G__27655 = n;
var G__27656 = o;
var G__27657 = p;
var G__27658 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__27642,G__27643,G__27644,G__27645,G__27646,G__27647,G__27648,G__27649,G__27650,G__27651,G__27652,G__27653,G__27654,G__27655,G__27656,G__27657,G__27658) : target_fn.call(null,G__27642,G__27643,G__27644,G__27645,G__27646,G__27647,G__27648,G__27649,G__27650,G__27651,G__27652,G__27653,G__27654,G__27655,G__27656,G__27657,G__27658));
});
var G__28193__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27659 = a;
var G__27660 = b;
var G__27661 = c;
var G__27662 = d;
var G__27663 = e;
var G__27664 = f;
var G__27665 = g;
var G__27666 = h;
var G__27667 = i;
var G__27668 = j;
var G__27669 = k;
var G__27670 = l;
var G__27671 = m;
var G__27672 = n;
var G__27673 = o;
var G__27674 = p;
var G__27675 = q;
var G__27676 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__27659,G__27660,G__27661,G__27662,G__27663,G__27664,G__27665,G__27666,G__27667,G__27668,G__27669,G__27670,G__27671,G__27672,G__27673,G__27674,G__27675,G__27676) : self__.dispatch_fn.call(null,G__27659,G__27660,G__27661,G__27662,G__27663,G__27664,G__27665,G__27666,G__27667,G__27668,G__27669,G__27670,G__27671,G__27672,G__27673,G__27674,G__27675,G__27676));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27677 = a;
var G__27678 = b;
var G__27679 = c;
var G__27680 = d;
var G__27681 = e;
var G__27682 = f;
var G__27683 = g;
var G__27684 = h;
var G__27685 = i;
var G__27686 = j;
var G__27687 = k;
var G__27688 = l;
var G__27689 = m;
var G__27690 = n;
var G__27691 = o;
var G__27692 = p;
var G__27693 = q;
var G__27694 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__27677,G__27678,G__27679,G__27680,G__27681,G__27682,G__27683,G__27684,G__27685,G__27686,G__27687,G__27688,G__27689,G__27690,G__27691,G__27692,G__27693,G__27694) : target_fn.call(null,G__27677,G__27678,G__27679,G__27680,G__27681,G__27682,G__27683,G__27684,G__27685,G__27686,G__27687,G__27688,G__27689,G__27690,G__27691,G__27692,G__27693,G__27694));
});
var G__28193__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27695 = a;
var G__27696 = b;
var G__27697 = c;
var G__27698 = d;
var G__27699 = e;
var G__27700 = f;
var G__27701 = g;
var G__27702 = h;
var G__27703 = i;
var G__27704 = j;
var G__27705 = k;
var G__27706 = l;
var G__27707 = m;
var G__27708 = n;
var G__27709 = o;
var G__27710 = p;
var G__27711 = q;
var G__27712 = r;
var G__27713 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__27695,G__27696,G__27697,G__27698,G__27699,G__27700,G__27701,G__27702,G__27703,G__27704,G__27705,G__27706,G__27707,G__27708,G__27709,G__27710,G__27711,G__27712,G__27713) : self__.dispatch_fn.call(null,G__27695,G__27696,G__27697,G__27698,G__27699,G__27700,G__27701,G__27702,G__27703,G__27704,G__27705,G__27706,G__27707,G__27708,G__27709,G__27710,G__27711,G__27712,G__27713));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27714 = a;
var G__27715 = b;
var G__27716 = c;
var G__27717 = d;
var G__27718 = e;
var G__27719 = f;
var G__27720 = g;
var G__27721 = h;
var G__27722 = i;
var G__27723 = j;
var G__27724 = k;
var G__27725 = l;
var G__27726 = m;
var G__27727 = n;
var G__27728 = o;
var G__27729 = p;
var G__27730 = q;
var G__27731 = r;
var G__27732 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__27714,G__27715,G__27716,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723,G__27724,G__27725,G__27726,G__27727,G__27728,G__27729,G__27730,G__27731,G__27732) : target_fn.call(null,G__27714,G__27715,G__27716,G__27717,G__27718,G__27719,G__27720,G__27721,G__27722,G__27723,G__27724,G__27725,G__27726,G__27727,G__27728,G__27729,G__27730,G__27731,G__27732));
});
var G__28193__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27733 = a;
var G__27734 = b;
var G__27735 = c;
var G__27736 = d;
var G__27737 = e;
var G__27738 = f;
var G__27739 = g;
var G__27740 = h;
var G__27741 = i;
var G__27742 = j;
var G__27743 = k;
var G__27744 = l;
var G__27745 = m;
var G__27746 = n;
var G__27747 = o;
var G__27748 = p;
var G__27749 = q;
var G__27750 = r;
var G__27751 = s;
var G__27752 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740,G__27741,G__27742,G__27743,G__27744,G__27745,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752) : self__.dispatch_fn.call(null,G__27733,G__27734,G__27735,G__27736,G__27737,G__27738,G__27739,G__27740,G__27741,G__27742,G__27743,G__27744,G__27745,G__27746,G__27747,G__27748,G__27749,G__27750,G__27751,G__27752));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27753 = a;
var G__27754 = b;
var G__27755 = c;
var G__27756 = d;
var G__27757 = e;
var G__27758 = f;
var G__27759 = g;
var G__27760 = h;
var G__27761 = i;
var G__27762 = j;
var G__27763 = k;
var G__27764 = l;
var G__27765 = m;
var G__27766 = n;
var G__27767 = o;
var G__27768 = p;
var G__27769 = q;
var G__27770 = r;
var G__27771 = s;
var G__27772 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__27753,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762,G__27763,G__27764,G__27765,G__27766,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772) : target_fn.call(null,G__27753,G__27754,G__27755,G__27756,G__27757,G__27758,G__27759,G__27760,G__27761,G__27762,G__27763,G__27764,G__27765,G__27766,G__27767,G__27768,G__27769,G__27770,G__27771,G__27772));
});
var G__28193__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__28193 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28193__1.call(this,self__);
case 2:
return G__28193__2.call(this,self__,a);
case 3:
return G__28193__3.call(this,self__,a,b);
case 4:
return G__28193__4.call(this,self__,a,b,c);
case 5:
return G__28193__5.call(this,self__,a,b,c,d);
case 6:
return G__28193__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28193__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28193__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28193__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28193__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28193__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28193__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28193__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28193__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28193__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28193__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28193__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28193__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28193__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28193__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28193__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28193__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28193.cljs$core$IFn$_invoke$arity$1 = G__28193__1;
G__28193.cljs$core$IFn$_invoke$arity$2 = G__28193__2;
G__28193.cljs$core$IFn$_invoke$arity$3 = G__28193__3;
G__28193.cljs$core$IFn$_invoke$arity$4 = G__28193__4;
G__28193.cljs$core$IFn$_invoke$arity$5 = G__28193__5;
G__28193.cljs$core$IFn$_invoke$arity$6 = G__28193__6;
G__28193.cljs$core$IFn$_invoke$arity$7 = G__28193__7;
G__28193.cljs$core$IFn$_invoke$arity$8 = G__28193__8;
G__28193.cljs$core$IFn$_invoke$arity$9 = G__28193__9;
G__28193.cljs$core$IFn$_invoke$arity$10 = G__28193__10;
G__28193.cljs$core$IFn$_invoke$arity$11 = G__28193__11;
G__28193.cljs$core$IFn$_invoke$arity$12 = G__28193__12;
G__28193.cljs$core$IFn$_invoke$arity$13 = G__28193__13;
G__28193.cljs$core$IFn$_invoke$arity$14 = G__28193__14;
G__28193.cljs$core$IFn$_invoke$arity$15 = G__28193__15;
G__28193.cljs$core$IFn$_invoke$arity$16 = G__28193__16;
G__28193.cljs$core$IFn$_invoke$arity$17 = G__28193__17;
G__28193.cljs$core$IFn$_invoke$arity$18 = G__28193__18;
G__28193.cljs$core$IFn$_invoke$arity$19 = G__28193__19;
G__28193.cljs$core$IFn$_invoke$arity$20 = G__28193__20;
G__28193.cljs$core$IFn$_invoke$arity$21 = G__28193__21;
G__28193.cljs$core$IFn$_invoke$arity$22 = G__28193__22;
return G__28193;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args27345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27345)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27773 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__27773) : self__.dispatch_fn.call(null,G__27773));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27774 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__27774) : target_fn.call(null,G__27774));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27775 = a;
var G__27776 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__27775,G__27776) : self__.dispatch_fn.call(null,G__27775,G__27776));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27777 = a;
var G__27778 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__27777,G__27778) : target_fn.call(null,G__27777,G__27778));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27779 = a;
var G__27780 = b;
var G__27781 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__27779,G__27780,G__27781) : self__.dispatch_fn.call(null,G__27779,G__27780,G__27781));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27782 = a;
var G__27783 = b;
var G__27784 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__27782,G__27783,G__27784) : target_fn.call(null,G__27782,G__27783,G__27784));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27785 = a;
var G__27786 = b;
var G__27787 = c;
var G__27788 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__27785,G__27786,G__27787,G__27788) : self__.dispatch_fn.call(null,G__27785,G__27786,G__27787,G__27788));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27789 = a;
var G__27790 = b;
var G__27791 = c;
var G__27792 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__27789,G__27790,G__27791,G__27792) : target_fn.call(null,G__27789,G__27790,G__27791,G__27792));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27793 = a;
var G__27794 = b;
var G__27795 = c;
var G__27796 = d;
var G__27797 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__27793,G__27794,G__27795,G__27796,G__27797) : self__.dispatch_fn.call(null,G__27793,G__27794,G__27795,G__27796,G__27797));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27798 = a;
var G__27799 = b;
var G__27800 = c;
var G__27801 = d;
var G__27802 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__27798,G__27799,G__27800,G__27801,G__27802) : target_fn.call(null,G__27798,G__27799,G__27800,G__27801,G__27802));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27803 = a;
var G__27804 = b;
var G__27805 = c;
var G__27806 = d;
var G__27807 = e;
var G__27808 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__27803,G__27804,G__27805,G__27806,G__27807,G__27808) : self__.dispatch_fn.call(null,G__27803,G__27804,G__27805,G__27806,G__27807,G__27808));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27809 = a;
var G__27810 = b;
var G__27811 = c;
var G__27812 = d;
var G__27813 = e;
var G__27814 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__27809,G__27810,G__27811,G__27812,G__27813,G__27814) : target_fn.call(null,G__27809,G__27810,G__27811,G__27812,G__27813,G__27814));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27815 = a;
var G__27816 = b;
var G__27817 = c;
var G__27818 = d;
var G__27819 = e;
var G__27820 = f;
var G__27821 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__27815,G__27816,G__27817,G__27818,G__27819,G__27820,G__27821) : self__.dispatch_fn.call(null,G__27815,G__27816,G__27817,G__27818,G__27819,G__27820,G__27821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27822 = a;
var G__27823 = b;
var G__27824 = c;
var G__27825 = d;
var G__27826 = e;
var G__27827 = f;
var G__27828 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__27822,G__27823,G__27824,G__27825,G__27826,G__27827,G__27828) : target_fn.call(null,G__27822,G__27823,G__27824,G__27825,G__27826,G__27827,G__27828));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27829 = a;
var G__27830 = b;
var G__27831 = c;
var G__27832 = d;
var G__27833 = e;
var G__27834 = f;
var G__27835 = g;
var G__27836 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__27829,G__27830,G__27831,G__27832,G__27833,G__27834,G__27835,G__27836) : self__.dispatch_fn.call(null,G__27829,G__27830,G__27831,G__27832,G__27833,G__27834,G__27835,G__27836));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27837 = a;
var G__27838 = b;
var G__27839 = c;
var G__27840 = d;
var G__27841 = e;
var G__27842 = f;
var G__27843 = g;
var G__27844 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__27837,G__27838,G__27839,G__27840,G__27841,G__27842,G__27843,G__27844) : target_fn.call(null,G__27837,G__27838,G__27839,G__27840,G__27841,G__27842,G__27843,G__27844));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27845 = a;
var G__27846 = b;
var G__27847 = c;
var G__27848 = d;
var G__27849 = e;
var G__27850 = f;
var G__27851 = g;
var G__27852 = h;
var G__27853 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__27845,G__27846,G__27847,G__27848,G__27849,G__27850,G__27851,G__27852,G__27853) : self__.dispatch_fn.call(null,G__27845,G__27846,G__27847,G__27848,G__27849,G__27850,G__27851,G__27852,G__27853));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27854 = a;
var G__27855 = b;
var G__27856 = c;
var G__27857 = d;
var G__27858 = e;
var G__27859 = f;
var G__27860 = g;
var G__27861 = h;
var G__27862 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__27854,G__27855,G__27856,G__27857,G__27858,G__27859,G__27860,G__27861,G__27862) : target_fn.call(null,G__27854,G__27855,G__27856,G__27857,G__27858,G__27859,G__27860,G__27861,G__27862));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27863 = a;
var G__27864 = b;
var G__27865 = c;
var G__27866 = d;
var G__27867 = e;
var G__27868 = f;
var G__27869 = g;
var G__27870 = h;
var G__27871 = i;
var G__27872 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869,G__27870,G__27871,G__27872) : self__.dispatch_fn.call(null,G__27863,G__27864,G__27865,G__27866,G__27867,G__27868,G__27869,G__27870,G__27871,G__27872));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27873 = a;
var G__27874 = b;
var G__27875 = c;
var G__27876 = d;
var G__27877 = e;
var G__27878 = f;
var G__27879 = g;
var G__27880 = h;
var G__27881 = i;
var G__27882 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__27873,G__27874,G__27875,G__27876,G__27877,G__27878,G__27879,G__27880,G__27881,G__27882) : target_fn.call(null,G__27873,G__27874,G__27875,G__27876,G__27877,G__27878,G__27879,G__27880,G__27881,G__27882));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27883 = a;
var G__27884 = b;
var G__27885 = c;
var G__27886 = d;
var G__27887 = e;
var G__27888 = f;
var G__27889 = g;
var G__27890 = h;
var G__27891 = i;
var G__27892 = j;
var G__27893 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__27883,G__27884,G__27885,G__27886,G__27887,G__27888,G__27889,G__27890,G__27891,G__27892,G__27893) : self__.dispatch_fn.call(null,G__27883,G__27884,G__27885,G__27886,G__27887,G__27888,G__27889,G__27890,G__27891,G__27892,G__27893));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27894 = a;
var G__27895 = b;
var G__27896 = c;
var G__27897 = d;
var G__27898 = e;
var G__27899 = f;
var G__27900 = g;
var G__27901 = h;
var G__27902 = i;
var G__27903 = j;
var G__27904 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__27894,G__27895,G__27896,G__27897,G__27898,G__27899,G__27900,G__27901,G__27902,G__27903,G__27904) : target_fn.call(null,G__27894,G__27895,G__27896,G__27897,G__27898,G__27899,G__27900,G__27901,G__27902,G__27903,G__27904));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27905 = a;
var G__27906 = b;
var G__27907 = c;
var G__27908 = d;
var G__27909 = e;
var G__27910 = f;
var G__27911 = g;
var G__27912 = h;
var G__27913 = i;
var G__27914 = j;
var G__27915 = k;
var G__27916 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__27905,G__27906,G__27907,G__27908,G__27909,G__27910,G__27911,G__27912,G__27913,G__27914,G__27915,G__27916) : self__.dispatch_fn.call(null,G__27905,G__27906,G__27907,G__27908,G__27909,G__27910,G__27911,G__27912,G__27913,G__27914,G__27915,G__27916));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27917 = a;
var G__27918 = b;
var G__27919 = c;
var G__27920 = d;
var G__27921 = e;
var G__27922 = f;
var G__27923 = g;
var G__27924 = h;
var G__27925 = i;
var G__27926 = j;
var G__27927 = k;
var G__27928 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__27917,G__27918,G__27919,G__27920,G__27921,G__27922,G__27923,G__27924,G__27925,G__27926,G__27927,G__27928) : target_fn.call(null,G__27917,G__27918,G__27919,G__27920,G__27921,G__27922,G__27923,G__27924,G__27925,G__27926,G__27927,G__27928));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27929 = a;
var G__27930 = b;
var G__27931 = c;
var G__27932 = d;
var G__27933 = e;
var G__27934 = f;
var G__27935 = g;
var G__27936 = h;
var G__27937 = i;
var G__27938 = j;
var G__27939 = k;
var G__27940 = l;
var G__27941 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__27929,G__27930,G__27931,G__27932,G__27933,G__27934,G__27935,G__27936,G__27937,G__27938,G__27939,G__27940,G__27941) : self__.dispatch_fn.call(null,G__27929,G__27930,G__27931,G__27932,G__27933,G__27934,G__27935,G__27936,G__27937,G__27938,G__27939,G__27940,G__27941));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27942 = a;
var G__27943 = b;
var G__27944 = c;
var G__27945 = d;
var G__27946 = e;
var G__27947 = f;
var G__27948 = g;
var G__27949 = h;
var G__27950 = i;
var G__27951 = j;
var G__27952 = k;
var G__27953 = l;
var G__27954 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__27942,G__27943,G__27944,G__27945,G__27946,G__27947,G__27948,G__27949,G__27950,G__27951,G__27952,G__27953,G__27954) : target_fn.call(null,G__27942,G__27943,G__27944,G__27945,G__27946,G__27947,G__27948,G__27949,G__27950,G__27951,G__27952,G__27953,G__27954));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27955 = a;
var G__27956 = b;
var G__27957 = c;
var G__27958 = d;
var G__27959 = e;
var G__27960 = f;
var G__27961 = g;
var G__27962 = h;
var G__27963 = i;
var G__27964 = j;
var G__27965 = k;
var G__27966 = l;
var G__27967 = m;
var G__27968 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__27955,G__27956,G__27957,G__27958,G__27959,G__27960,G__27961,G__27962,G__27963,G__27964,G__27965,G__27966,G__27967,G__27968) : self__.dispatch_fn.call(null,G__27955,G__27956,G__27957,G__27958,G__27959,G__27960,G__27961,G__27962,G__27963,G__27964,G__27965,G__27966,G__27967,G__27968));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27969 = a;
var G__27970 = b;
var G__27971 = c;
var G__27972 = d;
var G__27973 = e;
var G__27974 = f;
var G__27975 = g;
var G__27976 = h;
var G__27977 = i;
var G__27978 = j;
var G__27979 = k;
var G__27980 = l;
var G__27981 = m;
var G__27982 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__27969,G__27970,G__27971,G__27972,G__27973,G__27974,G__27975,G__27976,G__27977,G__27978,G__27979,G__27980,G__27981,G__27982) : target_fn.call(null,G__27969,G__27970,G__27971,G__27972,G__27973,G__27974,G__27975,G__27976,G__27977,G__27978,G__27979,G__27980,G__27981,G__27982));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27983 = a;
var G__27984 = b;
var G__27985 = c;
var G__27986 = d;
var G__27987 = e;
var G__27988 = f;
var G__27989 = g;
var G__27990 = h;
var G__27991 = i;
var G__27992 = j;
var G__27993 = k;
var G__27994 = l;
var G__27995 = m;
var G__27996 = n;
var G__27997 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__27983,G__27984,G__27985,G__27986,G__27987,G__27988,G__27989,G__27990,G__27991,G__27992,G__27993,G__27994,G__27995,G__27996,G__27997) : self__.dispatch_fn.call(null,G__27983,G__27984,G__27985,G__27986,G__27987,G__27988,G__27989,G__27990,G__27991,G__27992,G__27993,G__27994,G__27995,G__27996,G__27997));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27998 = a;
var G__27999 = b;
var G__28000 = c;
var G__28001 = d;
var G__28002 = e;
var G__28003 = f;
var G__28004 = g;
var G__28005 = h;
var G__28006 = i;
var G__28007 = j;
var G__28008 = k;
var G__28009 = l;
var G__28010 = m;
var G__28011 = n;
var G__28012 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__27998,G__27999,G__28000,G__28001,G__28002,G__28003,G__28004,G__28005,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011,G__28012) : target_fn.call(null,G__27998,G__27999,G__28000,G__28001,G__28002,G__28003,G__28004,G__28005,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011,G__28012));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28013 = a;
var G__28014 = b;
var G__28015 = c;
var G__28016 = d;
var G__28017 = e;
var G__28018 = f;
var G__28019 = g;
var G__28020 = h;
var G__28021 = i;
var G__28022 = j;
var G__28023 = k;
var G__28024 = l;
var G__28025 = m;
var G__28026 = n;
var G__28027 = o;
var G__28028 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28013,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020,G__28021,G__28022,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028) : self__.dispatch_fn.call(null,G__28013,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020,G__28021,G__28022,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28029 = a;
var G__28030 = b;
var G__28031 = c;
var G__28032 = d;
var G__28033 = e;
var G__28034 = f;
var G__28035 = g;
var G__28036 = h;
var G__28037 = i;
var G__28038 = j;
var G__28039 = k;
var G__28040 = l;
var G__28041 = m;
var G__28042 = n;
var G__28043 = o;
var G__28044 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28029,G__28030,G__28031,G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041,G__28042,G__28043,G__28044) : target_fn.call(null,G__28029,G__28030,G__28031,G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041,G__28042,G__28043,G__28044));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28045 = a;
var G__28046 = b;
var G__28047 = c;
var G__28048 = d;
var G__28049 = e;
var G__28050 = f;
var G__28051 = g;
var G__28052 = h;
var G__28053 = i;
var G__28054 = j;
var G__28055 = k;
var G__28056 = l;
var G__28057 = m;
var G__28058 = n;
var G__28059 = o;
var G__28060 = p;
var G__28061 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053,G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061) : self__.dispatch_fn.call(null,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053,G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28062 = a;
var G__28063 = b;
var G__28064 = c;
var G__28065 = d;
var G__28066 = e;
var G__28067 = f;
var G__28068 = g;
var G__28069 = h;
var G__28070 = i;
var G__28071 = j;
var G__28072 = k;
var G__28073 = l;
var G__28074 = m;
var G__28075 = n;
var G__28076 = o;
var G__28077 = p;
var G__28078 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068,G__28069,G__28070,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078) : target_fn.call(null,G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068,G__28069,G__28070,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28079 = a;
var G__28080 = b;
var G__28081 = c;
var G__28082 = d;
var G__28083 = e;
var G__28084 = f;
var G__28085 = g;
var G__28086 = h;
var G__28087 = i;
var G__28088 = j;
var G__28089 = k;
var G__28090 = l;
var G__28091 = m;
var G__28092 = n;
var G__28093 = o;
var G__28094 = p;
var G__28095 = q;
var G__28096 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28079,G__28080,G__28081,G__28082,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095,G__28096) : self__.dispatch_fn.call(null,G__28079,G__28080,G__28081,G__28082,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095,G__28096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28097 = a;
var G__28098 = b;
var G__28099 = c;
var G__28100 = d;
var G__28101 = e;
var G__28102 = f;
var G__28103 = g;
var G__28104 = h;
var G__28105 = i;
var G__28106 = j;
var G__28107 = k;
var G__28108 = l;
var G__28109 = m;
var G__28110 = n;
var G__28111 = o;
var G__28112 = p;
var G__28113 = q;
var G__28114 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28097,G__28098,G__28099,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110,G__28111,G__28112,G__28113,G__28114) : target_fn.call(null,G__28097,G__28098,G__28099,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110,G__28111,G__28112,G__28113,G__28114));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28115 = a;
var G__28116 = b;
var G__28117 = c;
var G__28118 = d;
var G__28119 = e;
var G__28120 = f;
var G__28121 = g;
var G__28122 = h;
var G__28123 = i;
var G__28124 = j;
var G__28125 = k;
var G__28126 = l;
var G__28127 = m;
var G__28128 = n;
var G__28129 = o;
var G__28130 = p;
var G__28131 = q;
var G__28132 = r;
var G__28133 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128,G__28129,G__28130,G__28131,G__28132,G__28133) : self__.dispatch_fn.call(null,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128,G__28129,G__28130,G__28131,G__28132,G__28133));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28134 = a;
var G__28135 = b;
var G__28136 = c;
var G__28137 = d;
var G__28138 = e;
var G__28139 = f;
var G__28140 = g;
var G__28141 = h;
var G__28142 = i;
var G__28143 = j;
var G__28144 = k;
var G__28145 = l;
var G__28146 = m;
var G__28147 = n;
var G__28148 = o;
var G__28149 = p;
var G__28150 = q;
var G__28151 = r;
var G__28152 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145,G__28146,G__28147,G__28148,G__28149,G__28150,G__28151,G__28152) : target_fn.call(null,G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145,G__28146,G__28147,G__28148,G__28149,G__28150,G__28151,G__28152));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28153 = a;
var G__28154 = b;
var G__28155 = c;
var G__28156 = d;
var G__28157 = e;
var G__28158 = f;
var G__28159 = g;
var G__28160 = h;
var G__28161 = i;
var G__28162 = j;
var G__28163 = k;
var G__28164 = l;
var G__28165 = m;
var G__28166 = n;
var G__28167 = o;
var G__28168 = p;
var G__28169 = q;
var G__28170 = r;
var G__28171 = s;
var G__28172 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169,G__28170,G__28171,G__28172) : self__.dispatch_fn.call(null,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169,G__28170,G__28171,G__28172));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28173 = a;
var G__28174 = b;
var G__28175 = c;
var G__28176 = d;
var G__28177 = e;
var G__28178 = f;
var G__28179 = g;
var G__28180 = h;
var G__28181 = i;
var G__28182 = j;
var G__28183 = k;
var G__28184 = l;
var G__28185 = m;
var G__28186 = n;
var G__28187 = o;
var G__28188 = p;
var G__28189 = q;
var G__28190 = r;
var G__28191 = s;
var G__28192 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191,G__28192) : target_fn.call(null,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191,G__28192));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28194 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__28194);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__15028__auto__,writer__15029__auto__,opt__15030__auto__){
return cljs.core._write(writer__15029__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__28199 = msg;
return Error(G__28199);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__28204 = x;
var G__28205 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28204,G__28205) : pred.call(null,G__28204,G__28205));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28206 = y;
var G__28207 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28206,G__28207) : pred.call(null,G__28206,G__28207));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map